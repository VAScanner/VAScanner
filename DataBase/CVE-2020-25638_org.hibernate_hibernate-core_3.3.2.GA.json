{
    "org.hibernate.sql.Insert:java.lang.String toStatementString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateInsertRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])",
            "org.hibernate.id.insert.InsertSelectIdentityInsert:java.lang.String toStatementString()"
        ]
    },
    "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.sql.QuerySelect:java.lang.String toQueryString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.sql.Delete:java.lang.String toStatementString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateDeleteString()",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateDeleteRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateDeleteString(int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] generateSQLDeletStrings(java.lang.Object[])",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.sql.Select:java.lang.String toStatementString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateGeneratedValuesSelectString(org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSnapshotSelectString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String renderSelect(int[],int[],int[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectSizeString(boolean)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByElementString()",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSelectVersionString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getSelectByUniqueKeyString(java.lang.String)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:java.lang.String generateLockString()"
        ]
    },
    "org.hibernate.sql.Update:java.lang.String toStatementString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateUpdateRowString()",
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateDeleteString()",
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateInsertRowString()",
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateDeleteRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateVersionIncrementUpdateString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:java.lang.String generateLockString()",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateInsertRowString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean[],int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[])"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.id.insert.InsertSelectIdentityInsert:java.lang.String toStatementString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateInsertRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile()"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateDeleteString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateDeleteRowString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateDeleteString(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] generateSQLDeletStrings(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.exec.StatementExecutor buildAppropriateStatementExecutor(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateGeneratedValuesSelectString(org.hibernate.engine.ValueInclusion[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertGeneratedValuesSelectString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateGeneratedValuesSelectString()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSnapshotSelectString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String renderSelect(int[],int[],int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String generateSequentialSelect(org.hibernate.persister.entity.Loadable)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateLazySelectString()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getNaturalIdSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.AbstractEntityJoinWalker:void initProjection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectSizeString(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByIndexString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectRowByIndexString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByElementString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSelectVersionString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getSelectByUniqueKeyString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void <init>(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,java.lang.String)"
        ]
    },
    "org.hibernate.dialect.lock.SelectLockingStrategy:java.lang.String generateLockString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.lock.SelectLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateUpdateRowString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateDeleteString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateInsertRowString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateDeleteRowString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateVersionIncrementUpdateString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.lock.UpdateLockingStrategy:java.lang.String generateLockString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.exec.StatementExecutor buildAppropriateStatementExecutor(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void compile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(java.util.Map,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.String,java.lang.Object)",
            "org.hibernate.action.EntityDeleteAction:void execute()"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.exec.StatementExecutor buildAppropriateStatementExecutor(org.hibernate.hql.ast.HqlSqlWalker)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:void doCompile(java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertGeneratedValuesSelectString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateGeneratedValuesSelectString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String generateSequentialSelect(org.hibernate.persister.entity.Loadable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateLazySelectString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getNaturalIdSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkNaturalId(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityEntry,java.lang.Object[],java.lang.Object[],org.hibernate.EntityMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.OneToManyJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.collection.BasicCollectionJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.AbstractEntityJoinWalker:void initProjection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.AbstractEntityJoinWalker:void initAll(java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void <init>(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void <init>(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.id.SelectGenerator$1)"
        ]
    },
    "org.hibernate.dialect.lock.SelectLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.TimesTenDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.FrontBaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.PointbaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.RDMSOS2200Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.Cache71Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.MckoiDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.action.EntityUpdateAction:void execute()"
        ]
    },
    "org.hibernate.dialect.lock.UpdateLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.TimesTenDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.FrontBaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.PointbaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.RDMSOS2200Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.Cache71Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.MckoiDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.PersisterFactory:org.hibernate.persister.collection.CollectionPersister createCollectionPersister(org.hibernate.cfg.Configuration,org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.PersisterFactory:org.hibernate.persister.collection.CollectionPersister createCollectionPersister(org.hibernate.cfg.Configuration,org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.action.EntityIdentityInsertAction:void execute()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.PersisterFactory:org.hibernate.persister.entity.EntityPersister createClassPersister(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.PersisterFactory:org.hibernate.persister.entity.EntityPersister createClassPersister(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.PersisterFactory:org.hibernate.persister.entity.EntityPersister createClassPersister(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(java.lang.String,java.util.Map,boolean)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.Object)"
        ]
    },
    "org.hibernate.action.EntityDeleteAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:void doCompile(java.util.Map,boolean,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:void compile(java.util.Map,boolean)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void compile(java.lang.String,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkNaturalId(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityEntry,java.lang.Object[],java.lang.Object[],org.hibernate.EntityMode,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getValues(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.EntityMode,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)",
            "org.hibernate.criterion.SubqueryExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.AbstractEntityJoinWalker:void initAll(java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.EntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.CascadeEntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void <init>(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.id.SelectGenerator$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.SelectGenerator:org.hibernate.id.insert.InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,boolean)"
        ]
    },
    "org.hibernate.dialect.TimesTenDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.FrontBaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.PointbaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.HSQLDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.RDMSOS2200Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.MckoiDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.Object)"
        ]
    },
    "org.hibernate.action.EntityUpdateAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.persister.PersisterFactory:org.hibernate.persister.collection.CollectionPersister createCollectionPersister(org.hibernate.cfg.Configuration,org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.Object)"
        ]
    },
    "org.hibernate.action.EntityIdentityInsertAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.action.EntityInsertAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.persister.PersisterFactory:org.hibernate.persister.entity.EntityPersister createClassPersister(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void start(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(java.lang.String,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.FilterQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:void compile(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:void compile(java.lang.String,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getValues(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.EntityMode,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:org.hibernate.loader.collection.CollectionInitializer createBatchingOneToManyInitializer(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:org.hibernate.loader.collection.CollectionInitializer createBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.criterion.SubqueryExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.entity.EntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.CollectionElementLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],org.hibernate.type.Type,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.entity.CascadeEntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.CascadeEntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.id.SelectGenerator:org.hibernate.id.insert.InsertGeneratedIdentifierDelegate getInsertGeneratedIdentifierDelegate(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()"
        ]
    },
    "org.hibernate.dialect.HSQLDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy generateLocker(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object doLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireLock(org.hibernate.event.LockEvent)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.WhereParser:void start(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile()",
            "org.hibernate.hql.classic.GroupByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.query.FilterQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.String,java.lang.String,boolean,java.util.Map)"
        ]
    },
    "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.HQLQueryPlan getHQLQueryPlan(java.lang.String,boolean,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void executeInserts()",
            "org.hibernate.engine.ActionQueue:void executeActions()"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEntities(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.loader.collection.BatchingCollectionInitializer:org.hibernate.loader.collection.CollectionInitializer createBatchingOneToManyInitializer(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:org.hibernate.loader.collection.CollectionInitializer createCollectionInitializer(java.util.Map)"
        ]
    },
    "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:org.hibernate.loader.collection.CollectionInitializer createBatchingOneToManyInitializer(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.BatchingCollectionInitializer:org.hibernate.loader.collection.CollectionInitializer createBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:org.hibernate.loader.collection.CollectionInitializer createCollectionInitializer(java.util.Map)"
        ]
    },
    "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:org.hibernate.loader.collection.CollectionInitializer createBatchingCollectionInitializer(org.hibernate.persister.collection.QueryableCollection,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendComponentCondition(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)"
        ]
    },
    "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.NaturalIdentifier:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.entity.CollectionElementLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],org.hibernate.type.Type,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader createUniqueKeyLoader(org.hibernate.type.Type,java.lang.String[],java.util.Map)",
            "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.loader.entity.CascadeEntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object doLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireLock(org.hibernate.event.LockEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void lock(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionImpl:void lock(java.lang.Object,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PreprocessingParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PreprocessingParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.GroupByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.String,java.lang.String,boolean,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.HQLQueryPlan getHQLQueryPlan(java.lang.String,boolean,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.engine.query.HQLQueryPlan getHQLQueryPlan(java.lang.String,boolean)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type[] getReturnTypes(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getReturnAliases(java.lang.String)"
        ]
    },
    "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireReplicate(org.hibernate.event.ReplicateEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithRequestedId(java.lang.Object,java.io.Serializable,java.lang.String,java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void executeInserts()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void executeActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void performExecutions(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void flushEntities(org.hibernate.event.FlushEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:org.hibernate.loader.collection.CollectionInitializer createCollectionInitializer(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void postInstantiate()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:org.hibernate.loader.collection.CollectionInitializer createCollectionInitializer(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void postInstantiate()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:java.util.List list()"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:java.util.List list()"
        ]
    },
    "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Example:void appendComponentCondition(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendComponentCondition(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)"
        ]
    },
    "org.hibernate.criterion.NaturalIdentifier:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader createUniqueKeyLoader(org.hibernate.type.Type,java.lang.String[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()"
        ]
    },
    "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.BatchingEntityLoader:org.hibernate.loader.entity.UniqueEntityLoader createBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postInstantiate()"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object returnNarrowedProxy(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext,java.lang.Object)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void lock(java.lang.String,java.lang.Object,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$2:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void lock(java.lang.Object,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object getEntityUsingInterceptor(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createFilter(java.lang.Object,java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.util.List listFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterateFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.engine.query.HQLQueryPlan getHQLQueryPlan(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query createQuery(java.lang.String)",
            "org.hibernate.impl.StatelessSessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type[] getReturnTypes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type[] getReturnTypes()"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getReturnAliases(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String[] getReturnAliases()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireReplicate(org.hibernate.event.ReplicateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void replicate(java.lang.Object,org.hibernate.ReplicationMode)",
            "org.hibernate.impl.SessionImpl:void replicate(java.lang.String,java.lang.Object,org.hibernate.ReplicationMode)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithRequestedId(java.lang.Object,java.io.Serializable,java.lang.String,java.lang.Object,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable saveWithGeneratedOrRequestedId(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable saveWithGeneratedOrRequestedId(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void performExecutions(org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEventListener:void onFlush(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDirtyCheckEventListener:void onDirtyCheck(org.hibernate.event.DirtyCheckEvent)",
            "org.hibernate.event.def.DefaultFlushEventListener:void onFlush(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void postInstantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll()",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:java.util.List list()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:java.lang.Object uniqueResult()",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:java.util.List list()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postInstantiate()"
        ]
    },
    "org.hibernate.loader.entity.BatchingEntityLoader:org.hibernate.loader.entity.UniqueEntityLoader createBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader createEntityLoader(org.hibernate.LockMode,java.util.Map)"
        ]
    },
    "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.BatchingEntityLoader:org.hibernate.loader.entity.UniqueEntityLoader createBatchingEntityLoader(org.hibernate.persister.entity.OuterJoinLoadable,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void postInstantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object returnNarrowedProxy(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.engine.CascadingAction$2:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object getEntityUsingInterceptor(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object[] getRow(java.sql.ResultSet,org.hibernate.persister.entity.Loadable[],org.hibernate.engine.EntityKey[],java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.LockMode[],java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Query createFilter(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.List listFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CollectionFilterImpl:java.util.List list()",
            "org.hibernate.impl.SessionImpl:java.util.Collection filter(java.lang.Object,java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.util.Collection filter(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.SessionImpl:java.util.Collection filter(java.lang.Object,java.lang.String,java.lang.Object[],org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.Iterator iterateFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CollectionFilterImpl:java.util.Iterator iterate()"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query createQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createQuery(java.lang.String)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.QueryImpl:java.util.List list()"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.util.List find(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.util.List find(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.SessionImpl:java.util.List find(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.impl.QueryImpl:java.util.List list()"
        ]
    },
    "org.hibernate.impl.SessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type[] getReturnTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.String[] getReturnAliases()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void replicate(java.lang.Object,org.hibernate.ReplicationMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void replicate(java.lang.String,java.lang.Object,org.hibernate.ReplicationMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$10:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable saveWithGeneratedOrRequestedId(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsTransient(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable saveWithGeneratedOrRequestedId(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable saveWithGeneratedOrRequestedId(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsTransient(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEventListener:void onFlush(org.hibernate.event.FlushEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void flush()"
        ]
    },
    "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:boolean autoFlushIfRequired(java.util.Set)"
        ]
    },
    "org.hibernate.event.def.DefaultDirtyCheckEventListener:void onDirtyCheck(org.hibernate.event.DirtyCheckEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:boolean isDirty()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.ScrollableResults scroll()"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:java.lang.Object uniqueResult()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:java.lang.Object uniqueResult()"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:java.util.List list()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentList:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object get(int)",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.PersistentList:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.AbstractPersistentCollection$1:java.lang.Object next()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object get(int)",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST lookupNonQualifiedProperty(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.Constraint:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.Projection getProjection(int)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Set:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList$Remove:void operate()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass getClass(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Collection getCollection(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table getTable(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.NamedQueryDefinition getQuery(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.TypeDef getTypeDef(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass locatePersistentClassByEntityName(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:java.lang.String getPhysicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.PersistentClass getClassMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.Collection getCollectionMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:java.lang.String getIdentifierPropertyName(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getIdentifier(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] getCollectionPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSequentialSelect(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy getLocker(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] getColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:java.lang.Object getParameter(java.lang.String)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.FetchMode getFetchMode(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getCollectionRolesByEntityParticipant(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedQueryDefinition getNamedQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.CollectionMetadata getCollectionMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.Region getSecondLevelCacheRegion(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:int getPropertyIndex(java.lang.String)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String extractEmbeddedEntityName(java.util.Map)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.Integer getPropertyIndexOrNull(java.lang.String)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.String findEntityNameByEntityClass(java.lang.Class)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizerOrNull(org.hibernate.EntityMode)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.entity.SQLLoadable getEntityPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getEntitySuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getCollectionSuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getOwnerAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map internalGetPropertyResultsMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getAliasedCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getJoinType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:java.lang.Object read(java.lang.Object)",
            "org.hibernate.cache.HashtableCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.EventCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean isOperatedOn(java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type basic(java.lang.String)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean hasReference(org.hibernate.mapping.Column,org.hibernate.mapping.Column)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata getColumnMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.IndexMetadata getIndexMetadata(java.lang.String)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processBoolean(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processLiteral(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String)",
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String getTokenTypeName(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findCollectionJoin(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findJoinByPathLocal(java.lang.String)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.hql.ast.ParameterTranslationsImpl$ParameterInfo getNamedParameterInfo(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getDecoratedPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getPathAlias(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.engine.JoinSequence getPathJoin(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.LoadingCollectionEntry locateLoadingCollectionEntry(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.ParameterMetadata:org.hibernate.engine.query.NamedParameterDescriptor getNamedParameterDescriptor(java.lang.String)",
            "org.hibernate.engine.FilterDefinition:org.hibernate.type.Type getParameterType(java.lang.String)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getCachedDatabaseSnapshot(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityUniqueKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry getEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntry(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:org.hibernate.engine.SubselectFetch getSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.Property:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.mapping.Component:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.Component:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()",
            "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.CacheMode:java.lang.Object readResolve()",
            "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)",
            "org.hibernate.FlushMode:java.lang.Object readResolve()",
            "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)",
            "org.hibernate.ReplicationMode:java.lang.Object readResolve()",
            "org.hibernate.ScrollMode:java.lang.Object readResolve()",
            "org.hibernate.FetchMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)",
            "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.Mappings:void addClass(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.Mappings:void addCollection(org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.Mappings:void addImport(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.cfg.Mappings:void addTypeDef(java.lang.String,java.lang.String,java.util.Properties)",
            "org.hibernate.cfg.Mappings:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Mappings:void addToExtendsQueue(org.hibernate.cfg.ExtendsQueueEntry)",
            "org.hibernate.cfg.Mappings:void addTableBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Configuration:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Configuration:void addSqlFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.collection.PersistentMap$Put:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.CaseFragment:org.hibernate.sql.CaseFragment addWhenColumnNotNull(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void addPropertyPath(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.QueryImpl:org.hibernate.Query setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:void registerFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.dialect.Dialect:void <clinit>()",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:void addTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.Tuplizer)",
            "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate()",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addPersister(java.lang.String,java.util.Map,org.hibernate.persister.entity.SQLLoadable)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:void put(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.IdentityMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void setCustomListener(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object,boolean)",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.EventListeners:void <clinit>()",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addDuplicateAlias(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addJoinByPathMap(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addCollectionJoinFromElementByPath(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setAliasName(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void decoratePropertyMapping(java.lang.String,org.hibernate.persister.entity.PropertyMapping)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addCollection(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addPathAliasAndJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.CollectionProperties:void <clinit>()",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void registerLoadingCollectionXRef(org.hibernate.engine.CollectionKey,org.hibernate.engine.loading.LoadingCollectionEntry)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void addUnownedCollection(org.hibernate.engine.CollectionKey,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityUniqueKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollectionHolder(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addProxy(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.BatchFetchQueue:void addSubselect(org.hibernate.engine.EntityKey,org.hibernate.engine.SubselectFetch)",
            "org.hibernate.engine.BatchFetchQueue:void addBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:void <clinit>()",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Collection:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void addManyToManyFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.mapping.Component:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.criterion.MatchMode:void <clinit>()",
            "org.hibernate.property.MapAccessor$MapSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void doBind(org.hibernate.Session,org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)",
            "org.hibernate.CacheMode:void <clinit>()",
            "org.hibernate.FlushMode:void <clinit>()",
            "org.hibernate.ReplicationMode:void <clinit>()",
            "org.hibernate.ScrollMode:void <clinit>()",
            "org.hibernate.FetchMode:void <clinit>()",
            "org.hibernate.EntityMode:void <clinit>()",
            "org.hibernate.LockMode:void <clinit>()"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Remove:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void remove(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection useUnownedCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry removeEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection removeCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.BatchFetchQueue:void removeSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.BatchFetchQueue:void removeBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)",
            "org.hibernate.context.JTASessionContext$CleanupSynch:void afterCompletion(int)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader createEntityLoader(org.hibernate.LockMode,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader createEntityLoader(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void load(java.lang.Object,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object immediateLoad(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeAssociation(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object[] getRow(java.sql.ResultSet,org.hibernate.persister.entity.Loadable[],org.hibernate.engine.EntityKey[],java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.LockMode[],java.util.List,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.impl.CollectionFilterImpl:java.util.List list()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueResult()"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.Collection filter(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.Collection filter(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.Collection filter(java.lang.Object,java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CollectionFilterImpl:java.util.Iterator iterate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Query createQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.QueryImpl:int executeUpdate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.QueryImpl:java.util.List list()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueResult()"
        ]
    },
    "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll()"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.List find(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.List find(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.List find(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.CascadingAction$10:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsTransient(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void firePersist(java.util.Map,org.hibernate.event.PersistEvent)",
            "org.hibernate.impl.SessionImpl:void firePersistOnFlush(java.util.Map,org.hibernate.event.PersistEvent)",
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void flush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:void forceFlush(org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean autoFlushIfRequired(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean isDirty()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void initializeCollection(org.hibernate.collection.PersistentCollection,boolean)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.ScrollableResults scroll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:java.lang.Object uniqueResult()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:boolean endRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object get(int)",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.PersistentList:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.AbstractPersistentCollection$1:java.lang.Object next()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object get(int)",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST lookupNonQualifiedProperty(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.Constraint:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.Projection getProjection(int)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean afterInitialize()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.Object getSnapshotElement(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$1:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object get(int)",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.PersistentList:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.AbstractPersistentCollection$1:java.lang.Object next()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object get(int)",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST lookupNonQualifiedProperty(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.Constraint:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.Projection getProjection(int)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object getSnapshotElement(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object get(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object get(int)",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.PersistentList:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.AbstractPersistentCollection$1:java.lang.Object next()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object get(int)",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST lookupNonQualifiedProperty(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.Constraint:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.Projection getProjection(int)"
        ]
    },
    "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.DistinctRootEntityResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()"
        ]
    },
    "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)"
        ]
    },
    "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters()"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:java.lang.Object uniqueResult()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueResult()"
        ]
    },
    "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.StandardJDBCEscapeFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listIgnoreQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.EntityLoader:java.lang.Object loadByUniqueKey(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:void <init>(org.hibernate.hql.ast.QueryTranslatorImpl,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.hql.ast.tree.SelectClause)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listIgnoreQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.OuterJoinableAssociation:int getOwner(java.util.List)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void putResultInQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey,java.util.List)"
        ]
    },
    "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List getResultFromQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.CascadingAction:java.util.Iterator getAllElementsIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction:java.util.Iterator getLoadedElementsIterator(org.hibernate.engine.SessionImplementor,org.hibernate.type.CollectionType,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void commit()"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void commit()",
            "org.hibernate.transaction.JDBCTransaction:void rollback()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)"
        ]
    },
    "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IdentNode:int resolveAsNakedPropertyRef()",
            "org.hibernate.hql.ast.tree.IdentNode:boolean resolveAsNakedComponentPropertyRefLHS(org.hibernate.hql.ast.tree.DotNode)",
            "org.hibernate.hql.ast.tree.IdentNode:boolean resolveAsNakedComponentPropertyRefRHS(org.hibernate.hql.ast.tree.DotNode)"
        ]
    },
    "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ParameterTranslations getParameterTranslations()"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST lookupNonQualifiedProperty(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generateVersionPropertyNode(org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessUpdate(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDelete(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void out(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.BasicExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void generate(antlr.collections.AST)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlSqlWalker analyze(org.hibernate.hql.ast.HqlParser,java.lang.String)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlParser parse(boolean)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listIgnoreQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata getSQLParameterMetadata(java.lang.String)"
        ]
    },
    "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List listFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.engine.JoinSequence:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.JoinProcessor:void addJoinNodes(org.hibernate.hql.ast.tree.QueryNode,org.hibernate.engine.JoinSequence,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean)"
        ]
    },
    "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:boolean areTablesToBeUpdated(java.util.Set)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void prepareActions()"
        ]
    },
    "org.hibernate.mapping.Constraint:org.hibernate.mapping.Column getColumn(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)"
        ]
    },
    "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.Projection getProjection(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()",
            "org.hibernate.criterion.ProjectionList:boolean isGrouped()"
        ]
    },
    "org.hibernate.collection.PersistentList$Set:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Set:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Set:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object set(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Set:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setString(int,java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCharacter(int,char)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBoolean(int,boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setByte(int,byte)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setShort(int,short)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setInteger(int,int)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLong(int,long)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setFloat(int,float)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDouble(int,double)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBinary(int,byte[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setText(int,java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setSerializable(int,java.io.Serializable)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDate(int,java.util.Date)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTime(int,java.util.Date)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTimestamp(int,java.util.Date)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setEntity(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLocale(int,java.util.Locale)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendar(int,java.util.Calendar)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendarDate(int,java.util.Calendar)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigDecimal(int,java.math.BigDecimal)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigInteger(int,java.math.BigInteger)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList$Remove:void operate()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$SimpleRemove:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean remove(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromElement:void setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList$Remove:void operate()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object remove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentList$Remove:void operate()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()"
        ]
    },
    "org.hibernate.collection.PersistentList$Remove:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List doQueryAndInitializeNonLazyCollections(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)"
        ]
    },
    "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)"
        ]
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass getClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.PersistentClass getSuperclass(org.hibernate.cfg.Mappings,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.Collection getCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table getTable(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:org.hibernate.engine.NamedQueryDefinition getQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.TypeDef getTypeDef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass locatePersistentClassByEntityName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(org.hibernate.mapping.Table)"
        ]
    },
    "org.hibernate.cfg.Mappings:java.lang.String getPhysicalColumnName(java.lang.String,org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:java.lang.String getLogicalColumnName(java.lang.String,org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$CollectionSecondPass:void secondPass(java.util.Map,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindIdentifierCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.IdentifierCollection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindRootClass(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindSubclass(org.dom4j.Element,org.hibernate.mapping.Subclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.mapping.PersistentClass getClassMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.RootClass getRootClassMapping(java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.mapping.Collection getCollectionMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void setCollectionCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)"
        ]
    },
    "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierType(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.cfg.Configuration$1:java.lang.String getIdentifierPropertyName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.String getIdentifierOrUniqueKeyPropertyName(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:boolean hasNonIdentifierPropertyNamedId(org.hibernate.type.EntityType,org.hibernate.engine.Mapping)",
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getIdentifier(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass getClass(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Collection getCollection(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table getTable(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.NamedQueryDefinition getQuery(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.TypeDef getTypeDef(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass locatePersistentClassByEntityName(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:java.lang.String getPhysicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.PersistentClass getClassMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.Collection getCollectionMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:java.lang.String getIdentifierPropertyName(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getIdentifier(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] getCollectionPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSequentialSelect(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy getLocker(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] getColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:java.lang.Object getParameter(java.lang.String)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.FetchMode getFetchMode(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getCollectionRolesByEntityParticipant(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedQueryDefinition getNamedQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.CollectionMetadata getCollectionMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.Region getSecondLevelCacheRegion(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:int getPropertyIndex(java.lang.String)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String extractEmbeddedEntityName(java.util.Map)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.Integer getPropertyIndexOrNull(java.lang.String)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.String findEntityNameByEntityClass(java.lang.Class)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizerOrNull(org.hibernate.EntityMode)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.entity.SQLLoadable getEntityPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getEntitySuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getCollectionSuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getOwnerAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map internalGetPropertyResultsMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getAliasedCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getJoinType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:java.lang.Object read(java.lang.Object)",
            "org.hibernate.cache.HashtableCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.EventCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean isOperatedOn(java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type basic(java.lang.String)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean hasReference(org.hibernate.mapping.Column,org.hibernate.mapping.Column)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata getColumnMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.IndexMetadata getIndexMetadata(java.lang.String)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processBoolean(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processLiteral(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String)",
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String getTokenTypeName(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findCollectionJoin(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findJoinByPathLocal(java.lang.String)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.hql.ast.ParameterTranslationsImpl$ParameterInfo getNamedParameterInfo(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getDecoratedPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getPathAlias(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.engine.JoinSequence getPathJoin(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.LoadingCollectionEntry locateLoadingCollectionEntry(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.ParameterMetadata:org.hibernate.engine.query.NamedParameterDescriptor getNamedParameterDescriptor(java.lang.String)",
            "org.hibernate.engine.FilterDefinition:org.hibernate.type.Type getParameterType(java.lang.String)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getCachedDatabaseSnapshot(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityUniqueKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry getEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntry(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:org.hibernate.engine.SubselectFetch getSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.Property:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.mapping.Component:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.Component:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()",
            "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.CacheMode:java.lang.Object readResolve()",
            "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)",
            "org.hibernate.FlushMode:java.lang.Object readResolve()",
            "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)",
            "org.hibernate.ReplicationMode:java.lang.Object readResolve()",
            "org.hibernate.ScrollMode:java.lang.Object readResolve()",
            "org.hibernate.FetchMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)",
            "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)"
        ]
    },
    "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] getCollectionPropertyColumnAliases(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:boolean isSubclassPropertyDeferred(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String generateSequentialSelect(org.hibernate.persister.entity.Loadable)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSequentialSelect(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy getLocker(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnAliases(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnNames(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:org.hibernate.type.Type toType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int getSubclassPropertyTableNumber(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.type.Type getPropertyType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.classic.PathExpressionParser:org.hibernate.type.Type getPropertyType()",
            "org.hibernate.criterion.AbstractEmptinessExpression:org.hibernate.persister.collection.QueryableCollection getQueryableCollection(java.lang.String,java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] getColumnNames(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getPropertyColumnNames(java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.BasicEntityPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String[] currentColumns()",
            "org.hibernate.engine.SubselectFetch:java.lang.String toSubselectString(java.lang.String)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void initOrdinaryPropertyPaths(org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initIdentifierPropertyPaths(org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initDiscriminatorPropertyPath(org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initIdentifierPropertyPaths(java.lang.String,org.hibernate.type.EntityType,java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.FilterImpl:java.lang.Object getParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.FilterImpl:void validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.FetchMode getFetchMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String discriminatorFilterFragment(java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader createUniqueKeyLoader(org.hibernate.type.Type,java.lang.String[],java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.EntityPersister getSubclassEntityPersister(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getIdentifierPropertyName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedEntityName(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedEntityClass(java.lang.Class)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.persister.entity.OuterJoinLoadable getOuterJoinLoadable(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type guessType(java.lang.Class)",
            "org.hibernate.impl.SessionImpl:java.lang.Object immediateLoad(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.OuterJoinLoadable getOuterJoinLoadable(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.persister.entity.SQLLoadable getSQLLoadable(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:org.hibernate.persister.entity.Queryable determineAppropriateOwnerPersister(org.hibernate.loader.custom.NonScalarReturn)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getPathEntityName(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)",
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:boolean isJoinedFetchEnabledInMapping(org.hibernate.FetchMode,org.hibernate.type.AssociationType)",
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.EntityAction:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)",
            "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:org.hibernate.persister.entity.Joinable getAssociatedJoinable(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:org.hibernate.type.Type getSemiResolvedType(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.Queryable findQueryableUsingImports(org.hibernate.engine.SessionFactoryImplementor,java.lang.String)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.EntityPersister findEntityPersisterByName(java.lang.String)",
            "org.hibernate.hql.ast.tree.DotNode:boolean isReferenceToPrimaryKey(java.lang.String,org.hibernate.type.EntityType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersisterUsingImports(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersister(java.lang.String)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.EntityEntry:void <init>(org.hibernate.engine.SessionFactoryImplementor,java.lang.String,java.io.Serializable,org.hibernate.EntityMode,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.LockMode,boolean,boolean,boolean)",
            "org.hibernate.engine.EntityEntry:void afterDeserialize(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.EntityKey:java.lang.String toString()",
            "org.hibernate.criterion.SubqueryExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AbstractEmptinessExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AbstractEmptinessExpression:org.hibernate.persister.collection.QueryableCollection getQueryableCollection(java.lang.String,java.lang.String,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.EntityMode getEntityMode(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:org.hibernate.persister.entity.Queryable determineAppropriateOwnerPersister(org.hibernate.loader.custom.NonScalarReturn)",
            "org.hibernate.action.CollectionAction:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnLockVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.ProxyVisitor:void reattachCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.type.CustomCollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:org.hibernate.persister.collection.CollectionPersister getPersister(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:org.hibernate.persister.entity.Joinable getAssociatedJoinable(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String getAssociatedEntityName(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:org.hibernate.type.Type getElementType(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.collection.QueryableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionEntry:void afterDeserialize(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:java.lang.String toString()",
            "org.hibernate.engine.Cascade:void cascadeCollection(java.lang.Object,org.hibernate.engine.CascadeStyle,java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.criterion.SizeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AbstractEmptinessExpression:org.hibernate.persister.collection.QueryableCollection getQueryableCollection(java.lang.String,java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.util.Set getCollectionRolesByEntityParticipant(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedQueryDefinition getNamedQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedSQLQuery(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:void <init>(org.hibernate.engine.NamedSQLQueryDefinition,org.hibernate.engine.SessionImplementor,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.CollectionMetadata getCollectionMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.Class)",
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.Queryable findQueryableUsingImports(org.hibernate.engine.SessionFactoryImplementor,java.lang.String)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.EntityPersister findEntityPersisterByName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersisterUsingImports(java.lang.String)",
            "org.hibernate.hql.QuerySplitter:java.lang.String getImportedClass(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.Region getSecondLevelCacheRegion(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FilterImpl:void afterDeserialize(org.hibernate.impl.SessionFactoryImpl)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.type.Type getFilterParameterType(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)"
        ]
    },
    "org.hibernate.dialect.function.SQLFunctionRegistry:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.dialect.function.SQLFunction getFunction(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.ResultColumnReferenceStrategy:java.lang.Object readResolve()"
        ]
    },
    "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.component.ComponentMetamodel:int getPropertyIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentMetamodel:org.hibernate.tuple.StandardProperty getProperty(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String guessEntityName(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String extractEmbeddedEntityName(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.EntityPersister getSubclassEntityPersister(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:java.lang.Integer getPropertyIndexOrNull(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getPropertyTableName(java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getPropertyTableName(java.lang.String)",
            "org.hibernate.tuple.entity.EntityMetamodel:int getPropertyIndex(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:java.lang.String findEntityNameByEntityClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizerOrNull(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.tuple.entity.EntityTuplizer getTuplizerOrNull(org.hibernate.EntityMode)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizer(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:boolean isInstance(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:boolean isInstance(java.lang.Object)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.StatisticsImpl:void loadEntity(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void fetchEntity(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void updateEntity(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void insertEntity(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void deleteEntity(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void optimisticFailure(java.lang.String)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.StatisticsImpl:void loadCollection(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void fetchCollection(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void updateCollection(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void recreateCollection(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void removeCollection(java.lang.String)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.StatisticsImpl:void secondLevelCachePut(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void secondLevelCacheHit(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void secondLevelCacheMiss(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void queryCacheHit(java.lang.String,java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void queryCacheMiss(java.lang.String,java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void queryCachePut(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.StatisticsImpl:void queryExecuted(java.lang.String,int,long)",
            "org.hibernate.stat.StatisticsImpl:void queryCacheHit(java.lang.String,java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void queryCacheMiss(java.lang.String,java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:void queryCachePut(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.collection.SubselectCollectionLoader:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.SubselectOneToManyLoader:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.entity.SQLLoadable getEntityPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:org.hibernate.persister.entity.SQLLoadable getEntityPersisterByAlias(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersisterByAlias(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getEntitySuffix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:java.lang.String getEntitySuffixByAlias(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getCollectionSuffix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:java.lang.String getCollectionSuffixByAlias(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getOwnerAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map internalGetPropertyResultsMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map access$500(org.hibernate.loader.custom.sql.SQLQueryReturnProcessor,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteBrackets(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteBrackets(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void namedParameter(java.lang.String,int)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.ColumnCollectionAliases:void <init>(java.util.Map,org.hibernate.persister.collection.SQLLoadableCollection)"
        ]
    },
    "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.ColumnCollectionAliases:void <init>(java.util.Map,org.hibernate.persister.collection.SQLLoadableCollection)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.String preprocessSQL(java.lang.String,org.hibernate.engine.QueryParameters,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getAliasedCriteria(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getPropertyName(java.lang.String)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getJoinType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getCriteria(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getIdentifierColumns(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.SQLCriterion:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SQLProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SQLProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getIdentifierColumns(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getIdentifierType(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedIdentifierValue(org.hibernate.Criteria,java.lang.Object)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.EntityMode getEntityMode(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.String preprocessSQL(java.lang.String,org.hibernate.engine.QueryParameters,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.GeneratedCollectionAliases:void <init>(java.util.Map,org.hibernate.persister.collection.CollectionPersister,java.lang.String)"
        ]
    },
    "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.GeneratedCollectionAliases:void <init>(java.util.Map,org.hibernate.persister.collection.CollectionPersister,java.lang.String)"
        ]
    },
    "org.hibernate.loader.DefaultEntityAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.DefaultEntityAliases:void <init>(java.util.Map,org.hibernate.persister.entity.Loadable,java.lang.String)",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String[][] getSuffixedPropertyAliases(org.hibernate.persister.entity.Loadable)"
        ]
    },
    "org.hibernate.loader.DefaultEntityAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.DefaultEntityAliases:void <init>(java.util.Map,org.hibernate.persister.entity.Loadable,java.lang.String)"
        ]
    },
    "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.cache.HashtableCache:java.lang.Object read(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.TransactionalCache:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.TransactionalCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)"
        ]
    },
    "org.hibernate.cache.HashtableCache:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.cache.NonstrictReadWriteCache:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.NonstrictReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)",
            "org.hibernate.cache.ReadWriteCache:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.ReadWriteCache:org.hibernate.cache.access.SoftLock lock(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.ReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)",
            "org.hibernate.cache.ReadWriteCache:void release(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.ReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.ReadWriteCache:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.ReadOnlyCache:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.ReadOnlyCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass getClass(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Collection getCollection(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table getTable(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.NamedQueryDefinition getQuery(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.TypeDef getTypeDef(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass locatePersistentClassByEntityName(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:java.lang.String getPhysicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.PersistentClass getClassMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.Collection getCollectionMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:java.lang.String getIdentifierPropertyName(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getIdentifier(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] getCollectionPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSequentialSelect(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy getLocker(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] getColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:java.lang.Object getParameter(java.lang.String)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.FetchMode getFetchMode(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getCollectionRolesByEntityParticipant(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedQueryDefinition getNamedQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.CollectionMetadata getCollectionMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.Region getSecondLevelCacheRegion(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:int getPropertyIndex(java.lang.String)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String extractEmbeddedEntityName(java.util.Map)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.Integer getPropertyIndexOrNull(java.lang.String)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.String findEntityNameByEntityClass(java.lang.Class)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizerOrNull(org.hibernate.EntityMode)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.entity.SQLLoadable getEntityPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getEntitySuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getCollectionSuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getOwnerAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map internalGetPropertyResultsMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getAliasedCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getJoinType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:java.lang.Object read(java.lang.Object)",
            "org.hibernate.cache.HashtableCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.EventCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean isOperatedOn(java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type basic(java.lang.String)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean hasReference(org.hibernate.mapping.Column,org.hibernate.mapping.Column)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata getColumnMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.IndexMetadata getIndexMetadata(java.lang.String)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processBoolean(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processLiteral(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String)",
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String getTokenTypeName(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findCollectionJoin(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findJoinByPathLocal(java.lang.String)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.hql.ast.ParameterTranslationsImpl$ParameterInfo getNamedParameterInfo(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getDecoratedPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getPathAlias(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.engine.JoinSequence getPathJoin(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.LoadingCollectionEntry locateLoadingCollectionEntry(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.ParameterMetadata:org.hibernate.engine.query.NamedParameterDescriptor getNamedParameterDescriptor(java.lang.String)",
            "org.hibernate.engine.FilterDefinition:org.hibernate.type.Type getParameterType(java.lang.String)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getCachedDatabaseSnapshot(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityUniqueKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry getEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntry(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:org.hibernate.engine.SubselectFetch getSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.Property:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.mapping.Component:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.Component:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()",
            "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.CacheMode:java.lang.Object readResolve()",
            "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)",
            "org.hibernate.FlushMode:java.lang.Object readResolve()",
            "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)",
            "org.hibernate.ReplicationMode:java.lang.Object readResolve()",
            "org.hibernate.ScrollMode:java.lang.Object readResolve()",
            "org.hibernate.FetchMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)",
            "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)"
        ]
    },
    "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.cache.FilterKey:boolean equals(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties)"
        ]
    },
    "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ResultSetWrapper:int findColumn(java.lang.String)"
        ]
    },
    "org.hibernate.event.def.EventCache:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass getClass(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Collection getCollection(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table getTable(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.NamedQueryDefinition getQuery(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.TypeDef getTypeDef(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass locatePersistentClassByEntityName(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:java.lang.String getPhysicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.PersistentClass getClassMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.Collection getCollectionMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:java.lang.String getIdentifierPropertyName(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getIdentifier(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] getCollectionPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSequentialSelect(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy getLocker(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] getColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:java.lang.Object getParameter(java.lang.String)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.FetchMode getFetchMode(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getCollectionRolesByEntityParticipant(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedQueryDefinition getNamedQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.CollectionMetadata getCollectionMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.Region getSecondLevelCacheRegion(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:int getPropertyIndex(java.lang.String)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String extractEmbeddedEntityName(java.util.Map)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.Integer getPropertyIndexOrNull(java.lang.String)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.String findEntityNameByEntityClass(java.lang.Class)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizerOrNull(org.hibernate.EntityMode)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.entity.SQLLoadable getEntityPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getEntitySuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getCollectionSuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getOwnerAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map internalGetPropertyResultsMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getAliasedCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getJoinType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:java.lang.Object read(java.lang.Object)",
            "org.hibernate.cache.HashtableCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.EventCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean isOperatedOn(java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type basic(java.lang.String)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean hasReference(org.hibernate.mapping.Column,org.hibernate.mapping.Column)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata getColumnMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.IndexMetadata getIndexMetadata(java.lang.String)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processBoolean(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processLiteral(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String)",
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String getTokenTypeName(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findCollectionJoin(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findJoinByPathLocal(java.lang.String)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.hql.ast.ParameterTranslationsImpl$ParameterInfo getNamedParameterInfo(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getDecoratedPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getPathAlias(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.engine.JoinSequence getPathJoin(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.LoadingCollectionEntry locateLoadingCollectionEntry(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.ParameterMetadata:org.hibernate.engine.query.NamedParameterDescriptor getNamedParameterDescriptor(java.lang.String)",
            "org.hibernate.engine.FilterDefinition:org.hibernate.type.Type getParameterType(java.lang.String)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getCachedDatabaseSnapshot(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityUniqueKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry getEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntry(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:org.hibernate.engine.SubselectFetch getSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.Property:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.mapping.Component:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.Component:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()",
            "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.CacheMode:java.lang.Object readResolve()",
            "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)",
            "org.hibernate.FlushMode:java.lang.Object readResolve()",
            "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)",
            "org.hibernate.ReplicationMode:java.lang.Object readResolve()",
            "org.hibernate.ScrollMode:java.lang.Object readResolve()",
            "org.hibernate.FetchMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)",
            "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)"
        ]
    },
    "org.hibernate.event.def.EventCache:boolean isOperatedOn(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)"
        ]
    },
    "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void setListeners(java.lang.String,java.lang.String[])",
            "org.hibernate.cfg.Configuration:void setListener(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeKey(java.sql.PreparedStatement,java.io.Serializable,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndexToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIdentifier(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.TypeFactory:org.hibernate.type.Type basic(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type heuristicType(java.lang.String,java.util.Properties)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:boolean isTable(java.lang.Object)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean hasReference(org.hibernate.mapping.Column,org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata getColumnMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.IndexMetadata getIndexMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.hql.ast.util.LiteralProcessor:void processBoolean(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void processBoolean(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.util.LiteralProcessor:void processLiteral(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.LiteralProcessor:void processConstant(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String getTokenTypeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String nodeToString(antlr.collections.AST,boolean)",
            "org.hibernate.hql.ast.tree.DotNode:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.SqlGenerator:java.lang.String buildTraceNodeName(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:java.lang.String buildTraceNodeName(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.JoinProcessor:void addJoinNodes(org.hibernate.hql.ast.tree.QueryNode,org.hibernate.engine.JoinSequence,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.util.SyntheticAndFactory:void addWhereFragment(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.hql.ast.tree.QueryNode,org.hibernate.hql.ast.tree.FromElement,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.util.SyntheticAndFactory:void addDiscriminatorWhereFragment(org.hibernate.hql.ast.tree.RestrictableStatement,org.hibernate.persister.entity.Queryable,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findCollectionJoin(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findJoinByPathLocal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.hql.ast.ParameterTranslationsImpl$ParameterInfo getNamedParameterInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.ParameterTranslationsImpl:int[] getNamedParameterSqlLocations(java.lang.String)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.type.Type getNamedParameterExpectedType(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generateNamedParameter(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String unalias(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersisterForName(java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getDecoratedPropertyMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.classic.QueryTranslatorImpl$2:int[] getNamedParameterSqlLocations(java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getPathAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.engine.JoinSequence getPathJoin(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.MethodNode:void resolveCollectionProperty(antlr.collections.AST)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass getClass(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Collection getCollection(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table getTable(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.NamedQueryDefinition getQuery(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.TypeDef getTypeDef(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.PersistentClass locatePersistentClassByEntityName(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:java.lang.String getPhysicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:java.lang.String getLogicalColumnName(java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.PersistentClass getClassMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.mapping.Collection getCollectionMapping(java.lang.String)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:java.lang.String getIdentifierPropertyName(java.lang.String)",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getIdentifier(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] getCollectionPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:int getSubclassPropertyTableNumber(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getSequentialSelect(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.dialect.lock.LockingStrategy getLocker(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnAliases(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getSubclassPropertyColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getSubclassForDiscriminatorValue(java.lang.Object)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] getColumnNames(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:java.lang.Object getParameter(java.lang.String)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.FetchMode getFetchMode(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getCollectionRolesByEntityParticipant(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedQueryDefinition getNamedQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.CollectionMetadata getCollectionMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.Region getSecondLevelCacheRegion(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.engine.FilterDefinition getFilterDefinition(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:int getPropertyIndex(java.lang.String)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructDefaultTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String extractEmbeddedEntityName(java.util.Map)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.Integer getPropertyIndexOrNull(java.lang.String)",
            "org.hibernate.tuple.entity.EntityMetamodel:java.lang.String findEntityNameByEntityClass(java.lang.Class)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizerOrNull(org.hibernate.EntityMode)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.entity.SQLLoadable getEntityPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersister(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getEntitySuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getCollectionSuffix(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.lang.String getOwnerAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map internalGetPropertyResultsMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.custom.ColumnCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getAliasedCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getJoinType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.Criteria getCriteria(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWholeAssociationPath(org.hibernate.impl.CriteriaImpl$Subcriteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.GeneratedCollectionAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String[] getUserProvidedAliases(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.DefaultEntityAliases:java.lang.String getUserProvidedAlias(java.lang.String,java.lang.String)",
            "org.hibernate.cache.entry.StructuredCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:java.lang.Object read(java.lang.Object)",
            "org.hibernate.cache.HashtableCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object get(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.EventCache:java.lang.Object get(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean isOperatedOn(java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type basic(java.lang.String)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean hasReference(org.hibernate.mapping.Column,org.hibernate.mapping.Column)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata getColumnMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.IndexMetadata getIndexMetadata(java.lang.String)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processBoolean(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void processLiteral(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.PropertyMapping getCollectionPropertyMapping(java.lang.String)",
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String getTokenTypeName(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findCollectionJoin(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findJoinByPathLocal(java.lang.String)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.hql.ast.ParameterTranslationsImpl$ParameterInfo getNamedParameterInfo(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getAliasName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getType(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getRole(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getDecoratedPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String getPathAlias(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.engine.JoinSequence getPathJoin(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.LoadingCollectionEntry locateLoadingCollectionEntry(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.ParameterMetadata:org.hibernate.engine.query.NamedParameterDescriptor getNamedParameterDescriptor(java.lang.String)",
            "org.hibernate.engine.FilterDefinition:org.hibernate.type.Type getParameterType(java.lang.String)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getCachedDatabaseSnapshot(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityUniqueKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry getEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntry(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:org.hibernate.engine.SubselectFetch getSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.Property:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.mapping.Component:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)",
            "org.hibernate.mapping.Component:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)",
            "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()",
            "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)",
            "org.hibernate.CacheMode:java.lang.Object readResolve()",
            "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)",
            "org.hibernate.FlushMode:java.lang.Object readResolve()",
            "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)",
            "org.hibernate.ReplicationMode:java.lang.Object readResolve()",
            "org.hibernate.ScrollMode:java.lang.Object readResolve()",
            "org.hibernate.FetchMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)",
            "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void endCollectionLoad(java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void handleEmptyCollections(java.io.Serializable[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.LoadingCollectionEntry locateLoadingCollectionEntry(org.hibernate.engine.CollectionKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.collection.PersistentCollection locateLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParamLocationRecognizer:void namedParameter(java.lang.String,int)",
            "org.hibernate.engine.query.ParamLocationRecognizer:void jpaPositionalParameter(java.lang.String,int)"
        ]
    },
    "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.query.ParameterMetadata:org.hibernate.engine.query.NamedParameterDescriptor getNamedParameterDescriptor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.engine.query.ParameterMetadata:org.hibernate.type.Type getNamedParameterExpectedType(java.lang.String)",
            "org.hibernate.engine.query.ParameterMetadata:int[] getNamedParameterSourceLocations(java.lang.String)"
        ]
    },
    "org.hibernate.engine.FilterDefinition:org.hibernate.type.Type getParameterType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:org.hibernate.type.Type getFilterParameterType(java.lang.String)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getNaturalIdSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getCachedDatabaseSnapshot(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getEntityUsingInterceptor(org.hibernate.engine.EntityKey)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void checkUniqueness(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getCollectionOwner(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getEntity(org.hibernate.engine.EntityUniqueKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry getEntry(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionImpl:org.hibernate.LockMode getCurrentLockMode(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.io.Serializable getContextEntityIdentifier(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:boolean contains(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String bestGuessEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String getEntityName(java.lang.Object)",
            "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.CollectionAction:java.io.Serializable getKey()",
            "org.hibernate.action.EntityAction:java.io.Serializable getId()",
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.AbstractCollectionEvent:java.io.Serializable getOwnerIdOrNull(java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.event.AbstractCollectionEvent:java.lang.String getAffectedOwnerEntityName(org.hibernate.persister.collection.CollectionPersister,java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void setReadOnly(java.lang.Object,boolean)",
            "org.hibernate.engine.CascadingAction$9:boolean isInManagedState(java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntry(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseCollection()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseCollectionNoOrphanDelete()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseOneToManyOrNoOrphanDelete()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean setCurrentSession(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRecreateAction:void execute()",
            "org.hibernate.action.CollectionRemoveAction:void execute()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.AbstractCollectionEvent:org.hibernate.persister.collection.CollectionPersister getLoadedCollectionPersister(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getLoadedCollectionOwnerOrNull(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getLoadedCollectionOwnerIdOrNull(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getSnapshot(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollection(org.hibernate.engine.CollectionKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection getCollectionHolder(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DirtyCollectionSearchVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.FlushVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getProxy(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.property.BackrefPropertyAccessor$BackrefGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.property.IndexPropertyAccessor$IndexGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:org.hibernate.engine.SubselectFetch getSubselect(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.DenormalizedTable:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindIndex(org.dom4j.Attribute,org.hibernate.mapping.Table,org.hibernate.mapping.Column,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.Index getIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getUniqueKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindUniqueKey(org.dom4j.Attribute,org.hibernate.mapping.Table,org.hibernate.mapping.Column,org.hibernate.cfg.Mappings)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)"
        ]
    },
    "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$ManyToOneSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Property:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.PersistentClass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Subclass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.mapping.Component:org.hibernate.mapping.MetaAttribute getMetaAttribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Component:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object getParent(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getVersion(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.IdentifierValue getUnsavedIdentifierValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.Type,java.lang.reflect.Constructor)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)",
            "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session getCurrentSession()"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session access$100(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session existingSession(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ManagedSessionContext:boolean hasBind(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.CacheMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.FlushMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.ReplicationMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.ScrollMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.FetchMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.EntityMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.engine.EntityEntry:org.hibernate.engine.EntityEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.CollectionKey:org.hibernate.engine.CollectionKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.EntityKey:org.hibernate.engine.EntityKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.EntityEntry:org.hibernate.engine.EntityEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.LockMode:java.lang.Object readResolve()"
        ]
    },
    "org.hibernate.cfg.Environment:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider getBytecodeProvider()",
            "org.hibernate.cfg.Environment:boolean jvmHasTimestampBug()",
            "org.hibernate.cfg.Environment:boolean jvmHasJDK14Timestamp()",
            "org.hibernate.cfg.Environment:boolean jvmSupportsLinkedHashCollections()",
            "org.hibernate.cfg.Environment:boolean jvmSupportsGetGeneratedKeys()",
            "org.hibernate.cfg.Environment:boolean useStreamsForBinary()",
            "org.hibernate.cfg.Environment:boolean useReflectionOptimizer()",
            "org.hibernate.cfg.Environment:java.util.Properties getProperties()",
            "org.hibernate.cfg.Environment:java.lang.String isolationLevelToString(int)",
            "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider buildBytecodeProvider(java.util.Properties)",
            "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider buildBytecodeProvider(java.lang.String)",
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.Configuration:void reset()",
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.dialect.resolver.DialectFactory:void <clinit>()",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect()",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactoryInternal(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider()",
            "org.hibernate.connection.DriverManagerConnectionProvider:void configure(java.util.Properties)",
            "org.hibernate.type.CalendarType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AbstractBynaryType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AbstractBynaryType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.TimestampType:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addClass(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void handleUnionSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void handleJoinedSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void handleSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addCollection(org.hibernate.mapping.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addImport(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindImport(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addTypeDef(java.lang.String,java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addFilterDefinition(org.hibernate.engine.FilterDefinition)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addToExtendsQueue(org.hibernate.cfg.ExtendsQueueEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addTableBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:java.lang.String getClassTableName(org.hibernate.mapping.PersistentClass,org.dom4j.Element,java.lang.String,java.lang.String,org.hibernate.mapping.Table,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Configuration:void addFilterDefinition(org.hibernate.engine.FilterDefinition)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:void addSqlFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentMap$Put:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void putAll(java.util.Map)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:void <init>(org.hibernate.dialect.Dialect,java.util.Map)",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)",
            "org.hibernate.engine.query.sql.NativeSQLQueryNonScalarReturn:void <init>(java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.FilterDefinition:void <init>(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.Mappings:void addClass(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.Mappings:void addCollection(org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.Mappings:void addImport(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.cfg.Mappings:void addTypeDef(java.lang.String,java.lang.String,java.util.Properties)",
            "org.hibernate.cfg.Mappings:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Mappings:void addToExtendsQueue(org.hibernate.cfg.ExtendsQueueEntry)",
            "org.hibernate.cfg.Mappings:void addTableBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Configuration:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Configuration:void addSqlFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.collection.PersistentMap$Put:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.CaseFragment:org.hibernate.sql.CaseFragment addWhenColumnNotNull(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void addPropertyPath(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.QueryImpl:org.hibernate.Query setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:void registerFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.dialect.Dialect:void <clinit>()",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:void addTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.Tuplizer)",
            "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate()",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addPersister(java.lang.String,java.util.Map,org.hibernate.persister.entity.SQLLoadable)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:void put(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.IdentityMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void setCustomListener(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object,boolean)",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.EventListeners:void <clinit>()",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addDuplicateAlias(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addJoinByPathMap(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addCollectionJoinFromElementByPath(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setAliasName(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void decoratePropertyMapping(java.lang.String,org.hibernate.persister.entity.PropertyMapping)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addCollection(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addPathAliasAndJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.CollectionProperties:void <clinit>()",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void registerLoadingCollectionXRef(org.hibernate.engine.CollectionKey,org.hibernate.engine.loading.LoadingCollectionEntry)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void addUnownedCollection(org.hibernate.engine.CollectionKey,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityUniqueKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollectionHolder(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addProxy(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.BatchFetchQueue:void addSubselect(org.hibernate.engine.EntityKey,org.hibernate.engine.SubselectFetch)",
            "org.hibernate.engine.BatchFetchQueue:void addBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:void <clinit>()",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Collection:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void addManyToManyFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.mapping.Component:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.criterion.MatchMode:void <clinit>()",
            "org.hibernate.property.MapAccessor$MapSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void doBind(org.hibernate.Session,org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)",
            "org.hibernate.CacheMode:void <clinit>()",
            "org.hibernate.FlushMode:void <clinit>()",
            "org.hibernate.ReplicationMode:void <clinit>()",
            "org.hibernate.ScrollMode:void <clinit>()",
            "org.hibernate.FetchMode:void <clinit>()",
            "org.hibernate.EntityMode:void <clinit>()",
            "org.hibernate.LockMode:void <clinit>()"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumns(java.lang.String[],java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumns(java.lang.String[],java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)"
        ]
    },
    "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addIdentityColumn(java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void addDiscriminatorToInsert(org.hibernate.sql.Insert)",
            "org.hibernate.id.SequenceIdentityGenerator$Delegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumns(java.lang.String[],java.lang.String[])",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumns(java.lang.String[],java.lang.String[],boolean[])",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.sql.CaseFragment:org.hibernate.sql.CaseFragment addWhenColumnNotNull(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:org.hibernate.sql.CaseFragment discriminatorFragment(java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:void addPropertyPath(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initIdentifierPropertyPaths(java.lang.String,org.hibernate.type.EntityType,java.lang.String[],org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.lang.Object[])"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setFetchMode(java.lang.String,org.hibernate.FetchMode)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(org.hibernate.LockMode)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setLockMode(java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBinary(java.lang.String,byte[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setText(java.lang.String,java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBoolean(java.lang.String,boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setByte(java.lang.String,byte)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCharacter(java.lang.String,char)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDate(java.lang.String,java.util.Date)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDouble(java.lang.String,double)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setEntity(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setFloat(java.lang.String,float)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setInteger(java.lang.String,int)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLocale(java.lang.String,java.util.Locale)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendar(java.lang.String,java.util.Calendar)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendarDate(java.lang.String,java.util.Calendar)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLong(java.lang.String,long)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setSerializable(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setShort(java.lang.String,short)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setString(java.lang.String,java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTime(java.lang.String,java.util.Date)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTimestamp(java.lang.String,java.util.Date)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigDecimal(java.lang.String,java.math.BigDecimal)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigInteger(java.lang.String,java.math.BigInteger)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.lang.Object[],org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.QueryImpl:org.hibernate.Query setLockMode(java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.Dialect:void registerFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.TimesTenDialect:void <init>()",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.dialect.PostgresPlusDialect:void <init>()",
            "org.hibernate.dialect.SQLServerDialect:void <init>()",
            "org.hibernate.dialect.MySQLDialect:void <init>()",
            "org.hibernate.dialect.HSQLDialect:void <init>()",
            "org.hibernate.dialect.MimerSQLDialect:void <init>()",
            "org.hibernate.dialect.InterbaseDialect:void <init>()",
            "org.hibernate.dialect.DB2Dialect:void <init>()",
            "org.hibernate.dialect.SybaseASE15Dialect:void <init>()",
            "org.hibernate.dialect.TeradataDialect:void <init>()",
            "org.hibernate.dialect.PostgreSQLDialect:void <init>()",
            "org.hibernate.dialect.Oracle9Dialect:void <init>()",
            "org.hibernate.dialect.DerbyDialect:void <init>()",
            "org.hibernate.dialect.RDMSOS2200Dialect:void <init>()",
            "org.hibernate.dialect.IngresDialect:void <init>()",
            "org.hibernate.dialect.AbstractTransactSQLDialect:void <init>()",
            "org.hibernate.dialect.SAPDBDialect:void <init>()",
            "org.hibernate.dialect.InformixDialect:void <init>()",
            "org.hibernate.dialect.Oracle8iDialect:void registerFunctions()",
            "org.hibernate.dialect.H2Dialect:void <init>()",
            "org.hibernate.dialect.Cache71Dialect:void commonRegistration()",
            "org.hibernate.dialect.Cache71Dialect:void register71Functions()",
            "org.hibernate.dialect.MckoiDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.Dialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect()",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect(java.util.Properties)",
            "org.hibernate.dialect.Dialect:java.lang.Class getNativeIdentifierGeneratorClass()",
            "org.hibernate.dialect.Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.Dialect:void <clinit>()",
            "org.hibernate.dialect.HSQLDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.HSQLDialect:org.slf4j.Logger access$000()",
            "org.hibernate.dialect.HSQLDialect:void <clinit>()",
            "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.PostgreSQLDialect:java.lang.Class getNativeIdentifierGeneratorClass()",
            "org.hibernate.dialect.PostgreSQLDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.PostgreSQLDialect:void <clinit>()",
            "org.hibernate.dialect.Oracle9Dialect:void <init>()",
            "org.hibernate.dialect.Oracle9Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.Oracle9Dialect:void <clinit>()",
            "org.hibernate.dialect.RDMSOS2200Dialect:void <init>()",
            "org.hibernate.dialect.RDMSOS2200Dialect:void <clinit>()",
            "org.hibernate.dialect.InformixDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.InformixDialect:void <clinit>()",
            "org.hibernate.dialect.Oracle8iDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.Oracle8iDialect:void <clinit>()",
            "org.hibernate.dialect.H2Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.H2Dialect:void <clinit>()",
            "org.hibernate.dialect.Cache71Dialect:java.lang.Class getNativeIdentifierGeneratorClass()",
            "org.hibernate.dialect.Cache71Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.dialect.Cache71Dialect:void <clinit>()",
            "org.hibernate.dialect.OracleDialect:void <init>()",
            "org.hibernate.dialect.OracleDialect:void <clinit>()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.sql.Connection)",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.ResultColumnReferenceStrategy:java.lang.Object readResolve()",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:org.hibernate.dialect.ResultColumnReferenceStrategy parse(java.lang.String)",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()"
        ]
    },
    "org.hibernate.tuple.component.ComponentTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Component:org.hibernate.type.Type buildType()"
        ]
    },
    "org.hibernate.tuple.entity.EntityTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.EntityModeToTuplizerMapping:void addTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.Tuplizer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)"
        ]
    },
    "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object instantiate()",
            "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate(java.io.Serializable)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addPersister(java.lang.String,java.util.Map,org.hibernate.persister.entity.SQLLoadable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processCollectionReturn(org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.cache.HashtableCache:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:void put(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.NonstrictReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)",
            "org.hibernate.cache.ReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)",
            "org.hibernate.cache.HashtableCache:void update(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.ReadOnlyCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)",
            "org.hibernate.cache.TransactionalCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)"
        ]
    },
    "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.util.IdentityMap:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.Mappings:void addClass(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.Mappings:void addCollection(org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.Mappings:void addImport(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.cfg.Mappings:void addTypeDef(java.lang.String,java.lang.String,java.util.Properties)",
            "org.hibernate.cfg.Mappings:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Mappings:void addToExtendsQueue(org.hibernate.cfg.ExtendsQueueEntry)",
            "org.hibernate.cfg.Mappings:void addTableBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Configuration:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Configuration:void addSqlFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.collection.PersistentMap$Put:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.CaseFragment:org.hibernate.sql.CaseFragment addWhenColumnNotNull(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void addPropertyPath(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.QueryImpl:org.hibernate.Query setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:void registerFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.dialect.Dialect:void <clinit>()",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:void addTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.Tuplizer)",
            "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate()",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addPersister(java.lang.String,java.util.Map,org.hibernate.persister.entity.SQLLoadable)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:void put(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.IdentityMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void setCustomListener(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object,boolean)",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.EventListeners:void <clinit>()",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addDuplicateAlias(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addJoinByPathMap(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addCollectionJoinFromElementByPath(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setAliasName(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void decoratePropertyMapping(java.lang.String,org.hibernate.persister.entity.PropertyMapping)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addCollection(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addPathAliasAndJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.CollectionProperties:void <clinit>()",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void registerLoadingCollectionXRef(org.hibernate.engine.CollectionKey,org.hibernate.engine.loading.LoadingCollectionEntry)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void addUnownedCollection(org.hibernate.engine.CollectionKey,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityUniqueKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollectionHolder(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addProxy(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.BatchFetchQueue:void addSubselect(org.hibernate.engine.EntityKey,org.hibernate.engine.SubselectFetch)",
            "org.hibernate.engine.BatchFetchQueue:void addBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:void <clinit>()",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Collection:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void addManyToManyFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.mapping.Component:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.criterion.MatchMode:void <clinit>()",
            "org.hibernate.property.MapAccessor$MapSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void doBind(org.hibernate.Session,org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)",
            "org.hibernate.CacheMode:void <clinit>()",
            "org.hibernate.FlushMode:void <clinit>()",
            "org.hibernate.ReplicationMode:void <clinit>()",
            "org.hibernate.ScrollMode:void <clinit>()",
            "org.hibernate.FetchMode:void <clinit>()",
            "org.hibernate.EntityMode:void <clinit>()",
            "org.hibernate.LockMode:void <clinit>()"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.EventCache:java.util.Map invertMap()"
        ]
    },
    "org.hibernate.util.ExternalSessionFactoryConfig:void setCustomListener(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireRefresh(java.util.Map,org.hibernate.event.RefreshEvent)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent)"
        ]
    },
    "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.Mappings:void addClass(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.Mappings:void addCollection(org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.Mappings:void addImport(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.cfg.Mappings:void addTypeDef(java.lang.String,java.lang.String,java.util.Properties)",
            "org.hibernate.cfg.Mappings:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Mappings:void addToExtendsQueue(org.hibernate.cfg.ExtendsQueueEntry)",
            "org.hibernate.cfg.Mappings:void addTableBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Configuration:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Configuration:void addSqlFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.collection.PersistentMap$Put:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.CaseFragment:org.hibernate.sql.CaseFragment addWhenColumnNotNull(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void addPropertyPath(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.QueryImpl:org.hibernate.Query setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:void registerFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.dialect.Dialect:void <clinit>()",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:void addTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.Tuplizer)",
            "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate()",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addPersister(java.lang.String,java.util.Map,org.hibernate.persister.entity.SQLLoadable)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:void put(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.IdentityMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void setCustomListener(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object,boolean)",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.EventListeners:void <clinit>()",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addDuplicateAlias(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addJoinByPathMap(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addCollectionJoinFromElementByPath(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setAliasName(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void decoratePropertyMapping(java.lang.String,org.hibernate.persister.entity.PropertyMapping)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addCollection(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addPathAliasAndJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.CollectionProperties:void <clinit>()",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void registerLoadingCollectionXRef(org.hibernate.engine.CollectionKey,org.hibernate.engine.loading.LoadingCollectionEntry)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void addUnownedCollection(org.hibernate.engine.CollectionKey,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityUniqueKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollectionHolder(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addProxy(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.BatchFetchQueue:void addSubselect(org.hibernate.engine.EntityKey,org.hibernate.engine.SubselectFetch)",
            "org.hibernate.engine.BatchFetchQueue:void addBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:void <clinit>()",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Collection:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void addManyToManyFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.mapping.Component:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.criterion.MatchMode:void <clinit>()",
            "org.hibernate.property.MapAccessor$MapSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void doBind(org.hibernate.Session,org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)",
            "org.hibernate.CacheMode:void <clinit>()",
            "org.hibernate.FlushMode:void <clinit>()",
            "org.hibernate.ReplicationMode:void <clinit>()",
            "org.hibernate.ScrollMode:void <clinit>()",
            "org.hibernate.FetchMode:void <clinit>()",
            "org.hibernate.EntityMode:void <clinit>()",
            "org.hibernate.LockMode:void <clinit>()"
        ]
    },
    "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsPersistent(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.EventCache:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:void <init>(org.hibernate.dialect.Dialect,java.util.Map)",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)",
            "org.hibernate.engine.query.sql.NativeSQLQueryNonScalarReturn:void <init>(java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.FilterDefinition:void <init>(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEventListener:void onFlush(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)"
        ]
    },
    "org.hibernate.event.EventListeners:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void reset()",
            "org.hibernate.event.EventListeners:java.lang.Class getListenerClassFor(java.lang.String)",
            "org.hibernate.event.EventListeners:void <clinit>()"
        ]
    },
    "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Any:org.hibernate.type.Type getType()"
        ]
    },
    "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void initForeignKeys(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void initIndexes(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void initColumns(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SyntheticAndFactory:void addWhereFragment(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.hql.ast.tree.QueryNode,org.hibernate.hql.ast.tree.FromElement,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceCollection(org.hibernate.type.CollectionType,boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:void resolveIndex(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void prepareFromClauseInputTree(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:void addDuplicateAlias(java.lang.String,org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:void addJoinByPathMap(java.lang.String,org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:void addCollectionJoinFromElementByPath(java.lang.String,org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.FromParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.FromParser:void <clinit>()",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void setAliasName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void fetch(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void decoratePropertyMapping(java.lang.String,org.hibernate.persister.entity.PropertyMapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String continueFromManyToMany(java.lang.String,java.lang.String[],org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addCollection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void prepareForIndex(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromCollection(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromAssociation(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void addAssociation(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromCollection(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromJoinOnly(java.lang.String,org.hibernate.engine.JoinSequence)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addPathAliasAndJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.CollectionProperties:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:void handlePropertyBeingDereferenced(org.hibernate.type.Type,java.lang.String)",
            "org.hibernate.hql.ast.tree.MethodNode:boolean isCollectionPropertyMethod()",
            "org.hibernate.hql.ast.tree.MethodNode:void resolveCollectionProperty(antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.DotNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceCollection(org.hibernate.type.CollectionType,boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:java.lang.String getNormalizedPropertyName(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:void <clinit>()"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()",
            "org.hibernate.cfg.Mappings:void addClass(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.Mappings:void addCollection(org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.Mappings:void addImport(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addTable(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.cfg.Mappings:void addTypeDef(java.lang.String,java.lang.String,java.util.Properties)",
            "org.hibernate.cfg.Mappings:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Mappings:void addToExtendsQueue(org.hibernate.cfg.ExtendsQueueEntry)",
            "org.hibernate.cfg.Mappings:void addTableBinding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void addColumnBinding(java.lang.String,org.hibernate.mapping.Column,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Configuration:void addFilterDefinition(org.hibernate.engine.FilterDefinition)",
            "org.hibernate.cfg.Configuration:void addSqlFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.collection.PersistentMap$Put:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.CaseFragment:org.hibernate.sql.CaseFragment addWhenColumnNotNull(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void postInstantiate()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createUniqueKeyLoaders()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void addPropertyPath(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[])",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.cache.QueryCache getQueryCache(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.QueryImpl:org.hibernate.Query setLockMode(java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:void registerFunction(java.lang.String,org.hibernate.dialect.function.SQLFunction)",
            "org.hibernate.dialect.Dialect:void <clinit>()",
            "org.hibernate.dialect.ResultColumnReferenceStrategy:void <clinit>()",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:void registerDefaultTuplizerClass(org.hibernate.EntityMode,java.lang.Class)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:void addTuplizer(org.hibernate.EntityMode,org.hibernate.tuple.Tuplizer)",
            "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate()",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.EntityStatistics getEntityStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.CollectionStatistics getCollectionStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.SecondLevelCacheStatistics getSecondLevelCacheStatistics(java.lang.String)",
            "org.hibernate.stat.StatisticsImpl:org.hibernate.stat.QueryStatistics getQueryStatistics(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addPersister(java.lang.String,java.util.Map,org.hibernate.persister.entity.SQLLoadable)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:void put(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.IdentityMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void setCustomListener(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object put(java.lang.Object,java.lang.Object,boolean)",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.EventListeners:void <clinit>()",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection requireQueryableCollection(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addDuplicateAlias(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addJoinByPathMap(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addCollectionJoinFromElementByPath(java.lang.String,org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.HqlSqlWalker:void trackNamedParameterPositions(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setAliasName(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void decoratePropertyMapping(java.lang.String,org.hibernate.persister.entity.PropertyMapping)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addCollection(java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addNamedParameter(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addPathAliasAndJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.CollectionProperties:void <clinit>()",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.CollectionLoadContext getCollectionLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void registerLoadingCollectionXRef(org.hibernate.engine.CollectionKey,org.hibernate.engine.loading.LoadingCollectionEntry)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.engine.loading.EntityLoadContext getEntityLoadContext(java.sql.ResultSet)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription getOrBuildNamedParameterDescription(java.lang.String,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void addUnownedCollection(org.hibernate.engine.CollectionKey,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityUniqueKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollectionHolder(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addProxy(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.BatchFetchQueue:void addSubselect(org.hibernate.engine.EntityKey,org.hibernate.engine.SubselectFetch)",
            "org.hibernate.engine.BatchFetchQueue:void addBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.CascadeStyle:void <clinit>()",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index getOrCreateIndex(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Index addIndex(org.hibernate.mapping.Index)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey addUniqueKey(org.hibernate.mapping.UniqueKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey getOrCreateUniqueKey(java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Collection:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void addManyToManyFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addFilter(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.mapping.Component:void addTuplizer(org.hibernate.EntityMode,java.lang.String)",
            "org.hibernate.criterion.MatchMode:void <clinit>()",
            "org.hibernate.property.MapAccessor$MapSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void doBind(org.hibernate.Session,org.hibernate.SessionFactory)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)",
            "org.hibernate.CacheMode:void <clinit>()",
            "org.hibernate.FlushMode:void <clinit>()",
            "org.hibernate.ReplicationMode:void <clinit>()",
            "org.hibernate.ScrollMode:void <clinit>()",
            "org.hibernate.FetchMode:void <clinit>()",
            "org.hibernate.EntityMode:void <clinit>()",
            "org.hibernate.LockMode:void <clinit>()"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:void registerLoadingCollectionXRef(org.hibernate.engine.CollectionKey,org.hibernate.engine.loading.LoadingCollectionEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addUnownedCollection(org.hibernate.engine.CollectionKey,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntity(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityUniqueKey,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntity(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.TwoPhaseLoad:void postHydrate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,java.lang.Object[],java.lang.Object,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:boolean reassociateIfUninitializedProxy(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(java.lang.Object,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object unproxyAndReassociate(java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object returnNarrowedProxy(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void addUninitializedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addUninitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addInitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry addInitializedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void addNewCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void addInitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addCollectionHolder(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addProxy(org.hibernate.engine.EntityKey,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:void addSubselect(org.hibernate.engine.EntityKey,org.hibernate.engine.SubselectFetch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:void addBatchLoadableEntityKey(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.CascadeStyle:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:org.hibernate.engine.CascadeStyle getCascadeStyle(int)",
            "org.hibernate.type.CompositeCustomType:org.hibernate.engine.CascadeStyle getCascadeStyle(int)",
            "org.hibernate.type.ComponentType:void <init>(org.hibernate.tuple.component.ComponentMetamodel)",
            "org.hibernate.engine.CascadeStyle:org.hibernate.engine.CascadeStyle getCascadeStyle(java.lang.String)",
            "org.hibernate.engine.CascadeStyle:void <clinit>()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()"
        ]
    },
    "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.mapping.Collection:void addFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.Collection:void addManyToManyFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void addFilter(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void addTuplizer(org.hibernate.EntityMode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDom4jRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Component:void addTuplizer(org.hibernate.EntityMode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.criterion.MatchMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:org.hibernate.criterion.Example enableLike()",
            "org.hibernate.criterion.MatchMode:java.lang.Object readResolve()",
            "org.hibernate.criterion.MatchMode:void <clinit>()"
        ]
    },
    "org.hibernate.property.MapAccessor$MapSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void setParent(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,int,java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:void doBind(org.hibernate.Session,org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void bind(org.hibernate.Session)",
            "org.hibernate.context.ThreadLocalSessionContext:void access$200(org.hibernate.Session,org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.CacheMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.hibernate.CacheMode getCacheMode(java.lang.String)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.CacheMode getCacheMode()",
            "org.hibernate.impl.SessionImpl:void <init>(org.hibernate.impl.SessionImpl,org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl,boolean,long,org.hibernate.Interceptor,org.hibernate.EntityMode,boolean,boolean,org.hibernate.ConnectionReleaseMode)",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeBeforeDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.EntityEntry,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeAfterDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Set)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.TwoPhaseLoad:boolean useMinimalPuts(org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry)",
            "org.hibernate.CacheMode:java.lang.Object readResolve()",
            "org.hibernate.CacheMode:org.hibernate.CacheMode parse(java.lang.String)",
            "org.hibernate.CacheMode:void <clinit>()"
        ]
    },
    "org.hibernate.FlushMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.hibernate.FlushMode getFlushMode(java.lang.String)",
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.FlushMode getFlushMode()",
            "org.hibernate.impl.SessionImpl:void <init>(org.hibernate.impl.SessionImpl,org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl,boolean,long,org.hibernate.Interceptor,org.hibernate.EntityMode,boolean,boolean,org.hibernate.ConnectionReleaseMode)",
            "org.hibernate.impl.SessionImpl:boolean isFlushModeNever()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushIsReallyNeeded(org.hibernate.event.AutoFlushEvent,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushMightBeNeeded(org.hibernate.event.EventSource)",
            "org.hibernate.FlushMode:boolean isManualFlushMode(org.hibernate.FlushMode)",
            "org.hibernate.FlushMode:java.lang.Object readResolve()",
            "org.hibernate.FlushMode:org.hibernate.FlushMode parse(java.lang.String)",
            "org.hibernate.FlushMode:void <clinit>()"
        ]
    },
    "org.hibernate.ReplicationMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.ReplicationMode:java.lang.Object readResolve()",
            "org.hibernate.ReplicationMode:void <clinit>()"
        ]
    },
    "org.hibernate.ScrollMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll()",
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll()",
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.ScrollMode:java.lang.Object readResolve()",
            "org.hibernate.ScrollMode:void <clinit>()"
        ]
    },
    "org.hibernate.FetchMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void initOuterJoinFetchSetting(org.dom4j.Element,org.hibernate.mapping.Fetchable)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:boolean isDefaultFetchMode(org.hibernate.FetchMode)",
            "org.hibernate.loader.JoinWalker:boolean isJoinedFetchEnabledInMapping(org.hibernate.FetchMode,org.hibernate.type.AssociationType)",
            "org.hibernate.type.AnyType:org.hibernate.FetchMode getFetchMode(int)",
            "org.hibernate.type.CompositeCustomType:org.hibernate.FetchMode getFetchMode(int)",
            "org.hibernate.type.ComponentType:void <init>(org.hibernate.tuple.component.ComponentMetamodel)",
            "org.hibernate.mapping.SimpleValue:org.hibernate.FetchMode getFetchMode()",
            "org.hibernate.mapping.OneToMany:org.hibernate.FetchMode getFetchMode()",
            "org.hibernate.FetchMode:java.lang.Object readResolve()",
            "org.hibernate.FetchMode:void <clinit>()"
        ]
    },
    "org.hibernate.EntityMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDom4jRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void <init>(org.hibernate.impl.SessionImpl,org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl,boolean,long,org.hibernate.Interceptor,org.hibernate.EntityMode,boolean,boolean,org.hibernate.ConnectionReleaseMode)",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:java.util.Map buildBaseMapping()",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:java.util.Map buildBaseMapping()",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.property.Getter getGetter(org.hibernate.mapping.Property)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedIdentifierValue(org.hibernate.Criteria,java.lang.Object)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EmbeddedComponentType:boolean isMethodOf(java.lang.reflect.Method)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:boolean hasHolder(org.hibernate.EntityMode)",
            "org.hibernate.type.CollectionType:boolean initializeImmediately(org.hibernate.EntityMode)",
            "org.hibernate.type.CompositeCustomType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Class getReturnedClass()",
            "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:boolean isNotEmbedded(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.EntityEntry:org.hibernate.engine.EntityEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.CollectionKey:org.hibernate.engine.CollectionKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:boolean cascadeAssociationNow(org.hibernate.type.AssociationType)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.EntityKey:org.hibernate.engine.EntityKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.Property:java.lang.String getAccessorPropertyName(org.hibernate.EntityMode)",
            "org.hibernate.criterion.SimpleSubqueryExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.InExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SizeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SQLCriterion:void <init>(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.criterion.SubqueryExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(org.hibernate.mapping.Property,org.hibernate.EntityMode)",
            "org.hibernate.EntityMode:java.lang.Object readResolve()",
            "org.hibernate.EntityMode:org.hibernate.EntityMode parse(java.lang.String)",
            "org.hibernate.EntityMode:void <clinit>()"
        ]
    },
    "org.hibernate.LockMode:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.LockMode getLockMode(java.lang.String)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SimpleSelect:void <init>(org.hibernate.dialect.Dialect)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initLockers()",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader createUniqueKeyLoader(org.hibernate.type.Type,java.lang.String[],java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:org.hibernate.LockMode getCurrentLockMode(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getEntityUsingInterceptor(org.hibernate.engine.EntityKey)",
            "org.hibernate.id.enhanced.TableStructure:void <init>(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,int,int)",
            "org.hibernate.id.enhanced.TableGenerator:java.lang.String buildSelectQuery(org.hibernate.dialect.Dialect)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void <init>(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.TimesTenDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.Dialect:java.lang.String getForUpdateString(org.hibernate.LockMode)",
            "org.hibernate.dialect.FrontBaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.PointbaseDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.SQLServerDialect:java.lang.String appendLockHint(org.hibernate.LockMode,java.lang.String)",
            "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.RDMSOS2200Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String appendLockHint(org.hibernate.LockMode,java.lang.String)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.Cache71Dialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.dialect.MckoiDialect:org.hibernate.dialect.lock.LockingStrategy getLockingStrategy(org.hibernate.persister.entity.Lockable,org.hibernate.LockMode)",
            "org.hibernate.loader.collection.OneToManyJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.EntityJoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.entity.CollectionElementLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.CascadeEntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.ArrayHelper:org.hibernate.LockMode[] fillArray(org.hibernate.LockMode,int)",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultLoadEventListener:void <clinit>()",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.RefreshEvent:void <init>(java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.event.EventSource)",
            "org.hibernate.event.LoadEvent:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.engine.CascadingAction$2:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.EntityEntry:void postUpdate(java.lang.Object,java.lang.Object[],java.lang.Object)",
            "org.hibernate.engine.EntityEntry:void forceLocked(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.EntityEntry:org.hibernate.engine.EntityEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.LockMode:java.lang.Object readResolve()",
            "org.hibernate.LockMode:org.hibernate.LockMode parse(java.lang.String)",
            "org.hibernate.LockMode:void <clinit>()"
        ]
    },
    "org.hibernate.collection.PersistentMap$Remove:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Remove:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void remove(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection useUnownedCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry removeEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection removeCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.BatchFetchQueue:void removeSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.BatchFetchQueue:void removeBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)",
            "org.hibernate.context.JTASessionContext$CleanupSynch:void afterCompletion(int)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.HashtableCache:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:void evict(java.lang.Object)",
            "org.hibernate.cache.NonstrictReadWriteCache:void remove(java.lang.Object)",
            "org.hibernate.cache.NonstrictReadWriteCache:void evict(java.lang.Object)",
            "org.hibernate.cache.NonstrictReadWriteCache:void release(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.ReadWriteCache:void remove(java.lang.Object)",
            "org.hibernate.cache.ReadOnlyCache:void remove(java.lang.Object)",
            "org.hibernate.cache.TransactionalCache:void evict(java.lang.Object)",
            "org.hibernate.cache.TransactionalCache:void remove(java.lang.Object)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Remove:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void remove(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection useUnownedCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry removeEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection removeCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.BatchFetchQueue:void removeSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.BatchFetchQueue:void removeBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)",
            "org.hibernate.context.JTASessionContext$CleanupSynch:void afterCompletion(int)"
        ]
    },
    "org.hibernate.event.def.EventCache:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Remove:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void remove(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection useUnownedCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry removeEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection removeCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.BatchFetchQueue:void removeSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.BatchFetchQueue:void removeBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)",
            "org.hibernate.context.JTASessionContext$CleanupSynch:void afterCompletion(int)"
        ]
    },
    "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.EvictVisitor:void evictCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Remove:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void remove(java.lang.Object)",
            "org.hibernate.util.IdentityMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.EventCache:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection useUnownedCollection(org.hibernate.engine.CollectionKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry removeEntry(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection removeCollectionHolder(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.BatchFetchQueue:void removeSubselect(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.BatchFetchQueue:void removeBatchLoadableEntityKey(org.hibernate.engine.EntityKey)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)",
            "org.hibernate.context.JTASessionContext$CleanupSynch:void afterCompletion(int)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractScrollableResults:void close()",
            "org.hibernate.impl.IteratorImpl:void close()",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection useUnownedCollection(org.hibernate.engine.CollectionKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry removeEntry(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.collection.PersistentCollection removeCollectionHolder(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.EvictVisitor:void evictCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:void postInsert()"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:void removeSubselect(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:void removeBatchLoadableEntityKey(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void addEntity(org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeProxy(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.context.JTASessionContext$CleanupSynch:void afterCompletion(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader createEntityLoader(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void createLoaders()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void load(java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.Class,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object immediateLoad(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.AbstractLazyInitializer:void initialize()"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:java.lang.Object resolveAny(java.lang.String,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascadeAssociation(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeProperty(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueResult()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromDatasource(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)"
        ]
    },
    "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object fireMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.impl.SessionImpl:java.lang.Object fireSaveOrUpdateCopy(org.hibernate.event.MergeEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireMerge(java.util.Map,org.hibernate.event.MergeEvent)",
            "org.hibernate.impl.SessionImpl:void fireSaveOrUpdateCopy(java.util.Map,org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void firePersist(java.util.Map,org.hibernate.event.PersistEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void persist(java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void firePersistOnFlush(java.util.Map,org.hibernate.event.PersistEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void persistOnFlush(java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void firePersist(org.hibernate.event.PersistEvent)",
            "org.hibernate.impl.SessionImpl:void firePersistOnFlush(org.hibernate.event.PersistEvent)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:int size()",
            "org.hibernate.collection.PersistentList:boolean isEmpty()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentIdentifierBag:int size()",
            "org.hibernate.collection.PersistentSet:int size()",
            "org.hibernate.collection.PersistentSet:boolean isEmpty()",
            "org.hibernate.collection.PersistentMap:int size()",
            "org.hibernate.collection.PersistentMap:boolean isEmpty()",
            "org.hibernate.collection.PersistentBag:int size()",
            "org.hibernate.collection.PersistentBag:boolean isEmpty()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean contains(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void managedFlush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.CMTTransaction:void commit()",
            "org.hibernate.transaction.CacheSynchronization:void beforeCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void commit()",
            "org.hibernate.transaction.JTATransaction:void commit()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void forceFlush(org.hibernate.engine.EntityEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsTransient(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:java.util.List list(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void initializeCollection(org.hibernate.collection.PersistentCollection,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void initialize(boolean)",
            "org.hibernate.collection.AbstractPersistentCollection:void forceInitialization()",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn bindReturnJoin(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn bindLoadCollection(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry addInitializedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRecreateAction:void execute()",
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void preFlush(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRecreateAction:void execute()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void updateRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void updateRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean afterInitialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean endRead()",
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.QueryParameters:void traceParameters(org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void add(org.dom4j.Document)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootClass(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDom4jRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumnsOrFormula(org.dom4j.Element,org.hibernate.mapping.SimpleValue,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleValue(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$CollectionType$1:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder$CollectionType$5:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindArray(org.dom4j.Element,org.hibernate.mapping.Array,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder$CollectionType$3:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder$CollectionType$2:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder$CollectionType$4:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComposite(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,boolean,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.Component,org.hibernate.mapping.PersistentClass,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindIdentifierCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.IdentifierCollection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$MapSecondPass:void secondPass(java.util.Map,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingSecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,org.hibernate.cfg.Settings)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.sql.Connection)"
        ]
    },
    "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,org.hibernate.cfg.Settings)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.sql.Connection)"
        ]
    },
    "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void validate()"
        ]
    },
    "org.hibernate.cfg.Configuration:void validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()"
        ]
    },
    "org.hibernate.cfg.Configuration:void secondPassCompile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void buildMappings()",
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()"
        ]
    },
    "org.hibernate.cfg.Configuration:void processExtendsQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()"
        ]
    },
    "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)"
        ]
    },
    "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)"
        ]
    },
    "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.PersistentList:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentSet:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentArrayHolder:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence getFromPart()",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence copy()",
            "org.hibernate.mapping.Table$ForeignKeyKey:void <init>(java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.IdentifierBagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence getFromPart()",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence copy()",
            "org.hibernate.mapping.Table$ForeignKeyKey:void <init>(java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String manyToManySelectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String identifierSelectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,org.hibernate.persister.entity.AbstractEntityPersister$InclusionChecker)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String renderSelect(int[],int[],int[])",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment setExtraSelectList(org.hibernate.sql.CaseFragment,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment setExtraSelectList(org.hibernate.sql.CaseFragment,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QuerySelect:void setWhereTokens(java.util.Iterator)",
            "org.hibernate.sql.QuerySelect:void setGroupByTokens(java.util.Iterator)",
            "org.hibernate.sql.QuerySelect:void setOrderByTokens(java.util.Iterator)",
            "org.hibernate.sql.QuerySelect:void setHavingTokens(java.util.Iterator)"
        ]
    },
    "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment setExtraSelectList(org.hibernate.sql.CaseFragment,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()"
        ]
    },
    "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment setExtraSelectList(org.hibernate.sql.CaseFragment,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment setExtraSelectList(org.hibernate.sql.CaseFragment,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.sql.InFragment:java.lang.String toFragmentString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String discriminatorFilterFragment(java.lang.String)",
            "org.hibernate.loader.JoinWalker:java.lang.StringBuffer whereString(java.lang.String,java.lang.String[],int)"
        ]
    },
    "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.hql.QuerySplitter:java.lang.String[] concreteQueries(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String guessEntityName(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:void verifyParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CollectionFilterImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.CollectionFilterImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQuerySpecification generateQuerySpecification(java.util.Map)",
            "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.QueryImpl:java.util.List list()",
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.lang.Object[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.sql.Connection close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedClose()",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()",
            "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean isAffectedByEnabledFilters(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.engine.query.HQLQueryPlan getHQLQueryPlan(java.lang.String,boolean)",
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.criterion.SubqueryExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect determineDialect(java.sql.Connection)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.lang.String buildSelectQuery(org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:java.lang.String getTypeName(int,int,int,int)",
            "org.hibernate.dialect.Dialect:java.lang.String getHibernateTypeName(int,int,int,int)"
        ]
    },
    "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.DynamicMapComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.Dom4jComponentTuplizer:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.engine.ValueInclusion determineInsertValueGenerationType(org.hibernate.mapping.Property,org.hibernate.tuple.StandardProperty)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.engine.ValueInclusion determineUpdateValueGenerationType(org.hibernate.mapping.Property,org.hibernate.tuple.StandardProperty)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void addCollection(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.SessionImplementor,org.hibernate.ScrollMode)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.util.List list(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.criterion.SubqueryExpression:void createAndSetInnerQuery(org.hibernate.criterion.CriteriaQuery,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.entity.CascadeEntityJoinWalker:boolean isTooManyCollections()",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List,java.lang.String)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initAll(java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.StandardQueryCache:boolean isUpToDate(java.util.Set,java.lang.Long)"
        ]
    },
    "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.util.JoinedIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.LazyIterator:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettings()"
        ]
    },
    "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.util.IdentityMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:void <init>(org.hibernate.dialect.Dialect,java.util.Map)",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)",
            "org.hibernate.engine.query.sql.NativeSQLQueryNonScalarReturn:void <init>(java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.FilterDefinition:void <init>(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Set entrySet()",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.EventCache:java.util.Set entrySet()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.List entryList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.IdentityMap:java.util.List entries(java.util.Map)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] concurrentEntries(java.util.Map)"
        ]
    },
    "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Junction:java.lang.String toString()"
        ]
    },
    "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.QuerySplitter:java.lang.String[] concreteQueries(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.AbstractJndiBoundCacheProvider:void start(java.util.Properties)",
            "org.hibernate.util.NamingHelper:javax.naming.InitialContext getInitialContext(java.util.Properties)"
        ]
    },
    "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean endRead()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)"
        ]
    },
    "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String generateSequentialSelect(org.hibernate.persister.entity.Loadable)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateLazySelectString()",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.util.StringHelper:int[] locateUnquoted(java.lang.String,char)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:int[] getNamedParameterLocations(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:int[] buildPositionsArray()"
        ]
    },
    "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.FastHashMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:int hashCode()",
            "org.hibernate.cache.FilterKey:int hashCode()",
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.DriverManagerConnectionProvider:void configure(java.util.Properties)"
        ]
    },
    "org.hibernate.connection.DriverManagerConnectionProvider:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.connection.DriverManagerConnectionProvider:void finalize()",
            "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper:void release()"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void closeStatements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:void afterTransaction()",
            "org.hibernate.jdbc.ConnectionManager:java.sql.Connection cleanup()"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.NativeSQLQueryPlan:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.BulkOperationCleanupAction:void init()",
            "org.hibernate.action.BulkOperationCleanupAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.BulkOperationCleanupAction:void init()",
            "org.hibernate.action.BulkOperationCleanupAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)"
        ]
    },
    "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:boolean isFoundInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CustomCollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:void transform(javassist.bytecode.ClassFile)"
        ]
    },
    "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:void transform(javassist.bytecode.ClassFile)"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.instrument.BasicInstrumentationTask:void execute()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.instrument.BasicInstrumentationTask:void execute()"
        ]
    },
    "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement getFromElement(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:void resolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void evaluateAssignment(antlr.collections.AST,org.hibernate.persister.entity.Queryable,int)"
        ]
    },
    "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String renderDisplayInfo()"
        ]
    },
    "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:int executeUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:int executeUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:int executeUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:void validateScrollability()"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.String preprocessSQL(java.lang.String,org.hibernate.engine.QueryParameters,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void endCollectionLoad(java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:void cleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void clear()"
        ]
    },
    "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.StatelessSessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:void afterScrollOperation()",
            "org.hibernate.impl.StatelessSessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:void clear()",
            "org.hibernate.impl.SessionImpl:void cleanup()"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void afterTransactionCompletion(boolean,org.hibernate.Transaction)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollection(java.lang.Object,org.hibernate.engine.CascadeStyle,java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Nullability:void checkNullability(java.lang.Object[],org.hibernate.persister.entity.EntityPersister,boolean)",
            "org.hibernate.engine.Nullability:java.lang.String checkComponentNullability(java.lang.Object,org.hibernate.type.AbstractComponentType)"
        ]
    },
    "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void sortInsertActions()"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()"
        ]
    },
    "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator)"
        ]
    },
    "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.SimpleValue:void createForeignKeyOfEntity(java.lang.String)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:boolean hasFormula()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.ManyToOne:void createForeignKey()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:void createForeignKeyOfEntity(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SingleTableSubclass:java.util.Iterator getDiscriminatorColumnIterator()"
        ]
    },
    "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:boolean isNullable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.persister.collection.OneToManyPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Property:boolean isNullable()"
        ]
    },
    "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Property:boolean isInsertable()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()"
        ]
    },
    "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.IdentifierCollection:void createPrimaryKey()",
            "org.hibernate.mapping.Join:void createPrimaryKey()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:void createPrimaryKey()"
        ]
    },
    "org.hibernate.mapping.Set:void createPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:void createAllKeys()"
        ]
    },
    "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Index:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()"
        ]
    },
    "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Constraint:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.Join:boolean isLazy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:void createAllKeys()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:int getSubclassSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getRecursiveProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SingleTableSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)"
        ]
    },
    "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Constraint:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)"
        ]
    },
    "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.ForeignKey:void alignColumns()"
        ]
    },
    "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()"
        ]
    },
    "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()"
        ]
    },
    "org.hibernate.mapping.Component:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Property:int getColumnSpan()",
            "org.hibernate.mapping.OneToMany:int getColumnSpan()",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()"
        ]
    },
    "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Property:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.OneToMany:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.IdentifierCollection:void createPrimaryKey()",
            "org.hibernate.mapping.Collection:void checkColumnDuplication()",
            "org.hibernate.mapping.Join:void createPrimaryKey()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.SingleTableSubclass:java.util.Iterator getDiscriminatorColumnIterator()",
            "org.hibernate.mapping.PersistentClass:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.Component:boolean[] getColumnInsertability()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Property:boolean isInsertable()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()"
        ]
    },
    "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Property:boolean isUpdateable()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()"
        ]
    },
    "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getRecursiveProperty(java.lang.String,java.util.Iterator)"
        ]
    },
    "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Constraint:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Constraint:java.lang.String sqlDropString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Constraint:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.NaturalIdentifier:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.transform.DistinctRootEntityResultTransformer:java.util.List transformList(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listIgnoreQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CollectionFilterImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.CollectionFilterImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)",
            "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.QueryImpl:java.util.List list()",
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:void verifyParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CollectionFilterImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.CollectionFilterImpl:java.util.List list()",
            "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.QueryImpl:java.util.List list()",
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.SessionImpl:int delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void methodCall(antlr.collections.AST)"
        ]
    },
    "org.hibernate.dialect.function.StandardJDBCEscapeFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List listIgnoreQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.entity.EntityLoader:java.lang.Object loadByUniqueKey(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:void <init>(org.hibernate.hql.ast.QueryTranslatorImpl,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.hql.ast.tree.SelectClause)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:void doCompile(java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.hibernate.loader.OuterJoinableAssociation:int getOwner(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.ScrollableResultsImpl:void prepareCurrentRow(boolean)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsForward(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsReverse(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List doQueryAndInitializeNonLazyCollections(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:void putResultInQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List getResultFromQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.engine.CascadingAction:java.util.Iterator getAllElementsIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction:java.util.Iterator access$100(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.CascadingAction:java.util.Iterator getLoadedElementsIterator(org.hibernate.engine.SessionImplementor,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$2:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$9:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$10:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$6:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$5:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$4:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$7:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$3:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void commit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.JDBCTransaction:void rollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.hql.ast.tree.IdentNode:int resolveAsNakedPropertyRef()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IdentNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.IdentNode:boolean resolveAsNakedComponentPropertyRefLHS(org.hibernate.hql.ast.tree.DotNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IdentNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.IdentNode:boolean resolveAsNakedComponentPropertyRefRHS(org.hibernate.hql.ast.tree.DotNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IdentNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ParameterTranslations getParameterTranslations()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int[] getNamedParameterLocs(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void assignment(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunction(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void joinElement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRefLhs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExprLhs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generateVersionPropertyNode(org.hibernate.persister.entity.Queryable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void prepareVersioned(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void postProcessUpdate(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDelete(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void deleteStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void out(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator:void optionalSpace()",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator:void fromFragmentSeparator(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator:void nestedFromFragment(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void out(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void separator(antlr.collections.AST,java.lang.String)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void beginFunctionTemplate(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void endFunctionTemplate(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void commaBetweenParameters(java.lang.String)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void 'from'(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void groupExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void setClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void comparisonExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void conditionList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void distinctOrAll(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void count(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void aggregate(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void countExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanOp(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void binaryComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void likeEscape(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void inList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void quantified(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parenSelect(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void additiveExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void multiplicativeExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void caseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExprAfterMinusDiv(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.exec.BasicExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker,org.hibernate.persister.entity.Queryable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.exec.StatementExecutor buildAppropriateStatementExecutor(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:void generate(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:void doCompile(java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlSqlWalker analyze(org.hibernate.hql.ast.HqlParser,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:void doCompile(java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlParser parse(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:void doCompile(java.util.Map,boolean,java.lang.String)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata getSQLParameterMetadata(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedSQLQuery(java.lang.String)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.SQLQuery createSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String,java.lang.Class)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String[],java.lang.Class[])"
        ]
    },
    "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CustomType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.TypedValue:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.hql.ast.util.JoinProcessor:void addJoinNodes(org.hibernate.hql.ast.tree.QueryNode,org.hibernate.engine.JoinSequence,org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)"
        ]
    },
    "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void addJoin(org.hibernate.engine.JoinSequence,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.CollectionSubqueryFactory:java.lang.String createCollectionSubquery(org.hibernate.engine.JoinSequence,java.util.Map,java.lang.String[])",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.engine.ActionQueue:boolean areTablesToBeUpdated(java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushIsReallyNeeded(org.hibernate.event.AutoFlushEvent,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void prepareActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void performExecutions(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedColumnAliases()",
            "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumnsUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(java.lang.String,int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getTypeUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedAliases()",
            "org.hibernate.criterion.Distinct:java.lang.String[] getAliases()",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()"
        ]
    },
    "org.hibernate.criterion.ProjectionList:boolean isGrouped()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:boolean isGrouped()",
            "org.hibernate.criterion.AliasedProjection:boolean isGrouped()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:boolean isGrouped()"
        ]
    },
    "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElements(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setString(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCharacter(int,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBoolean(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setByte(int,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setShort(int,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setInteger(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLong(int,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setFloat(int,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDouble(int,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBinary(int,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setText(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setSerializable(int,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDate(int,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTime(int,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTimestamp(int,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setEntity(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLocale(int,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendar(int,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendarDate(int,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigDecimal(int,java.math.BigDecimal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigInteger(int,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentList$SimpleRemove:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$SimpleRemove:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean remove(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromElement:void setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$1:void handleEntity(java.lang.String,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSet$SimpleRemove:void operate()",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$SimpleRemove:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean remove(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromElement:void setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$SimpleRemove:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean remove(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromElement:void setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:void setIndexCollectionSelectorParamSpec(org.hibernate.param.ParameterSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.Loader:java.util.List doQueryAndInitializeNonLazyCollections(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,org.hibernate.type.Type,org.hibernate.type.Type,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.loader.Loader:java.util.List loadEntityBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.loader.Loader:void loadCollection(org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:void loadCollectionBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:void loadCollectionSubselect(org.hibernate.engine.SessionImplementor,java.io.Serializable[],java.lang.Object[],org.hibernate.type.Type[],java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$ListSecondPass:void secondPass(java.util.Map,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.PersistentClass getSuperclass(org.hibernate.cfg.Mappings,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void handleJoinedSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.Mappings:java.lang.String getLogicalTableName(org.hibernate.mapping.Table)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.HbmBinder$CollectionSecondPass:void secondPass(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindIdentifierCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.IdentifierCollection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$IdentifierCollectionSecondPass:void secondPass(java.util.Map,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindRootClass(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void handleUnionSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindSubclass(org.dom4j.Element,org.hibernate.mapping.Subclass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void handleSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.mapping.RootClass getRootClassMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void setCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.cfg.Configuration:void setCollectionCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration setCollectionCacheConcurrencyStrategy(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierType(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.Object fromXMLNode(org.dom4j.Node,org.hibernate.engine.Mapping)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierType(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.String getIdentifierOrUniqueKeyPropertyName(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initIdentifierPropertyPaths(java.lang.String,org.hibernate.type.EntityType,java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String getIdentifierOrUniqueKeyPropertyName(org.hibernate.type.EntityType)",
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:boolean hasNonIdentifierPropertyNamedId(org.hibernate.type.EntityType,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initIdentifierPropertyPaths(java.lang.String,org.hibernate.type.EntityType,java.lang.String[],org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initIdentifierPropertyPaths(java.lang.String,org.hibernate.type.EntityType,java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.Mapping)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.collection.PersistentList$Add:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void add(int,java.lang.Object)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolverAtFirst(org.hibernate.dialect.resolver.DialectResolver)"
        ]
    },
    "org.hibernate.dialect.Dialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.lang.String buildSelectQuery(org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:boolean isSubclassPropertyDeferred(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.type.Type toType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.classic.PathExpressionParser:org.hibernate.type.Type getPropertyType()",
            "org.hibernate.criterion.AbstractEmptinessExpression:org.hibernate.persister.collection.QueryableCollection getQueryableCollection(java.lang.String,java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.type.Type toType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.type.Type toType(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getPathEntityName(java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)",
            "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.classic.PathExpressionParser:org.hibernate.type.Type getPropertyType()",
            "org.hibernate.criterion.AbstractEmptinessExpression:org.hibernate.persister.collection.QueryableCollection getQueryableCollection(java.lang.String,java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int getSubclassPropertyTableNumber(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.BasicEntityPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.Queryable$Declarer getSubclassPropertyDeclarer(java.lang.String)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean isSuperclassProperty(java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.type.Type getPropertyType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void <init>(org.hibernate.id.PostInsertIdentityPersister,org.hibernate.dialect.Dialect,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:org.hibernate.persister.entity.Queryable determineAppropriateOwnerPersister(org.hibernate.loader.custom.NonScalarReturn)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getTypeUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.PropertyProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AggregateProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:org.hibernate.type.Type getPropertyType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void setType()",
            "org.hibernate.hql.classic.PathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:boolean isCollectionValued()",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.FromPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.criterion.AbstractEmptinessExpression:org.hibernate.persister.collection.QueryableCollection getQueryableCollection(java.lang.String,java.lang.String,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.AbstractEmptinessExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] toColumns(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.IdentNode:int resolveAsNakedPropertyRef()",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] getPropertyColumnNames(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getSelectByUniqueKeyString(java.lang.String)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getLHSColumnNames(org.hibernate.type.AssociationType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getRHSColumnNames(org.hibernate.type.AssociationType,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String[] currentColumns()",
            "org.hibernate.engine.SubselectFetch:java.lang.String toSubselectString(java.lang.String)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.BasicEntityPropertyMapping:java.lang.String[] toColumns(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String[] currentColumns()",
            "org.hibernate.engine.SubselectFetch:java.lang.String toSubselectString(java.lang.String)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getColumn(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumnsUsingProjection(org.hibernate.Criteria,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createElementJoin(org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createManyToMany(java.lang.String,java.lang.String,java.lang.String,org.hibernate.persister.entity.Queryable,org.hibernate.type.EntityType,int)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderScalarIdentifierSelect(int)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:java.lang.String[] currentColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void addJoin(java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.PathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String getCollectionSubquery(java.util.Map)"
        ]
    },
    "org.hibernate.engine.SubselectFetch:java.lang.String toSubselectString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:org.hibernate.loader.collection.CollectionInitializer createSubselectInitializer(org.hibernate.engine.SubselectFetch,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void initOrdinaryPropertyPaths(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void initPropertyPaths(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void initIdentifierPropertyPaths(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void initPropertyPaths(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void initDiscriminatorPropertyPath(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void initPropertyPaths(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:void initIdentifierPropertyPaths(java.lang.String,org.hibernate.type.EntityType,java.lang.String[],org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.CompositeElementPropertyMapping:void <init>(java.lang.String[],java.lang.String[],org.hibernate.type.AbstractComponentType,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String discriminatorFilterFragment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String filterFragment(java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String oneToManyFilterFragment(java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.EntityPersister getSubclassEntityPersister(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type getIdentifierType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierType(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.lang.String getIdentifierPropertyName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.String getIdentifierOrUniqueKeyPropertyName(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:boolean hasNonIdentifierPropertyNamedId(org.hibernate.type.EntityType,org.hibernate.engine.Mapping)",
            "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierOrUniqueKeyType(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedEntityName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedEntityClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:java.lang.Object resolveAny(java.lang.String,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.id.Assigned:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getOptionalObjectKey(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.persister.entity.OuterJoinLoadable getOuterJoinLoadable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type guessType(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Class)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type guessType(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)",
            "org.hibernate.id.Assigned:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getOptionalObjectKey(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsPersistent(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsTransient(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithRequestedId(java.lang.Object,java.io.Serializable,java.lang.String,java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.OuterJoinLoadable getOuterJoinLoadable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.persister.entity.SQLLoadable getSQLLoadable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:org.hibernate.persister.entity.Queryable determineAppropriateOwnerPersister(org.hibernate.loader.custom.NonScalarReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:org.hibernate.persister.entity.Queryable determineAppropriateOwnerPersister(org.hibernate.loader.custom.NonScalarReturn)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getPathEntityName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getIdentifierColumns(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getIdentifierType(org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedIdentifierValue(org.hibernate.Criteria,java.lang.Object)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)"
        ]
    },
    "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.JoinWalker:boolean isJoinedFetchEnabledInMapping(org.hibernate.FetchMode,org.hibernate.type.AssociationType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.AbstractEntityJoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.JoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:boolean readBoolean(java.lang.Object,java.lang.String,boolean)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:byte readByte(java.lang.Object,java.lang.String,byte)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:char readChar(java.lang.Object,java.lang.String,char)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:double readDouble(java.lang.Object,java.lang.String,double)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:float readFloat(java.lang.Object,java.lang.String,float)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:int readInt(java.lang.Object,java.lang.String,int)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:long readLong(java.lang.Object,java.lang.String,long)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:short readShort(java.lang.Object,java.lang.String,short)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:java.lang.Object readObject(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:boolean writeBoolean(java.lang.Object,java.lang.String,boolean,boolean)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:byte writeByte(java.lang.Object,java.lang.String,byte,byte)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:char writeChar(java.lang.Object,java.lang.String,char,char)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:double writeDouble(java.lang.Object,java.lang.String,double,double)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:float writeFloat(java.lang.Object,java.lang.String,float,float)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:int writeInt(java.lang.Object,java.lang.String,int,int)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:long writeLong(java.lang.Object,java.lang.String,long,long)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:short writeShort(java.lang.Object,java.lang.String,short,short)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:java.lang.Object writeObject(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:boolean readBoolean(java.lang.Object,java.lang.String,boolean)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:byte readByte(java.lang.Object,java.lang.String,byte)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:char readChar(java.lang.Object,java.lang.String,char)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:double readDouble(java.lang.Object,java.lang.String,double)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:float readFloat(java.lang.Object,java.lang.String,float)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:int readInt(java.lang.Object,java.lang.String,int)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:long readLong(java.lang.Object,java.lang.String,long)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:short readShort(java.lang.Object,java.lang.String,short)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:java.lang.Object readObject(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:boolean writeBoolean(java.lang.Object,java.lang.String,boolean,boolean)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:byte writeByte(java.lang.Object,java.lang.String,byte,byte)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:char writeChar(java.lang.Object,java.lang.String,char,char)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:double writeDouble(java.lang.Object,java.lang.String,double,double)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:float writeFloat(java.lang.Object,java.lang.String,float,float)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:int writeInt(java.lang.Object,java.lang.String,int,int)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:long writeLong(java.lang.Object,java.lang.String,long,long)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:short writeShort(java.lang.Object,java.lang.String,short,short)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:java.lang.Object writeObject(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.action.EntityAction:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireEvict(org.hibernate.event.EvictEvent)"
        ]
    },
    "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:void beforeAssemble(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:org.hibernate.persister.entity.Joinable getAssociatedJoinable(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.OuterJoinableAssociation:void <init>(org.hibernate.type.AssociationType,java.lang.String,java.lang.String[],java.lang.String,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[],org.hibernate.type.AssociationType)",
            "org.hibernate.type.EntityType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getRHSColumnNames(org.hibernate.type.AssociationType,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.JoinSequence$Join:void <init>(org.hibernate.engine.JoinSequence,org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])"
        ]
    },
    "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.CacheKey:void <init>(java.io.Serializable,org.hibernate.type.Type,java.lang.String,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:int generateHashCode()",
            "org.hibernate.engine.EntityUniqueKey:int generateHashCode(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.EntityKey:int generateHashCode()"
        ]
    },
    "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsPersistent(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.Collections:void prepareCollectionForUpdate(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:org.hibernate.type.Type getSemiResolvedType(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.EntityUniqueKey:void <init>(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.type.Type,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.Queryable findQueryableUsingImports(org.hibernate.engine.SessionFactoryImplementor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.Queryable findQueryableUsingImports(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.EntityPersister findEntityPersisterByName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.EntityPersister requireClassPersister(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.tree.DotNode:boolean isReferenceToPrimaryKey(java.lang.String,org.hibernate.type.EntityType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntity(org.hibernate.type.EntityType,boolean,java.lang.String,boolean,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersisterUsingImports(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String continueFromManyToMany(java.lang.String,java.lang.String[],org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersisterForName(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object[],java.lang.Object)"
        ]
    },
    "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.LockMode getCurrentLockMode(java.lang.Object)",
            "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.EntityEntry:void <init>(org.hibernate.engine.SessionFactoryImplementor,java.lang.String,java.io.Serializable,org.hibernate.EntityMode,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.LockMode,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.EntityEntry:org.hibernate.engine.EntityEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.EntityEntry:void afterDeserialize(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.EntityKey:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AbstractEmptinessExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Example:org.hibernate.EntityMode getEntityMode(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void addComponentTypedValues(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,java.util.List,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendComponentCondition(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void evictCachedCollections(org.hibernate.type.Type[],java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()"
        ]
    },
    "org.hibernate.action.CollectionAction:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.event.def.OnLockVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.event.def.ProxyVisitor:void reattachCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnLockVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.type.CustomCollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.CollectionType:org.hibernate.persister.collection.CollectionPersister getPersister(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:boolean isOwnerVersioned(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.CollectionType:org.hibernate.persister.entity.Joinable getAssociatedJoinable(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.loader.OuterJoinableAssociation:void <init>(org.hibernate.type.AssociationType,java.lang.String,java.lang.String[],java.lang.String,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[],org.hibernate.type.AssociationType)",
            "org.hibernate.type.CollectionType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getRHSColumnNames(org.hibernate.type.AssociationType,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.JoinSequence$Join:void <init>(org.hibernate.engine.JoinSequence,org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.String getAssociatedEntityName(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getPathEntityName(java.lang.String)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String getAssociatedEntityName(org.hibernate.type.CollectionType)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.type.CollectionType:org.hibernate.type.Type getElementType(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:org.hibernate.persister.entity.Queryable determineAppropriateOwnerPersister(org.hibernate.loader.custom.NonScalarReturn)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type getElementType(org.hibernate.type.CollectionType)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.collection.QueryableCollection getCollectionPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void prepareFromClauseInputTree(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST createFromFilterElement(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.collection.QueryableCollection getCollectionPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceCollection(java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void prepareForIndex(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setCollectionToFetch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromAssociation(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void addInitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void afterDeserialize(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(java.lang.String,java.io.Serializable,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.CollectionKey:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascadeCollection(java.lang.Object,org.hibernate.engine.CascadeStyle,java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeAssociation(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.FlushVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.criterion.SizeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedSQLQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:void <init>(org.hibernate.engine.NamedSQLQueryDefinition,org.hibernate.engine.SessionImplementor,org.hibernate.engine.query.ParameterMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.Query getNamedSQLQuery(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.metadata.ClassMetadata getClassMetadata(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String getImportedClassName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.ConstructorNode:java.lang.reflect.Constructor resolveConstructor(java.lang.String)"
        ]
    },
    "org.hibernate.hql.QuerySplitter:java.lang.String getImportedClass(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.QuerySplitter:java.lang.String[] concreteQueries(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.FilterImpl:void afterDeserialize(org.hibernate.impl.SessionFactoryImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.type.Type getFilterParameterType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.dialect.function.SQLFunction findSQLFunction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.dialect.function.SQLFunction requireSQLFunction(java.lang.String)",
            "org.hibernate.hql.ast.tree.MethodNode:void dialectFunction(antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.type.Type getDataType()"
        ]
    },
    "org.hibernate.hql.classic.SelectParser:org.hibernate.dialect.function.SQLFunction getFunction(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:boolean aggregateHasArgs(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:boolean aggregateFuncNoArgsHasParenthesis(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.dialect.ResultColumnReferenceStrategy:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.component.ComponentMetamodel:org.hibernate.tuple.StandardProperty getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.String guessEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String bestGuessEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void throwTransientObjectException(java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.EntityPersister getSubclassEntityPersister(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String guessEntityName(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String getPropertyTableName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.JoinHelper:java.lang.String getLHSTableName(org.hibernate.type.AssociationType,int,org.hibernate.persister.entity.OuterJoinLoadable)"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String getPropertyTableName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.JoinHelper:java.lang.String getLHSTableName(org.hibernate.type.AssociationType,int,org.hibernate.persister.entity.OuterJoinLoadable)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:int getPropertyIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:int getPropertyIndex(java.lang.String)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.EntityPersister getSubclassEntityPersister(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.tuple.entity.EntityTuplizer getTuplizerOrNull(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean isInstrumented(org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Class getMappedClass(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.tuple.Tuplizer getTuplizer(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.EntityMode)",
            "org.hibernate.type.EmbeddedComponentType:boolean isMethodOf(java.lang.reflect.Method)",
            "org.hibernate.type.ComponentType:java.lang.Class getReturnedClass()",
            "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.component.AbstractComponentTuplizer:boolean isInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:boolean isInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean isInstance(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void loadEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void fetchEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromDatasource(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void updateEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void insertEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void deleteEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void execute()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void optimisticFailure(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean check(int,java.io.Serializable,int,org.hibernate.jdbc.Expectation,java.sql.PreparedStatement)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void loadCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void fetchCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void updateCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void recreateCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRecreateAction:void execute()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void removeCollection(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void secondLevelCachePut(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void secondLevelCacheHit(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void secondLevelCacheMiss(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void queryCacheHit(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List getResultFromQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void queryCacheMiss(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List getResultFromQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void queryCachePut(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void putResultInQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey,java.util.List)"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void queryExecuted(java.lang.String,int,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.hql.HolderInstantiator,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:org.hibernate.persister.entity.SQLLoadable getEntityPersisterByAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:boolean isEntityAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:org.hibernate.persister.collection.SQLLoadableCollection getCollectionPersisterByAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:boolean isCollectionAlias(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:java.lang.String getEntitySuffixByAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:java.lang.String getCollectionSuffixByAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map access$500(org.hibernate.loader.custom.sql.SQLQueryReturnProcessor,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.util.Map getPropertyResultsMap(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.NativeSQLQueryPlan:void <init>(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext process()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteBrackets(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String process()"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void namedParameter(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void jpaPositionalParameter(java.lang.String,int)",
            "org.hibernate.engine.query.ParameterParser:void parse(java.lang.String,org.hibernate.engine.query.ParameterParser$Recognizer)"
        ]
    },
    "org.hibernate.loader.custom.ColumnCollectionAliases:void <init>(java.util.Map,org.hibernate.persister.collection.SQLLoadableCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.String preprocessSQL(java.lang.String,org.hibernate.engine.QueryParameters,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getEntityName(org.hibernate.Criteria,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.SizeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AbstractEmptinessExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSQLAlias(org.hibernate.Criteria,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.criterion.SizeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AbstractEmptinessExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getPropertyName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getType(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.SizeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AbstractEmptinessExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getIdentifierColumns(org.hibernate.Criteria)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.IdentifierProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IdentifierProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IdentifierEqExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SQLCriterion:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SQLProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SQLProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getIdentifierType(org.hibernate.Criteria)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.IdentifierProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedIdentifierValue(org.hibernate.Criteria,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.IdentifierEqExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.GeneratedCollectionAliases:void <init>(java.util.Map,org.hibernate.persister.collection.CollectionPersister,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.GeneratedCollectionAliases:void <init>(org.hibernate.persister.collection.CollectionPersister,java.lang.String)"
        ]
    },
    "org.hibernate.loader.DefaultEntityAliases:void <init>(java.util.Map,org.hibernate.persister.entity.Loadable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.DefaultEntityAliases:void <init>(org.hibernate.persister.entity.Loadable,java.lang.String)",
            "org.hibernate.loader.ColumnEntityAliases:void <init>(java.util.Map,org.hibernate.persister.entity.Loadable,java.lang.String)"
        ]
    },
    "org.hibernate.loader.DefaultEntityAliases:java.lang.String[][] getSuffixedPropertyAliases(org.hibernate.persister.entity.Loadable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.DefaultEntityAliases:void <init>(java.util.Map,org.hibernate.persister.entity.Loadable,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object doLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)"
        ]
    },
    "org.hibernate.cache.TransactionalCache:java.lang.Object get(java.lang.Object,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)"
        ]
    },
    "org.hibernate.cache.TransactionalCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:java.lang.Object get(java.lang.Object,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:java.lang.Object get(java.lang.Object,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:org.hibernate.cache.access.SoftLock lock(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:org.hibernate.cache.access.SoftLock lockItem(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:org.hibernate.cache.access.SoftLock lockItem(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:void release(java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockItem(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockItem(java.lang.Object,org.hibernate.cache.access.SoftLock)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cache.ReadOnlyCache:java.lang.Object get(java.lang.Object,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)"
        ]
    },
    "org.hibernate.cache.ReadOnlyCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.cache.FilterKey:boolean equals(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.cache.FilterKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)",
            "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AbstractType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:int getSubclassPropertyTableNumber(java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int getSubclassPropertyIndex(java.lang.String)"
        ]
    },
    "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnLockVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.DateType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.connection.ConnectionProvider createConnectionProvider(java.util.Properties)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider()",
            "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper:void prepare(boolean)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:int findColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader$Metadata:int resolveColumnPosition(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Array getArray(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateArray(java.lang.String,java.sql.Array)",
            "org.hibernate.jdbc.ResultSetWrapper:java.io.InputStream getAsciiStream(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateAsciiStream(java.lang.String,java.io.InputStream,int)",
            "org.hibernate.jdbc.ResultSetWrapper:java.math.BigDecimal getBigDecimal(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.math.BigDecimal getBigDecimal(java.lang.String,int)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateBigDecimal(java.lang.String,java.math.BigDecimal)",
            "org.hibernate.jdbc.ResultSetWrapper:java.io.InputStream getBinaryStream(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateBinaryStream(java.lang.String,java.io.InputStream,int)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Blob getBlob(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateBlob(java.lang.String,java.sql.Blob)",
            "org.hibernate.jdbc.ResultSetWrapper:boolean getBoolean(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateBoolean(java.lang.String,boolean)",
            "org.hibernate.jdbc.ResultSetWrapper:byte getByte(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateByte(java.lang.String,byte)",
            "org.hibernate.jdbc.ResultSetWrapper:byte[] getBytes(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateBytes(java.lang.String,byte[])",
            "org.hibernate.jdbc.ResultSetWrapper:java.io.Reader getCharacterStream(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateCharacterStream(java.lang.String,java.io.Reader,int)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Clob getClob(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateClob(java.lang.String,java.sql.Clob)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Date getDate(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Date getDate(java.lang.String,java.util.Calendar)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateDate(java.lang.String,java.sql.Date)",
            "org.hibernate.jdbc.ResultSetWrapper:double getDouble(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateDouble(java.lang.String,double)",
            "org.hibernate.jdbc.ResultSetWrapper:float getFloat(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateFloat(java.lang.String,float)",
            "org.hibernate.jdbc.ResultSetWrapper:int getInt(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateInt(java.lang.String,int)",
            "org.hibernate.jdbc.ResultSetWrapper:long getLong(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateLong(java.lang.String,long)",
            "org.hibernate.jdbc.ResultSetWrapper:java.lang.Object getObject(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.lang.Object getObject(java.lang.String,java.util.Map)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateObject(java.lang.String,java.lang.Object)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateObject(java.lang.String,java.lang.Object,int)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Ref getRef(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateRef(java.lang.String,java.sql.Ref)",
            "org.hibernate.jdbc.ResultSetWrapper:short getShort(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateShort(java.lang.String,short)",
            "org.hibernate.jdbc.ResultSetWrapper:java.lang.String getString(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateString(java.lang.String,java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Time getTime(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Time getTime(java.lang.String,java.util.Calendar)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateTime(java.lang.String,java.sql.Time)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Timestamp getTimestamp(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateTimestamp(java.lang.String,java.sql.Timestamp)",
            "org.hibernate.jdbc.ResultSetWrapper:java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)",
            "org.hibernate.jdbc.ResultSetWrapper:java.io.InputStream getUnicodeStream(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:java.net.URL getURL(java.lang.String)",
            "org.hibernate.jdbc.ResultSetWrapper:void updateNull(java.lang.String)",
            "org.hibernate.jdbc.ColumnNameCache:int getIndexForColumnName(java.lang.String,org.hibernate.jdbc.ResultSetWrapper)"
        ]
    },
    "org.hibernate.cfg.Configuration:void setListeners(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseListener(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void setListener(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Configuration:void setListener(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.IteratorImpl:java.lang.Object next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:java.lang.Object next()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.IdentityMap$KeyIterator:java.lang.Object next()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsForward(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsReverse(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader$ResultRowProcessor:java.lang.Object buildResultRow(java.lang.Object[],java.sql.ResultSet,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int writeKey(java.sql.PreparedStatement,java.io.Serializable,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndexToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIdentifier(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean indexExists(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean elementExists(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void updateOrInsert(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void processInsertGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processUpdateGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElement(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndex(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElementToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElement(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndex(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElementToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeKey(java.sql.PreparedStatement,java.io.Serializable,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndexToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIdentifier(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElement(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndex(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElementToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeKey(java.sql.PreparedStatement,java.io.Serializable,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndexToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIdentifier(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.TypeFactory:org.hibernate.type.Type heuristicType(java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type heuristicType(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:org.hibernate.type.Type getType()"
        ]
    },
    "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.AbstractType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:boolean isTable(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void processBoolean(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constant(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.util.LiteralProcessor:void processConstant(antlr.collections.AST,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IdentNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processConstant(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String nodeToString(antlr.collections.AST,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTPrinter:void showNode(java.io.PrintWriter,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.DotNode:java.lang.String getDisplayText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.SqlGenerator:java.lang.String buildTraceNodeName(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void traceIn(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:java.lang.String buildTraceNodeName(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void traceIn(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.util.SyntheticAndFactory:void addWhereFragment(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.hql.ast.tree.QueryNode,org.hibernate.hql.ast.tree.FromElement,org.hibernate.hql.ast.HqlSqlWalker)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.JoinProcessor:void addJoinNodes(org.hibernate.hql.ast.tree.QueryNode,org.hibernate.engine.JoinSequence,org.hibernate.hql.ast.tree.FromElement)"
        ]
    },
    "org.hibernate.hql.ast.util.SyntheticAndFactory:void addDiscriminatorWhereFragment(org.hibernate.hql.ast.tree.RestrictableStatement,org.hibernate.persister.entity.Queryable,java.util.Map,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)"
        ]
    },
    "org.hibernate.hql.ast.ParameterTranslationsImpl:int[] getNamedParameterSqlLocations(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int[] getNamedParameterLocs(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.ParameterTranslationsImpl:org.hibernate.type.Type getNamedParameterExpectedType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generateNamedParameter(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void parameter(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String unalias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.GroupByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.persister.entity.Queryable getEntityPersisterForName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl$2:int[] getNamedParameterSqlLocations(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int[] getNamedParameterLocs(java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void preprocess(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.FromPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.ast.tree.MethodNode:void resolveCollectionProperty(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.Loader:void endCollectionLoad(java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:void handleEmptyCollections(java.io.Serializable[],java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void handleEmptyCollections(java.io.Serializable[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:org.hibernate.collection.PersistentCollection locateLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.query.ParamLocationRecognizer:void namedParameter(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParameterParser:void parse(java.lang.String,org.hibernate.engine.query.ParameterParser$Recognizer)"
        ]
    },
    "org.hibernate.engine.query.ParamLocationRecognizer:void jpaPositionalParameter(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParameterParser:void parse(java.lang.String,org.hibernate.engine.query.ParameterParser$Recognizer)"
        ]
    },
    "org.hibernate.engine.query.ParameterMetadata:org.hibernate.type.Type getNamedParameterExpectedType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Class)"
        ]
    },
    "org.hibernate.engine.query.ParameterMetadata:int[] getNamedParameterSourceLocations(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void dirtyCheck(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:int getEntityState(java.lang.Object,java.lang.String,org.hibernate.engine.EntityEntry,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.ForeignKeys:boolean isNotTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.CascadingAction$9:void noCascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.Object,org.hibernate.persister.entity.EntityPersister,int)",
            "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:boolean isVersionChanged(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void checkUniqueness(org.hibernate.engine.EntityKey,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getCollectionOwner(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getLoadedCollectionOwnerOrNull(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Collections:void processUnreachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.LockMode getCurrentLockMode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.io.Serializable getIdentifier(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.io.Serializable getContextEntityIdentifier(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.OneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.OneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.String bestGuessEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.AnyType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.String getEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object[] getRow(java.sql.ResultSet,org.hibernate.persister.entity.Loadable[],org.hibernate.engine.EntityKey[],java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.LockMode[],java.util.List,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.action.CollectionAction:java.io.Serializable getKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRecreateAction:void execute()",
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityAction:java.io.Serializable getId()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityUpdateAction:void postUpdate()",
            "org.hibernate.action.EntityUpdateAction:void postCommitUpdate()",
            "org.hibernate.action.EntityUpdateAction:boolean preUpdate()",
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void postInsert()",
            "org.hibernate.action.EntityInsertAction:void postCommitInsert()",
            "org.hibernate.action.EntityInsertAction:boolean preInsert()",
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:boolean preDelete()",
            "org.hibernate.action.EntityDeleteAction:void postDelete()",
            "org.hibernate.action.EntityDeleteAction:void postCommitDelete()",
            "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.impl.SessionImpl:java.io.Serializable fireSave(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.impl.SessionImpl:void fireUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.AbstractCollectionEvent:java.io.Serializable getOwnerIdOrNull(java.lang.Object,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.PreCollectionRecreateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PostCollectionRemoveEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object)",
            "org.hibernate.event.PreCollectionRemoveEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object)",
            "org.hibernate.event.PostCollectionRecreateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.AbstractCollectionEvent:java.lang.String getAffectedOwnerEntityName(org.hibernate.persister.collection.CollectionPersister,java.lang.Object,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.AbstractCollectionEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElements(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void setReadOnly(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void setReadOnly(java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$9:boolean isInManagedState(java.lang.Object,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$9:void noCascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.Object,org.hibernate.persister.entity.EntityPersister,int)"
        ]
    },
    "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseCollection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean isOperationQueueEnabled()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseCollectionNoOrphanDelete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean isClearQueueEnabled()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseOneToManyOrNoOrphanDelete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean isPutQueueEnabled()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean setCurrentSession(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnLockVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.action.CollectionUpdateAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.action.CollectionRecreateAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.action.CollectionRemoveAction:void execute()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.event.AbstractCollectionEvent:org.hibernate.persister.collection.CollectionPersister getLoadedCollectionPersister(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.InitializeCollectionEvent:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getLoadedCollectionOwnerOrNull(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRemoveAction:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.AbstractCollectionEvent:java.lang.Object getLoadedOwnerOrNull(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getLoadedCollectionOwnerIdOrNull(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.AbstractCollectionEvent:java.io.Serializable getLoadedOwnerIdOrNull(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getSnapshot(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.io.Serializable getSnapshot()"
        ]
    },
    "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Collections:void processUnreachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.event.def.DirtyCollectionSearchVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.event.def.FlushVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.property.BackrefPropertyAccessor$BackrefGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.property.IndexPropertyAccessor$IndexGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.mapping.DenormalizedTable:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.DenormalizedTable:org.hibernate.mapping.Column getColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindIndex(org.dom4j.Attribute,org.hibernate.mapping.Table,org.hibernate.mapping.Column,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindUniqueKey(org.dom4j.Attribute,org.hibernate.mapping.Table,org.hibernate.mapping.Column,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.SimpleValue:void createForeignKeyOfEntity(java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()"
        ]
    },
    "org.hibernate.cfg.HbmBinder$ManyToOneSecondPass:void doSecondPass(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()"
        ]
    },
    "org.hibernate.mapping.Subclass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Subclass:java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object getParent(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getVersion(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getVersion(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)",
            "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.IdentifierValue getUnsavedIdentifierValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.Type,java.lang.reflect.Constructor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)"
        ]
    },
    "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.property.MapAccessor$MapGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session getCurrentSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session getCurrentSession()"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session access$100(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void writeObject(java.io.ObjectOutputStream)"
        ]
    },
    "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session currentSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session getCurrentSession()"
        ]
    },
    "org.hibernate.context.ManagedSessionContext:boolean hasBind(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettingsInternal(java.util.Properties)"
        ]
    },
    "org.hibernate.engine.EntityEntry:org.hibernate.engine.EntityEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.CollectionKey:org.hibernate.engine.CollectionKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.EntityKey:org.hibernate.engine.EntityKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.LockMode:java.lang.Object readResolve()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider getBytecodeProvider()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactoryInternal(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)"
        ]
    },
    "org.hibernate.cfg.Environment:boolean jvmHasTimestampBug()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CalendarType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Environment:boolean jvmHasJDK14Timestamp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TimestampType:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cfg.Environment:boolean jvmSupportsLinkedHashCollections()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Environment:boolean jvmSupportsGetGeneratedKeys()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Environment:boolean useStreamsForBinary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AbstractBynaryType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AbstractBynaryType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Environment:boolean useReflectionOptimizer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.cfg.Environment:java.util.Properties getProperties()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void reset()",
            "org.hibernate.dialect.resolver.DialectFactory:void <clinit>()",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect()",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider()"
        ]
    },
    "org.hibernate.cfg.Environment:java.lang.String isolationLevelToString(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.DriverManagerConnectionProvider:void configure(java.util.Properties)"
        ]
    },
    "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider buildBytecodeProvider(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:void <clinit>()"
        ]
    },
    "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider buildBytecodeProvider(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Environment:org.hibernate.bytecode.BytecodeProvider buildBytecodeProvider(java.util.Properties)"
        ]
    },
    "org.hibernate.cfg.Configuration:void reset()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void <init>(org.hibernate.cfg.SettingsFactory)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)",
            "org.hibernate.dialect.resolver.DialectFactory:void registerDialectResolver(java.lang.String)",
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties,java.sql.Connection)",
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties)",
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect determineDialect(java.sql.Connection)",
            "org.hibernate.dialect.resolver.DialectFactory:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect(java.util.Properties)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactoryInternal(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)"
        ]
    },
    "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.connection.DriverManagerConnectionProvider:void configure(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)"
        ]
    },
    "org.hibernate.type.CalendarType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.AbstractBynaryType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.AbstractBynaryType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.TimestampType:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.DateType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void handleUnionSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void handleJoinedSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void handleSubclass(org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,org.dom4j.Element,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindImport(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingSecondPass:void doSecondPass(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.String getClassTableName(org.hibernate.mapping.PersistentClass,org.dom4j.Element,java.lang.String,java.lang.String,org.hibernate.mapping.Table,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void putAll(java.util.Map)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:void <init>(org.hibernate.dialect.Dialect,java.util.Map)",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)",
            "org.hibernate.engine.query.sql.NativeSQLQueryNonScalarReturn:void <init>(java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.FilterDefinition:void <init>(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.dialect.function.SQLFunctionRegistry:void <init>(org.hibernate.dialect.Dialect,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.dialect.Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.TimesTenDialect:void <init>()",
            "org.hibernate.dialect.FrontBaseDialect:void <init>()",
            "org.hibernate.dialect.PointbaseDialect:void <init>()",
            "org.hibernate.dialect.ProgressDialect:void <init>()",
            "org.hibernate.dialect.MySQLDialect:void <init>()",
            "org.hibernate.dialect.HSQLDialect:void <init>()",
            "org.hibernate.dialect.MimerSQLDialect:void <init>()",
            "org.hibernate.dialect.InterbaseDialect:void <init>()",
            "org.hibernate.dialect.DB2Dialect:void <init>()",
            "org.hibernate.dialect.TeradataDialect:void <init>()",
            "org.hibernate.dialect.PostgreSQLDialect:void <init>()",
            "org.hibernate.dialect.Oracle9Dialect:void <init>()",
            "org.hibernate.dialect.RDMSOS2200Dialect:void <init>()",
            "org.hibernate.dialect.IngresDialect:void <init>()",
            "org.hibernate.dialect.AbstractTransactSQLDialect:void <init>()",
            "org.hibernate.dialect.SAPDBDialect:void <init>()",
            "org.hibernate.dialect.InformixDialect:void <init>()",
            "org.hibernate.dialect.Oracle8iDialect:void <init>()",
            "org.hibernate.dialect.H2Dialect:void <init>()",
            "org.hibernate.dialect.Cache71Dialect:void <init>()",
            "org.hibernate.dialect.JDataStoreDialect:void <init>()",
            "org.hibernate.dialect.MckoiDialect:void <init>()"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String process()"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:void <init>(org.hibernate.dialect.Dialect,java.util.Map)",
            "org.hibernate.dialect.Dialect:void <init>()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)",
            "org.hibernate.engine.query.sql.NativeSQLQueryNonScalarReturn:void <init>(java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.FilterDefinition:void <init>(java.lang.String,java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.engine.query.sql.NativeSQLQueryNonScalarReturn:void <init>(java.lang.String,java.util.Map,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.hibernate.LockMode)",
            "org.hibernate.engine.query.sql.NativeSQLQueryRootReturn:void <init>(java.lang.String,java.lang.String,java.util.Map,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.engine.FilterDefinition:void <init>(java.lang.String,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addColumns(java.lang.String[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateDeleteString()",
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateDeleteRowString()"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumns(java.lang.String[])",
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumns(java.lang.String[],boolean[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateVersionIncrementUpdateString()",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:java.lang.String generateLockString()"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumns(java.lang.String[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumns(java.lang.String[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)"
        ]
    },
    "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumns(java.lang.String[])",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumns(java.lang.String[],boolean[])",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateInsertRowString()"
        ]
    },
    "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.Insert:org.hibernate.sql.Insert addIdentityColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)",
            "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()",
            "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()",
            "org.hibernate.id.IdentityGenerator$BasicDelegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:void addDiscriminatorToInsert(org.hibernate.sql.Insert)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.id.SequenceIdentityGenerator$Delegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumns(java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectRowByIndexString()"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumns(java.lang.String[],java.lang.String[],boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:org.hibernate.sql.CaseFragment discriminatorFragment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void initCollectionPropertyMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria setFetchMode(java.lang.String,org.hibernate.FetchMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setFetchMode(java.lang.String,org.hibernate.FetchMode)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setFetchMode(java.lang.String,org.hibernate.FetchMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria setLockMode(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setLockMode(org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria setLockMode(java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setLockMode(java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setLockMode(java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBinary(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setText(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBoolean(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setByte(java.lang.String,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCharacter(java.lang.String,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDate(java.lang.String,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setDouble(java.lang.String,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setEntity(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setFloat(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setInteger(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLocale(java.lang.String,java.util.Locale)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendar(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setCalendarDate(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setLong(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setSerializable(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setShort(java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTime(java.lang.String,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setTimestamp(java.lang.String,java.util.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigDecimal(java.lang.String,java.math.BigDecimal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBigInteger(java.lang.String,java.math.BigInteger)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.lang.Object[],org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.TimesTenDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.PostgresPlusDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.SQLServerDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.MySQLDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.MySQLMyISAMDialect:void <init>()",
            "org.hibernate.dialect.MySQLInnoDBDialect:void <init>()",
            "org.hibernate.dialect.MySQL5Dialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.HSQLDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.MimerSQLDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.InterbaseDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.FirebirdDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.DB2Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.DB2Dialect:void main(java.lang.String[])",
            "org.hibernate.dialect.DerbyDialect:void <init>()",
            "org.hibernate.dialect.DB2390Dialect:void <init>()",
            "org.hibernate.dialect.DB2400Dialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.SybaseASE15Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.TeradataDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.PostgreSQLDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.PostgresPlusDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.Oracle9Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.DataDirectOracle9Dialect:void <init>()",
            "org.hibernate.dialect.OracleDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.DerbyDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.RDMSOS2200Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.IngresDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.AbstractTransactSQLDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Sybase11Dialect:void <init>()",
            "org.hibernate.dialect.SybaseAnywhereDialect:void <init>()",
            "org.hibernate.dialect.SQLServerDialect:void <init>()",
            "org.hibernate.dialect.SybaseDialect:void <init>()",
            "org.hibernate.dialect.SybaseASE15Dialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.SAPDBDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.InformixDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:void registerFunctions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Oracle8iDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.H2Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:void commonRegistration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Cache71Dialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:void register71Functions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Cache71Dialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.MckoiDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.AbstractDialectResolver:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.sql.Connection)",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.Dialect:java.lang.Class getNativeIdentifierGeneratorClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:java.lang.Class getIdentifierGeneratorClass(java.lang.String,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.HSQLDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.HSQLDialect:org.slf4j.Logger access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.HSQLDialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.HSQLDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.HSQLDialect:org.slf4j.Logger access$000()",
            "org.hibernate.dialect.HSQLDialect:void <clinit>()",
            "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.HSQLDialect$ReadUncommittedLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.PostgreSQLDialect:java.lang.Class getNativeIdentifierGeneratorClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:java.lang.Class getIdentifierGeneratorClass(java.lang.String,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.PostgreSQLDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.PostgreSQLDialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.PostgreSQLDialect:java.lang.Class getNativeIdentifierGeneratorClass()",
            "org.hibernate.dialect.PostgreSQLDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.PostgreSQLDialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.Oracle9Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.Oracle9Dialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Oracle9Dialect:void <init>()",
            "org.hibernate.dialect.Oracle9Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.Oracle9Dialect:void <clinit>()",
            "org.hibernate.dialect.OracleDialect:void <init>()",
            "org.hibernate.dialect.OracleDialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.RDMSOS2200Dialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.RDMSOS2200Dialect:void <init>()",
            "org.hibernate.dialect.RDMSOS2200Dialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.InformixDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.InformixDialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.InformixDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.InformixDialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.Oracle8iDialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.Oracle8iDialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.H2Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.H2Dialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.H2Dialect:org.hibernate.exception.ViolatedConstraintNameExtracter getViolatedConstraintNameExtracter()",
            "org.hibernate.dialect.H2Dialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:java.lang.Class getNativeIdentifierGeneratorClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:java.lang.Class getIdentifierGeneratorClass(java.lang.String,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void <init>(java.sql.Connection,org.hibernate.dialect.Dialect,boolean)"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Cache71Dialect:java.lang.Class getNativeIdentifierGeneratorClass()",
            "org.hibernate.dialect.Cache71Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.dialect.Cache71Dialect:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.OracleDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.OracleDialect:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.OracleDialect:void <init>()",
            "org.hibernate.dialect.OracleDialect:void <clinit>()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidator:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void <init>(org.hibernate.cfg.Configuration)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration)"
        ]
    },
    "org.hibernate.mapping.Component:org.hibernate.type.Type buildType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Component:org.hibernate.type.Type getType()"
        ]
    },
    "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object instantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.DynamicMapInstantiator:java.lang.Object instantiate(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object instantiate(java.io.Serializable)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processCollectionReturn(org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:void put(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.UpdateTimestampsCache:void preinvalidate(java.io.Serializable[])",
            "org.hibernate.cache.UpdateTimestampsCache:void invalidate(java.io.Serializable[])",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.HashtableCache:void update(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.ReadWriteCache:org.hibernate.cache.access.SoftLock lock(java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.ReadWriteCache:void decrementLock(java.lang.Object,org.hibernate.cache.ReadWriteCache$Lock)",
            "org.hibernate.cache.ReadWriteCache:void handleLockExpiry(java.lang.Object)",
            "org.hibernate.cache.ReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.ReadWriteCache:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.ReadOnlyCache:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.TransactionalCache:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)",
            "org.hibernate.cache.TransactionalCache:boolean insert(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.EventCache:java.util.Map invertMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:java.util.Map getMergeMap(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireRefresh(java.util.Map,org.hibernate.event.RefreshEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireRefresh(org.hibernate.event.RefreshEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void entityIsPersistent(org.hibernate.event.MergeEvent,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Any:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DependantValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void initForeignKeys(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void initIndexes(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void initColumns(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.DotNode:void dereferenceCollection(org.hibernate.type.CollectionType,boolean,boolean,java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void resolveIndex(antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.DotNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.IdentNode:void resolveIndex(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void prepareFromClauseInputTree(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void fetch(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromAssociation(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:java.lang.String continueFromManyToMany(java.lang.String,java.lang.String[],org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:java.lang.String getElementName(org.hibernate.hql.classic.PathExpressionParser$CollectionElement,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromClass(java.lang.String,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromAssociation(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void prepareForIndex(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromCollection(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromAssociation(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile(java.lang.String,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void addAssociation(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.GroupByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,org.hibernate.engine.JoinSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromAssociation(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromJoinOnly(java.lang.String,org.hibernate.engine.JoinSequence)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void addJoin(org.hibernate.engine.JoinSequence,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void prepareForIndex(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:void handlePropertyBeingDereferenced(org.hibernate.type.Type,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.MethodNode:boolean isCollectionPropertyMethod()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.DotNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)",
            "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)"
        ]
    },
    "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:void handlePropertyBeingDereferenced(org.hibernate.type.Type,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.ast.tree.FromElementType:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)"
        ]
    },
    "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.MethodNode:boolean isCollectionPropertyMethod()",
            "org.hibernate.hql.ast.tree.DotNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceCollection(org.hibernate.type.CollectionType,boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntity(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.TwoPhaseLoad:void addUninitializedEntity(org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void addUninitializedCachedEntity(org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.LockMode,boolean,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.TwoPhaseLoad:void postHydrate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,java.lang.Object[],java.lang.Object,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:boolean reassociateIfUninitializedProxy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.ProxyVisitor:java.lang.Object processEntity(java.lang.Object,org.hibernate.type.EntityType)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:boolean reassociateIfUninitializedProxy(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsTransient(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object unproxyAndReassociate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addUninitializedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addUninitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.ProxyVisitor:void reattachCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addInitializedDetachedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.ProxyVisitor:void reattachCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry addInitializedCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addNewCollection(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object resolveKey(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AnyType:org.hibernate.engine.CascadeStyle getCascadeStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()"
        ]
    },
    "org.hibernate.type.CompositeCustomType:org.hibernate.engine.CascadeStyle getCascadeStyle(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()"
        ]
    },
    "org.hibernate.type.ComponentType:void <init>(org.hibernate.tuple.component.ComponentMetamodel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EmbeddedComponentType:void <init>(org.hibernate.tuple.component.ComponentMetamodel)",
            "org.hibernate.mapping.Component:org.hibernate.type.Type buildType()"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindDom4jRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindMapRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.criterion.Example:org.hibernate.criterion.Example enableLike()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transform.AliasToBeanResultTransformer:java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.HolderInstantiator:java.lang.Object instantiate(java.lang.Object[])"
        ]
    },
    "org.hibernate.tuple.component.AbstractComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.type.ComponentType:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:void setParent(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void setIdentifier(java.lang.Object,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void resetIdentifier(java.lang.Object,java.io.Serializable,java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object instantiate(java.io.Serializable)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.type.ComponentType:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValue(java.lang.Object,int,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void resetIdentifier(java.lang.Object,java.io.Serializable,java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:void bind(org.hibernate.Session)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.context.ThreadLocalSessionContext:void access$200(org.hibernate.Session,org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:org.hibernate.CacheMode getCacheMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.CacheMode getCacheMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:void before()",
            "org.hibernate.impl.AbstractQueryImpl:void before()",
            "org.hibernate.loader.Loader:java.util.List getResultFromQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey)",
            "org.hibernate.loader.Loader:void putResultInQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey,java.util.List)",
            "org.hibernate.action.EntityInsertAction:boolean isCachePutEnabled(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)",
            "org.hibernate.engine.TwoPhaseLoad:boolean useMinimalPuts(org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void <init>(org.hibernate.impl.SessionImpl,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl,boolean,long,org.hibernate.Interceptor,org.hibernate.EntityMode,boolean,boolean,org.hibernate.ConnectionReleaseMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.impl.SessionImpl openSession(java.sql.Connection,boolean,long,org.hibernate.Interceptor)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openTemporarySession()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(java.sql.Connection,boolean,boolean,org.hibernate.ConnectionReleaseMode)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeBeforeDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.EntityEntry,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeAfterDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)"
        ]
    },
    "org.hibernate.engine.TwoPhaseLoad:boolean useMinimalPuts(org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:org.hibernate.FlushMode getFlushMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.FlushMode getFlushMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:void before()",
            "org.hibernate.impl.AbstractQueryImpl:void before()"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean isFlushModeNever()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.CMTTransaction:void commit()",
            "org.hibernate.transaction.CacheSynchronization:void beforeCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void commit()",
            "org.hibernate.transaction.JTATransaction:void commit()"
        ]
    },
    "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushIsReallyNeeded(org.hibernate.event.AutoFlushEvent,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushMightBeNeeded(org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)"
        ]
    },
    "org.hibernate.FlushMode:boolean isManualFlushMode(org.hibernate.FlushMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:boolean isFlushModeNever()"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.hql.HolderInstantiator,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void initOuterJoinFetchSetting(org.dom4j.Element,org.hibernate.mapping.Fetchable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaJoinWalker:boolean isDefaultFetchMode(org.hibernate.FetchMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.type.AnyType:org.hibernate.FetchMode getFetchMode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:org.hibernate.FetchMode getFetchMode(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:org.hibernate.FetchMode getFetchMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.mapping.OneToMany:org.hibernate.FetchMode getFetchMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.EntityMode getEntityMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object[],int,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findDirty(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findModified(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object createProxy(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.id.Assigned:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getOptionalObjectKey(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.EntityIdentityInsertAction:void execute()",
            "org.hibernate.action.EntityIdentityInsertAction:org.hibernate.engine.EntityKey generateDelayedEntityKey()",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.CollectionAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.CollectionAction:void beforeExecutions()",
            "org.hibernate.action.CollectionAction:void evict()",
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MutableType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:void deepCopy(java.lang.Object[],org.hibernate.type.Type[],boolean[],java.lang.Object[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CompositeCustomType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:boolean isNotEmbedded(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getCollectionOwner(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isFoundInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.engine.Nullability:java.lang.String checkComponentNullability(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.tuple.component.ComponentTuplizerFactory:java.util.Map buildBaseMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentTuplizerFactory:void <init>()"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.EntityMode getEntityMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.tuple.entity.EntityTuplizer)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getComponentValue(org.hibernate.type.ComponentType,java.lang.Object,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.entity.EntityTuplizerFactory:java.util.Map buildBaseMapping()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityTuplizerFactory:void <init>()"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.EntityMode getEntityMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.tuple.entity.EntityTuplizer)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getComponentValue(org.hibernate.type.ComponentType,java.lang.Object,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.EntityMode getEntityMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.tuple.entity.EntityTuplizer)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getComponentValue(org.hibernate.type.ComponentType,java.lang.Object,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.PropertyFactory:org.hibernate.property.Getter getGetter(org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.BetweenExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.EmbeddedComponentType:boolean isMethodOf(java.lang.reflect.Method)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object[],java.lang.Object)"
        ]
    },
    "org.hibernate.type.CollectionType:boolean hasHolder(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.FlushVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.type.CollectionType:boolean initializeImmediately(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] generateSQLDeletStrings(java.lang.Object[])",
            "org.hibernate.type.CompositeCustomType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Class getReturnedClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Object getFinal(int,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Object getNonFinal(int,org.hibernate.type.Type)",
            "org.hibernate.id.enhanced.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.enhanced.SequenceStyleGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.IncrementGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.IdentifierGeneratorFactory:java.io.Serializable get(java.sql.ResultSet,org.hibernate.type.Type)",
            "org.hibernate.id.TableHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.SequenceHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)",
            "org.hibernate.util.ReflectHelper:java.lang.reflect.Constructor getConstructor(java.lang.Class,org.hibernate.type.Type[])",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.type.EmbeddedComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:boolean isDateTimeType(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isIntegral(org.hibernate.type.Type)",
            "org.hibernate.engine.TypedValue:boolean equals(java.lang.Object)",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()"
        ]
    },
    "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] generateSQLDeletStrings(java.lang.Object[])",
            "org.hibernate.type.CompositeCustomType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.type.EntityType:boolean isNotEmbedded(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.Cascade:boolean cascadeAssociationNow(org.hibernate.type.AssociationType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeProperty(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.mapping.Property:java.lang.String getAccessorPropertyName(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(org.hibernate.mapping.Property,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.criterion.SimpleSubqueryExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.InExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SizeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SQLCriterion:void <init>(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Expression:org.hibernate.criterion.Criterion sql(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.criterion.Expression:org.hibernate.criterion.Criterion sql(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.criterion.Expression:org.hibernate.criterion.Criterion sql(java.lang.String)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion sqlRestriction(java.lang.String)"
        ]
    },
    "org.hibernate.criterion.SubqueryExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.SimpleSubqueryExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(org.hibernate.mapping.Property,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.PropertyFactory:org.hibernate.property.Getter getGetter(org.hibernate.mapping.Property)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.LockMode getLockMode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn bindReturnJoin(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn bindLoadCollection(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:void <init>(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectSizeString(boolean)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByElementString()",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSelectVersionString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getSelectByUniqueKeyString(java.lang.String)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:java.lang.String generateLockString()"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.engine.SessionImplementor,org.hibernate.engine.query.ParameterMetadata)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.Class)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.id.enhanced.TableStructure:void <init>(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.SequenceStyleGenerator:org.hibernate.id.enhanced.DatabaseStructure buildDatabaseStructure(java.util.Properties,org.hibernate.dialect.Dialect,boolean,java.lang.String,int,int)"
        ]
    },
    "org.hibernate.id.enhanced.TableGenerator:java.lang.String buildSelectQuery(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.id.MultipleHiLoPerTableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.id.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])",
            "org.hibernate.id.TableHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.Dialect:java.lang.String getForUpdateString(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Select:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()"
        ]
    },
    "org.hibernate.dialect.SQLServerDialect:java.lang.String appendLockHint(org.hibernate.LockMode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.id.enhanced.TableStructure:void <init>(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,int,int)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String appendLockHint(org.hibernate.LockMode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.id.enhanced.TableStructure:void <init>(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,int,int)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.loader.entity.EntityJoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object[] getRow(java.sql.ResultSet,org.hibernate.persister.entity.Loadable[],org.hibernate.engine.EntityKey[],java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.LockMode[],java.util.List,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.util.ArrayHelper:org.hibernate.LockMode[] fillArray(org.hibernate.LockMode,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object returnNarrowedProxy(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext,java.lang.Object)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object doLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultLoadEventListener:void <clinit>()",
            "org.hibernate.event.EventListeners:void <init>()"
        ]
    },
    "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.event.RefreshEvent:void <init>(java.lang.Object,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object,java.util.Map)",
            "org.hibernate.event.RefreshEvent:void <init>(java.lang.Object,org.hibernate.LockMode,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,org.hibernate.LockMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,boolean,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.LoadEvent:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void load(java.lang.Object,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object immediateLoad(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.event.EventSource)",
            "org.hibernate.event.LoadEvent:void <clinit>()"
        ]
    },
    "org.hibernate.engine.EntityEntry:void postUpdate(java.lang.Object,java.lang.Object[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.engine.EntityEntry:void forceLocked(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:void evict(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evict(java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evict(java.lang.Object)"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:void evict(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void remove(java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void remove(java.lang.Object)",
            "org.hibernate.cache.NonstrictReadWriteCache:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:void release(java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockItem(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockItem(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.NonstrictReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evict(java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evict(java.lang.Object)"
        ]
    },
    "org.hibernate.cache.ReadOnlyCache:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evict(java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evict(java.lang.Object)"
        ]
    },
    "org.hibernate.cache.TransactionalCache:void evict(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void remove(java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void remove(java.lang.Object)"
        ]
    },
    "org.hibernate.cache.TransactionalCache:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evict(java.lang.Object)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evict(java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.EvictVisitor:void evictCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.EvictVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.impl.AbstractScrollableResults:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.IteratorImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.IteratorImpl:void postNext()",
            "org.hibernate.Hibernate:void close(java.util.Iterator)"
        ]
    },
    "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()"
        ]
    },
    "org.hibernate.action.EntityIdentityInsertAction:void postInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:void execute()"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:void bind(org.hibernate.Session)"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void writeObject(java.io.ObjectOutputStream)",
            "org.hibernate.context.ThreadLocalSessionContext$CleanupSynch:void afterCompletion(int)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.OneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.Class,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.proxy.AbstractLazyInitializer:void initialize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object[],java.lang.Object)",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation()",
            "org.hibernate.Hibernate:void initialize(java.lang.Object)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.Object resolveAny(java.lang.String,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.Cascade:void cascadeProperty(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromDatasource(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object doLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object fireMerge(org.hibernate.event.MergeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object merge(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object fireSaveOrUpdateCopy(org.hibernate.event.MergeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.String,java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireMerge(java.util.Map,org.hibernate.event.MergeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void merge(java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireSaveOrUpdateCopy(java.util.Map,org.hibernate.event.MergeEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void saveOrUpdateCopy(java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void persist(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$8:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void persistOnFlush(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$9:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void firePersist(org.hibernate.event.PersistEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void persist(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void firePersistOnFlush(org.hibernate.event.PersistEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void persistOnFlush(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentList:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.AbstractPersistentCollection$1:boolean hasNext()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:int size()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:int size()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.NoArgSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:boolean hasCollectionFecthes()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:int getErrorCount()",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:boolean containsCollectionFetches()",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.JoinSequence:int getJoinCount()",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:int getColumnSpan()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Constraint:int getColumnSpan()",
            "org.hibernate.mapping.Index:int getColumnSpan()",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.mapping.MetaAttribute:boolean isMultiValued()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:int getLength()",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentList:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentList:boolean empty()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.FromElement:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.mapping.ForeignKey:boolean isReferenceToPrimaryKey()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentList:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentList:boolean empty()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.FromElement:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.mapping.ForeignKey:boolean isReferenceToPrimaryKey()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.AbstractPersistentCollection$1:boolean hasNext()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:int size()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:int size()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.NoArgSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:boolean hasCollectionFecthes()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:int getErrorCount()",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:boolean containsCollectionFetches()",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.JoinSequence:int getJoinCount()",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:int getColumnSpan()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Constraint:int getColumnSpan()",
            "org.hibernate.mapping.Index:int getColumnSpan()",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.mapping.MetaAttribute:boolean isMultiValued()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:int getLength()",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSet:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:int size()",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:boolean hasNamedParameters()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized()",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean empty()",
            "org.hibernate.collection.PersistentSet:boolean isEmpty()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])",
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.collection.PersistentMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:int size()",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:int size()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()",
            "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getSQLAliasCount()",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:long getElementCountInMemory()",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:int size()",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.EventCache:int size()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generatePositionalParameter(antlr.collections.AST)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:int size()",
            "org.hibernate.engine.query.ParameterMetadata:void <init>(org.hibernate.engine.query.OrdinalParameterDescriptor[],java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:int getColumnSpan()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isEmpty()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentMap:boolean empty()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean isEmpty()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.util.IdentityMap:boolean isEmpty()",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.event.def.EventCache:boolean isEmpty()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.proxy.map.MapProxy:boolean isEmpty()",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:boolean hasLoadingCollectionEntries()",
            "org.hibernate.engine.loading.LoadContexts:boolean hasRegisteredLoadingCollectionEntries()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:void doCleanup()"
        ]
    },
    "org.hibernate.collection.PersistentBag:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.AbstractPersistentCollection$1:boolean hasNext()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:int size()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:int size()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.NoArgSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:boolean hasCollectionFecthes()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:int getErrorCount()",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:boolean containsCollectionFetches()",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.JoinSequence:int getJoinCount()",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:int getColumnSpan()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Constraint:int getColumnSpan()",
            "org.hibernate.mapping.Index:int getColumnSpan()",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.mapping.MetaAttribute:boolean isMultiValued()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:int getLength()",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentList:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentList:boolean empty()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.FromElement:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.mapping.ForeignKey:boolean isReferenceToPrimaryKey()"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void checkQueryExist(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:boolean hasFunction(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:boolean isJoin(java.lang.String)",
            "org.hibernate.util.FilterHelper:boolean isAffectedBy(java.util.Map)",
            "org.hibernate.util.FilterHelper:void render(java.lang.StringBuffer,java.lang.String,java.util.Map)",
            "org.hibernate.util.IdentityMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:boolean containsKey(java.lang.Object)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.hql.ast.tree.FromClause:void checkForDuplicateClassAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isEntryFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean contains(java.lang.Object)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl$1:boolean includeSubclasses(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.sql.OracleJoinFragment:void addLeftOuterJoinCondition(java.lang.String)",
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:boolean isFunctionOrKeyword(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean isSubclassEntityName(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized(java.lang.String)",
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.exception.SQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.exception.CacheSQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)",
            "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.bytecode.util.BasicClassFilter:boolean shouldInstrumentClass(java.lang.String)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$CustomFieldFilter:boolean shouldTransformFieldAccess(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:boolean isSequence(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:boolean affectsTable(java.lang.String)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.QuerySplitter:boolean isPossiblyClassName(java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.criterion.Example:boolean isPropertyIncluded(java.lang.Object,java.lang.String,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.collection.PersistentSet$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.sql.OracleJoinFragment:void <clinit>()",
            "org.hibernate.sql.Template:void <clinit>()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.dialect.Dialect:void registerKeyword(java.lang.String)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[])",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.exception.SQLStateConverter:void <clinit>()",
            "org.hibernate.exception.CacheSQLStateConverter:void <clinit>()",
            "org.hibernate.connection.ConnectionProviderFactory:void <clinit>()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:void <clinit>()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void collectClassNames(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$1:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void initSequences(java.sql.Connection,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addChild(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.HqlSqlWalker:void addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.hql.classic.PreprocessingParser:void <clinit>()",
            "org.hibernate.hql.classic.SelectParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.hql.QuerySplitter:void <clinit>()",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void addSynchronizedTable(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.criterion.Example:org.hibernate.criterion.Example excludeProperty(java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$1:void handleEntity(java.lang.String,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSet$SimpleRemove:void operate()",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.util.IdentityMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean containsValue(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsProxy(java.lang.Object)",
            "org.hibernate.mapping.Table:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean contains(java.lang.Object)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl$1:boolean includeSubclasses(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.transaction.CMTTransaction:void commit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.CacheSynchronization:void beforeCompletion()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.hibernate.transaction.JTATransaction:void commit()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:int executeUpdate()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:java.util.List list(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:java.util.List list()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void initialize(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void read()",
            "org.hibernate.collection.AbstractPersistentCollection:void write()",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void clear()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void forceInitialization()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()",
            "org.hibernate.engine.Collections:void prepareCollectionForUpdate(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.Hibernate:void initialize(java.lang.Object)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn bindReturnJoin(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn bindLoadCollection(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(java.io.InputStream,java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(org.w3c.dom.Document)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void preFlush(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void updateRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean endRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.QueryParameters:void traceParameters(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.Iterator performIterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.ScrollableResults performScroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.HQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()"
        ]
    },
    "org.hibernate.cfg.Configuration:void add(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addFile(java.io.File)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addCacheableFile(java.io.File)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addXML(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addDocument(org.w3c.dom.Document)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addInputStream(java.io.InputStream)",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootClass(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindSubclass(org.dom4j.Element,org.hibernate.mapping.Subclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindColumnsOrFormula(org.dom4j.Element,org.hibernate.mapping.SimpleValue,java.lang.String,boolean,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleValue(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindSimpleValue(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindVersioningProperty(org.hibernate.mapping.Table,org.dom4j.Element,org.hibernate.cfg.Mappings,java.lang.String,org.hibernate.mapping.RootClass,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDiscriminatorProperty(org.hibernate.mapping.Table,org.hibernate.mapping.RootClass,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindIdentifierCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.IdentifierCollection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindVersioningProperty(org.hibernate.mapping.Table,org.dom4j.Element,org.hibernate.cfg.Mappings,java.lang.String,org.hibernate.mapping.RootClass,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$1:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$5:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindArray(org.dom4j.Element,org.hibernate.mapping.Array,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$CollectionType$6:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder$CollectionType$7:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$3:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$2:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$4:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindComposite(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,boolean,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.Component,org.hibernate.mapping.PersistentClass,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindSubclass(org.dom4j.Element,org.hibernate.mapping.Subclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$MapSecondPass:void secondPass(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,org.hibernate.cfg.Settings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void execute()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidator:void validate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void execute()",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.cfg.Configuration:void buildMappings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentList:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence getFromPart()",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence copy()",
            "org.hibernate.mapping.Table$ForeignKeyKey:void <init>(java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean endRead()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence getFromPart()",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence copy()",
            "org.hibernate.mapping.Table$ForeignKeyKey:void <init>(java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void nestedFromFragment(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void beginFunctionTemplate(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void fromTable(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void sqlToken(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectColumn(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void aggregate(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void addrExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parameter(antlr.collections.AST)"
        ]
    },
    "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence getFromPart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromJoinOnly(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence getFromPart()"
        ]
    },
    "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void prepareForIndex(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence copy()"
        ]
    },
    "org.hibernate.mapping.Table$ForeignKeyKey:void <init>(java.util.List,java.lang.String,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)"
        ]
    },
    "org.hibernate.type.IdentifierBagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderCollectionSelectFragment(int,int)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderValueCollectionSelectFragment(int,int)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String manyToManySelectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String identifierSelectFragment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderIdentifierSelect(int,int)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderPropertySelect(int,int,boolean)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,org.hibernate.persister.entity.AbstractEntityPersister$InclusionChecker)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,boolean[])"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment setExtraSelectList(org.hibernate.sql.CaseFragment,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.IdentNode:int resolveAsNakedPropertyRef()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String[] currentColumns()",
            "org.hibernate.engine.SubselectFetch:java.lang.String toSubselectString(java.lang.String)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.sql.QuerySelect:void setWhereTokens(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.sql.QuerySelect:void setGroupByTokens(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.sql.QuerySelect:void setOrderByTokens(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.sql.QuerySelect:void setHavingTokens(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.loader.JoinWalker:java.lang.StringBuffer whereString(java.lang.String,java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.CollectionJoinWalker:java.lang.StringBuffer whereString(java.lang.String,java.lang.String[],java.lang.String,int)",
            "org.hibernate.loader.entity.EntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.CascadeEntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.hql.QuerySplitter:java.lang.String[] concreteQueries(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:java.util.List list()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueResult()"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll()"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQuerySpecification generateQuerySpecification(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.SQLQueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void managedClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.CacheSynchronization:void afterCompletion(int)",
            "org.hibernate.transaction.JDBCTransaction:void closeIfRequired()",
            "org.hibernate.transaction.JTATransaction:void closeIfRequired()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:boolean isAffectedByEnabledFilters(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect determineDialect(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties,java.sql.Connection)"
        ]
    },
    "org.hibernate.dialect.Dialect:java.lang.String getTypeName(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect)",
            "org.hibernate.dialect.Dialect:java.lang.String getCastTypeName(int)",
            "org.hibernate.dialect.TeradataDialect:java.lang.String getTypeName(int,int,int,int)",
            "org.hibernate.dialect.PostgreSQLDialect:java.lang.String getSelectClauseNullString(int)",
            "org.hibernate.mapping.Column:java.lang.String getSqlType(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.dialect.Dialect:java.lang.String getHibernateTypeName(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader$Metadata:org.hibernate.type.Type getHibernateType(int)"
        ]
    },
    "org.hibernate.tuple.component.DynamicMapComponentTuplizer:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.component.Dom4jComponentTuplizer:void <init>(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.engine.ValueInclusion determineInsertValueGenerationType(org.hibernate.mapping.Property,org.hibernate.tuple.StandardProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.engine.ValueInclusion determineUpdateValueGenerationType(org.hibernate.mapping.Property,org.hibernate.tuple.StandardProperty)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.EntityMode guessEntityMode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.EntityMode guessEntityMode(java.lang.Object)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:java.util.List list(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.SessionImplementor,org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaLoader:java.util.List list(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)"
        ]
    },
    "org.hibernate.criterion.SubqueryExpression:void createAndSetInnerQuery(org.hibernate.criterion.CriteriaQuery,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.SubqueryExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SubqueryExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.Loader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.entity.CascadeEntityJoinWalker:boolean isTooManyCollections()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.cache.StandardQueryCache:boolean isUpToDate(java.util.Set,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettings()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Set entrySet()",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Set entrySet()",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.EventCache:java.util.Set entrySet()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.event.def.EventCache:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Set entrySet()",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.EventCache:java.util.Set entrySet()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Set entrySet()",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.EventCache:java.util.Set entrySet()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.List entries(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Map$Entry[] concurrentEntries(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareEntityFlushes(org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEntities(org.hibernate.event.FlushEvent)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()"
        ]
    },
    "org.hibernate.criterion.Junction:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.CriteriaImpl$CriterionEntry:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.NotExpression:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toString()",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.cache.AbstractJndiBoundCacheProvider:void start(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.NamingHelper:javax.naming.InitialContext getInitialContext(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryObjectFactory:void addInstance(java.lang.String,java.lang.String,org.hibernate.SessionFactory,java.util.Properties)",
            "org.hibernate.impl.SessionFactoryObjectFactory:void removeInstance(java.lang.String,java.lang.String,java.util.Properties)",
            "org.hibernate.connection.DatasourceConnectionProvider:void configure(java.util.Properties)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:void <init>(org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter,java.util.Properties)",
            "org.hibernate.transaction.JNDITransactionManagerLookup:javax.transaction.TransactionManager getTransactionManager(java.util.Properties)",
            "org.hibernate.transaction.JTATransactionFactory:javax.naming.InitialContext resolveInitialContext(java.util.Properties)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean containsAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean endRead()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean endRead()",
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean endRead()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)"
        ]
    },
    "org.hibernate.util.StringHelper:int[] locateUnquoted(java.lang.String,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:int[] buildPositionsArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentMap:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:int hashCode()",
            "org.hibernate.cache.FilterKey:int hashCode()",
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.cache.FilterKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.cache.QueryKey:int generateHashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:void <init>(java.lang.String,org.hibernate.type.Type[],java.lang.Object[],java.util.Map,java.lang.Integer,java.lang.Integer,java.util.Set,org.hibernate.EntityMode,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.cache.QueryKey:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.type.DateType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AdaptedImmutableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.SerializableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.TypedValue:int hashCode()"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup:java.lang.Object getTransactionIdentifier(javax.transaction.Transaction)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.connection.DriverManagerConnectionProvider:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.DriverManagerConnectionProvider:void <init>()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper:void release()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void validate()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:void afterTransaction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:void afterTransactionCompletion(boolean,org.hibernate.Transaction)",
            "org.hibernate.jdbc.JDBCContext:void afterNontransactionalQuery(boolean)"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:java.sql.Connection cleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:java.sql.Connection close()",
            "org.hibernate.jdbc.ConnectionManager:java.sql.Connection manualDisconnect()"
        ]
    },
    "org.hibernate.engine.query.NativeSQLQueryPlan:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:void afterTransactionCompletion(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:boolean isFoundInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.CustomCollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.bytecode.javassist.FieldTransformer:void transform(javassist.bytecode.ClassFile)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:void transform(java.io.File)",
            "org.hibernate.bytecode.javassist.JavassistClassTransformer:byte[] doTransform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])"
        ]
    },
    "org.hibernate.tool.instrument.BasicInstrumentationTask:void execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void execute()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void execute()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void execute()"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void evaluateAssignment(antlr.collections.AST,org.hibernate.persister.entity.Queryable,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void evaluateAssignment(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void prepareVersioned(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String renderDisplayInfo()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:int executeUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void newValue(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void exprOrSubquery(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunctionOrSubselect(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:void validateScrollability()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void afterScrollOperation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractScrollableResults:void afterScrollOperation()"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void afterTransactionCompletion(boolean,org.hibernate.Transaction)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void cleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void afterTransactionCompletion(boolean,org.hibernate.Transaction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:void afterTransactionCompletion(boolean,org.hibernate.Transaction)",
            "org.hibernate.jdbc.JDBCContext:void afterNontransactionalQuery(boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ParameterBinder:int bindQueryParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.Nullability:void checkNullability(java.lang.Object[],org.hibernate.persister.entity.EntityPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)"
        ]
    },
    "org.hibernate.engine.Nullability:java.lang.String checkComponentNullability(java.lang.Object,org.hibernate.type.AbstractComponentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void sortInsertActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void sortActions()"
        ]
    },
    "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:void createForeignKeyOfEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.OneToOne:void createForeignKey()",
            "org.hibernate.mapping.ManyToOne:void createForeignKey()",
            "org.hibernate.mapping.Subclass:void createForeignKey()",
            "org.hibernate.mapping.Collection:void createForeignKeys()",
            "org.hibernate.mapping.Join:void createForeignKey()"
        ]
    },
    "org.hibernate.mapping.ManyToOne:void createForeignKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.mapping.Map:void createAllKeys()",
            "org.hibernate.mapping.Collection:void createForeignKeys()"
        ]
    },
    "org.hibernate.mapping.SingleTableSubclass:java.util.Iterator getDiscriminatorColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.Property:boolean isNullable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Property:boolean isOptional()"
        ]
    },
    "org.hibernate.mapping.SimpleValue:boolean[] getColumnUpdateability()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Property:boolean isUpdateable()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()"
        ]
    },
    "org.hibernate.mapping.Property:boolean isInsertable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()"
        ]
    },
    "org.hibernate.mapping.IdentifierCollection:void createPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:void createAllKeys()"
        ]
    },
    "org.hibernate.mapping.Join:void createPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void createPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Collection:void createAllKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.mapping.Map:void createAllKeys()"
        ]
    },
    "org.hibernate.mapping.Index:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.mapping.UniqueKey:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.mapping.Constraint:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Collection:void checkColumnDuplication()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getRecursiveProperty(java.lang.String,java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getReferencedProperty(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getRecursiveProperty(java.lang.String)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.mapping.SingleTableSubclass:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.mapping.ForeignKey:void alignColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.ToOne:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.Property:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.Component:int getColumnSpan()"
        ]
    },
    "org.hibernate.mapping.OneToMany:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Property:int getColumnSpan()"
        ]
    },
    "org.hibernate.mapping.Property:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()"
        ]
    },
    "org.hibernate.mapping.OneToMany:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Collection:void checkColumnDuplication()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.SingleTableSubclass:java.util.Iterator getDiscriminatorColumnIterator()"
        ]
    },
    "org.hibernate.mapping.Property:boolean isUpdateable()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()"
        ]
    },
    "org.hibernate.mapping.Constraint:java.lang.String sqlDropString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlDropString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.NaturalIdentifier:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.SQLQueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void methodCall(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.util.List list(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.ScrollableResultsImpl:void prepareCurrentRow(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.ScrollableResultsImpl:boolean scroll(int)",
            "org.hibernate.impl.ScrollableResultsImpl:boolean first()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean last()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean next()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean previous()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean setRowNumber(int)"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsForward(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean next()"
        ]
    },
    "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsReverse(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean previous()"
        ]
    },
    "org.hibernate.engine.CascadingAction:java.util.Iterator access$100(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$1:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)",
            "org.hibernate.engine.CascadingAction$8:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.CascadingAction$2:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$9:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$10:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$6:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$5:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$4:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$7:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$3:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.IdentNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.hql.QueryLoader:int[] getNamedParameterLocs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void assignment(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void setClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasedSelectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constructor(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunction(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aggregateExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunctionOrSubselect(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void joinElement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRefLhs(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void newValue(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void groupClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void functionCall(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aggregateExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void exprOrSubquery(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void inRhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void caseExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExprLhs(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void prepareVersioned(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void deleteStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void optionalSpace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void fromFragmentSeparator(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void fromTable(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void nestedFromFragment(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void out(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void separator(antlr.collections.AST,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectColumn(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExprList(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void beginFunctionTemplate(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void beginFunctionTemplate(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void endFunctionTemplate(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void commaBetweenParameters(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void quantified(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parenSelect(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void deleteStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void insertStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void 'from'(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void deleteStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void handleWithFragment(org.hibernate.hql.ast.tree.FromElement,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void groupExprs(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void groupExprs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void setClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void deleteStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void comparisonExpr(antlr.collections.AST,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.AssignmentSpecification:java.lang.String getSqlAssignmentFragment()",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void setClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void conditionList(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClauseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void conditionList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void filters(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void thetaJoins(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void groupExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void aggregate(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void binaryComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void likeEscape(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void additiveExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void caseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExprAfterMinusDiv(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arguments(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void distinctOrAll(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void count(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectColumn(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void count(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void aggregate(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExprAfterMinusDiv(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void countExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void count(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void countExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExprList(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void fromTable(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanOp(antlr.collections.AST,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void binaryComparisonExpression(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void comparisonExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void comparisonExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void likeEscape(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void inList(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void quantified(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void parenSelect(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void inList(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExprList(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void inList(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void additiveExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void multiplicativeExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void caseExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExprAfterMinusDiv(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void additiveExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void multiplicativeExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void multiplicativeExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.SQLQuery createSQLQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.SQLQuery createSQLQuery(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String[],java.lang.Class[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.CacheKey:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Update:org.hibernate.sql.Update addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumn(java.lang.String,java.lang.Object,org.hibernate.type.LiteralType)",
            "org.hibernate.type.CurrencyType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.TimeZoneType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.LiteralProcessor:void lookupConstant(org.hibernate.hql.ast.tree.DotNode)"
        ]
    },
    "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String resolveToLiteralString(org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CurrencyType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[])",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TimeZoneType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.NullableType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.Versioning:java.lang.Object increment(java.lang.Object,org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void postHydrate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,java.lang.Object[],java.lang.Object,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:java.lang.String nullSafeToString(java.lang.Object)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.NullableType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CalendarDateType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.CalendarType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.SerializableType:java.lang.String toString(java.lang.Object)"
        ]
    },
    "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean check(int,java.io.Serializable,int,org.hibernate.jdbc.Expectation,java.sql.PreparedStatement)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionImpl:java.lang.Object immediateLoad(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:void forceFlush(org.hibernate.engine.EntityEntry)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object doLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsPersistent(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.EntityKey:java.lang.String toString()",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List loadEntityBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadCollectionBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:void loadCollectionSubselect(org.hibernate.engine.SessionImplementor,java.io.Serializable[],java.lang.Object[],org.hibernate.type.Type[],java.util.Map,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean setCurrentSession(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String,java.io.Serializable)",
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void handleEmptyCollections(java.io.Serializable[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void loadCollection(org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.type.Type)",
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)",
            "org.hibernate.event.def.ReattachVisitor:void removeCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.collection.PersistentCollection locateLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.CollectionKey:java.lang.String toString()",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.QueryParameters:void traceParameters(org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CurrencyType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.AdaptedImmutableType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.TimeZoneType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.SerializableType:void set(java.sql.PreparedStatement,java.lang.Object,int)"
        ]
    },
    "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ComparableComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AbstractType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ComparableComparator:int compare(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AbstractType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.CustomType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.CustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String infoString(org.hibernate.persister.entity.EntityPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.MessageHelper:java.lang.String collectionInfoString(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.pretty.Printer:java.lang.String toString(org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.type.ArrayType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.AnyType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.Versioning:java.lang.Object increment(java.lang.Object,org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void postHydrate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,java.lang.Object[],java.lang.Object,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:boolean continuePathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void addJoin(org.hibernate.engine.JoinSequence,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void preprocess(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.CollectionSubqueryFactory:java.lang.String createCollectionSubquery(org.hibernate.engine.JoinSequence,java.util.Map,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String getCollectionSubquery(java.util.Map)"
        ]
    },
    "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void addToCurrentJoin(org.hibernate.hql.classic.PathExpressionParser$CollectionElement)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.criterion.SubqueryExpression:void createAndSetInnerQuery(org.hibernate.criterion.CriteriaQuery,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedColumnAliases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedColumnAliases()",
            "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:java.lang.String[] getColumnAliases(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedColumnAliases()",
            "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String[] getColumnAliases(java.lang.String,int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumnsUsingProjection(org.hibernate.Criteria,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumnsUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.PropertyExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.InExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.NullExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.BetweenExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.NotNullExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumnsUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(java.lang.String,int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getTypeUsingProjection(org.hibernate.Criteria,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.criterion.InExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getTypeUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedAliases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.criterion.Distinct:java.lang.String[] getAliases()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getProjectedAliases()",
            "org.hibernate.criterion.Distinct:java.lang.String[] getAliases()",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()"
        ]
    },
    "org.hibernate.criterion.Distinct:boolean isGrouped()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:boolean isGrouped()",
            "org.hibernate.criterion.AliasedProjection:boolean isGrouped()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:boolean isGrouped()"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:boolean isGrouped()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:boolean isGrouped()",
            "org.hibernate.criterion.AliasedProjection:boolean isGrouped()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:boolean isGrouped()"
        ]
    },
    "org.hibernate.loader.Loader:void readCollectionElements(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$1:void handleEntity(java.lang.String,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder$1:void handleEntity(java.lang.String,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSet$SimpleRemove:void operate()",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSet$SimpleRemove:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,org.hibernate.type.Type,org.hibernate.type.Type,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List loadEntityBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:void loadCollection(org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.collection.CollectionLoader:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:void loadCollectionBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:void loadCollectionSubselect(org.hibernate.engine.SessionImplementor,java.io.Serializable[],java.lang.Object[],org.hibernate.type.Type[],java.util.Map,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.SubselectCollectionLoader:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List listIgnoreQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.cfg.HbmBinder$ListSecondPass:void secondPass(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$IdentifierCollectionSecondPass:void secondPass(java.util.Map,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Configuration:void setCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void setCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration setCollectionCacheConcurrencyStrategy(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.EntityType:java.lang.Object fromXMLNode(org.dom4j.Node,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object fromXMLNode(org.dom4j.Node,org.hibernate.engine.Mapping)",
            "org.hibernate.property.Dom4jAccessor$TextGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$AttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:org.hibernate.type.Type getIdentifierType(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String getIdentifierOrUniqueKeyPropertyName(org.hibernate.type.EntityType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:boolean isReferenceToPrimaryKey(java.lang.String,org.hibernate.type.EntityType)"
        ]
    },
    "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:int getColumnSpan(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.BinaryLogicOperatorNode:void mutateRowValueConstructorSyntaxesIfNecessary(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.AbstractNullnessCheckNode:void initialize()",
            "org.hibernate.hql.NameGenerator:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getLHSColumnNames(org.hibernate.type.AssociationType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:int getColumnSpan(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.BinaryLogicOperatorNode:void mutateRowValueConstructorSyntaxesIfNecessary(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.AbstractNullnessCheckNode:void initialize()",
            "org.hibernate.hql.NameGenerator:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getLHSColumnNames(org.hibernate.type.AssociationType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElement(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndex(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElementToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:int[] findModified(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass)"
        ]
    },
    "org.hibernate.collection.PersistentList$Add:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.collection.PersistentList$Add:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void add(int,java.lang.Object)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolverAtFirst(org.hibernate.dialect.resolver.DialectResolver)"
        ]
    },
    "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.collection.PersistentList$Add:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void add(int,java.lang.Object)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolverAtFirst(org.hibernate.dialect.resolver.DialectResolver)"
        ]
    },
    "org.hibernate.collection.PersistentBag:void add(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.collection.PersistentList$Add:void operate()",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void add(int,java.lang.Object)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolverAtFirst(org.hibernate.dialect.resolver.DialectResolver)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectResolverSet:void addResolverAtFirst(org.hibernate.dialect.resolver.DialectResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectFactory:void registerDialectResolver(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IntoClause:void initializeColumns()",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.Queryable$Declarer getSubclassPropertyDeclarer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:org.hibernate.persister.entity.Queryable$Declarer getSubclassPropertyDeclarer(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:void handlePropertyBeingDereferenced(org.hibernate.type.Type,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.tree.IntoClause:boolean isSuperclassProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)"
        ]
    },
    "org.hibernate.criterion.PropertyProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AggregateProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:org.hibernate.type.Type getPropertyType(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.PathExpressionParser:void setType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void preprocess(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.FromPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:boolean isCollectionValued()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromAssociation(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void fetch(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.hql.classic.FromPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.FromPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void preprocess(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.JoinHelper:java.lang.String[] getLHSColumnNames(org.hibernate.type.AssociationType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getLHSColumnNames(org.hibernate.type.AssociationType,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.engine.JoinHelper:java.lang.String[] getRHSColumnNames(org.hibernate.type.AssociationType,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.OuterJoinableAssociation:void <init>(org.hibernate.type.AssociationType,java.lang.String,java.lang.String[],java.lang.String,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[],org.hibernate.type.AssociationType)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:java.lang.String[] toColumns(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumns(java.lang.String,org.hibernate.Criteria)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[] getCollectionElementColumns(java.lang.String,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String getIdentityColumn()",
            "org.hibernate.hql.ast.tree.IdentNode:int resolveAsNakedPropertyRef()",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderScalarIdentifierSelect(int)",
            "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String[] currentColumns()",
            "org.hibernate.engine.SubselectFetch:java.lang.String toSubselectString(java.lang.String)",
            "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getColumn(org.hibernate.Criteria,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.CountProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.PropertyProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.PropertyProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.PropertySubqueryExpression:java.lang.String toLeftSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AggregateProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createElementJoin(org.hibernate.persister.collection.QueryableCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IndexNode:void prepareForDot(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createManyToMany(java.lang.String,java.lang.String,java.lang.String,org.hibernate.persister.entity.Queryable,org.hibernate.type.EntityType,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityAssociation(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderScalarIdentifierSelect(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void addJoin(java.lang.String,org.hibernate.type.AssociationType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceEntity(java.lang.String,org.hibernate.type.EntityType,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void dereferenceCollection(java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void prepareForIndex(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromCollection(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:java.lang.String getCollectionSubquery(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkEntityTree(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.engine.JoinHelper:java.lang.String[] getAliasedLHSColumnNames(org.hibernate.type.AssociationType,java.lang.String,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void initPropertyPaths(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void postConstruct(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.persister.collection.CompositeElementPropertyMapping:void <init>(java.lang.String[],java.lang.String[],org.hibernate.type.AbstractComponentType,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkEntityTree(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String filterFragment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String filterFragment(java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String oneToManyFilterFragment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String filterFragment(java.lang.String)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.id.Assigned:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getOptionalObjectKey(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)"
        ]
    },
    "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.AnyType:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type guessType(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.loader.AbstractEntityJoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.EntityJoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.JoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.loader.JoinWalker:boolean isJoinedFetchEnabled(org.hibernate.type.AssociationType,org.hibernate.FetchMode,org.hibernate.engine.CascadeStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:boolean readBoolean(java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:byte readByte(java.lang.Object,java.lang.String,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:char readChar(java.lang.Object,java.lang.String,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:double readDouble(java.lang.Object,java.lang.String,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:float readFloat(java.lang.Object,java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:int readInt(java.lang.Object,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:long readLong(java.lang.Object,java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:short readShort(java.lang.Object,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:java.lang.Object readObject(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:boolean writeBoolean(java.lang.Object,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:byte writeByte(java.lang.Object,java.lang.String,byte,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:char writeChar(java.lang.Object,java.lang.String,char,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:double writeDouble(java.lang.Object,java.lang.String,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:float writeFloat(java.lang.Object,java.lang.String,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:int writeInt(java.lang.Object,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:long writeLong(java.lang.Object,java.lang.String,long,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:short writeShort(java.lang.Object,java.lang.String,short,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.javassist.FieldInterceptorImpl:java.lang.Object writeObject(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:boolean readBoolean(java.lang.Object,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:byte readByte(java.lang.Object,java.lang.String,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:char readChar(java.lang.Object,java.lang.String,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:double readDouble(java.lang.Object,java.lang.String,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:float readFloat(java.lang.Object,java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:int readInt(java.lang.Object,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:long readLong(java.lang.Object,java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:short readShort(java.lang.Object,java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:java.lang.Object readObject(java.lang.Object,java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:boolean writeBoolean(java.lang.Object,java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:byte writeByte(java.lang.Object,java.lang.String,byte,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:char writeChar(java.lang.Object,java.lang.String,char,char)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:double writeDouble(java.lang.Object,java.lang.String,double,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:float writeFloat(java.lang.Object,java.lang.String,float,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:int writeInt(java.lang.Object,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:long writeLong(java.lang.Object,java.lang.String,long,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:short writeShort(java.lang.Object,java.lang.String,short,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.intercept.cglib.FieldInterceptorImpl:java.lang.Object writeObject(java.lang.Object,java.lang.String,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void fireEvict(org.hibernate.event.EvictEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void evict(java.lang.Object)"
        ]
    },
    "org.hibernate.type.ManyToOneType:void beforeAssemble(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:void beforeAssemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)"
        ]
    },
    "org.hibernate.loader.OuterJoinableAssociation:void <init>(org.hibernate.type.AssociationType,java.lang.String,java.lang.String[],java.lang.String,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initAll(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTreeIfNecessary(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)"
        ]
    },
    "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[],org.hibernate.type.AssociationType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.JoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.JoinWalker:boolean isJoinable(int,java.util.Set,java.lang.String,java.lang.String[],org.hibernate.type.AssociationType,int)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.OuterJoinableAssociation:void <init>(org.hibernate.type.AssociationType,java.lang.String,java.lang.String[],java.lang.String,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.engine.JoinSequence$Join:void <init>(org.hibernate.engine.JoinSequence,org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence addJoin(org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])"
        ]
    },
    "org.hibernate.cache.CacheKey:void <init>(java.io.Serializable,org.hibernate.type.Type,java.lang.String,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.CollectionAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.CollectionAction:void beforeExecutions()",
            "org.hibernate.action.CollectionAction:void evict()",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.BatchFetchQueue:boolean isCached(org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:boolean isCached(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.CacheKey:void <init>(java.io.Serializable,org.hibernate.type.Type,java.lang.String,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:int generateHashCode()",
            "org.hibernate.engine.EntityUniqueKey:int generateHashCode(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.EntityKey:int generateHashCode()"
        ]
    },
    "org.hibernate.engine.CollectionKey:int generateHashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionKey:void <init>(java.lang.String,java.io.Serializable,org.hibernate.type.Type,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.EntityUniqueKey:int generateHashCode(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.EntityUniqueKey:void <init>(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.type.Type,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.EntityKey:int generateHashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.EntityKey:void <init>(java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityKey:void <init>(java.io.Serializable,java.lang.String,java.lang.String,org.hibernate.type.Type,boolean,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsPersistent(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsPersistent(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.Collections:void prepareCollectionForUpdate(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.CollectionKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.EntityKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsReverse(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.AssociationKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.Collections:void prepareCollectionForUpdate(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.EntityUniqueKey:void <init>(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.type.Type,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.EntityUniqueKey:org.hibernate.engine.EntityUniqueKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.type.AbstractType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ManyToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.Queryable findQueryableUsingImports(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.LiteralProcessor:void processConstant(antlr.collections.AST,boolean)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void lookupConstant(org.hibernate.hql.ast.tree.DotNode)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.persister.entity.EntityPersister requireClassPersister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement addFromElement()",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createElementJoin(org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence,org.hibernate.type.EntityType,boolean)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST createIntoClause(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntity(org.hibernate.type.EntityType,boolean,java.lang.String,boolean,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object invoke(java.lang.reflect.Method,java.lang.Object[],java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.proxy.pojo.cglib.CGLIBLazyInitializer:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.hibernate.criterion.Example:void addComponentTypedValues(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,java.util.List,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void addComponentTypedValues(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,java.util.List,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.event.def.DefaultRefreshEventListener:void evictCachedCollections(org.hibernate.type.Type[],java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void evictCachedCollections(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void evictCachedCollections(org.hibernate.type.Type[],java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:void processValue(int,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.AbstractVisitor:void processValue(int,java.lang.Object[],org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.event.def.WrapVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CollectionType:boolean isOwnerVersioned(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getLoadedCollectionOwnerIdOrNull(org.hibernate.engine.CollectionEntry)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.OuterJoinableAssociation:void <init>(org.hibernate.type.AssociationType,java.lang.String,java.lang.String[],java.lang.String,int,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String getAssociatedEntityName(org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type getElementType(org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.AssociationType getElementAssociationType(org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST createFromFilterElement(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void dereferenceCollection(java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void setCollectionToFetch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:void fetch(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:void <init>(java.lang.String,java.io.Serializable,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:org.hibernate.engine.CollectionEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.tree.ConstructorNode:java.lang.reflect.Constructor resolveConstructor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.ConstructorNode:void prepare()"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.dialect.function.SQLFunction requireSQLFunction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type findFunctionReturnType(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.MethodNode:void dialectFunction(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.MethodNode:void resolve(boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.type.Type getDataType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.SelectParser:boolean aggregateHasArgs(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.SelectParser:boolean aggregateFuncNoArgsHasParenthesis(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void throwTransientObjectException(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.String getEntityName(java.lang.Object)"
        ]
    },
    "org.hibernate.engine.JoinHelper:java.lang.String getLHSTableName(org.hibernate.type.AssociationType,int,org.hibernate.persister.entity.OuterJoinLoadable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int getPropertyIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.EntityEntry:java.lang.Object getLoadedValue(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean isInstrumented(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Class getMappedClass(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.EntityMetamodel:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object createProxy(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getComponentValue(org.hibernate.type.ComponentType,java.lang.Object,java.lang.String)",
            "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.type.ComponentType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object[] nullSafeGetValues(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.engine.Nullability:java.lang.String checkComponentNullability(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.criterion.InExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void addComponentTypedValues(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,java.util.List,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendComponentCondition(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)"
        ]
    },
    "org.hibernate.type.ComponentType:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object[],int,java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.type.TypeFactory:void deepCopy(java.lang.Object[],org.hibernate.type.Type[],boolean[],java.lang.Object[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object instantiate(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object deepCopy(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EmbeddedComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean isInstance(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean check(int,java.io.Serializable,int,org.hibernate.jdbc.Expectation,java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])"
        ]
    },
    "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.loader.Loader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.hql.HolderInstantiator,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.SessionImplementor,org.hibernate.ScrollMode)",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:java.util.Iterator performIterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:boolean isEntityAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteBrackets(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:boolean isCollectionAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteBrackets(java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor$ResultAliasContext:java.util.Map getPropertyResultsMap(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:java.util.Map getPropertyResultsMapByAlias(java.lang.String)"
        ]
    },
    "org.hibernate.engine.query.NativeSQLQueryPlan:void <init>(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.NativeSQLQueryPlan getNativeSQLQueryPlan(org.hibernate.engine.query.sql.NativeSQLQuerySpecification)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String process()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLCustomQuery:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void jpaPositionalParameter(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParameterParser:void parse(java.lang.String,org.hibernate.engine.query.ParameterParser$Recognizer)"
        ]
    },
    "org.hibernate.engine.query.ParameterParser:void parse(java.lang.String,org.hibernate.engine.query.ParameterParser$Recognizer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer parseLocations(java.lang.String)"
        ]
    },
    "org.hibernate.criterion.IdentifierProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.IdentifierProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.IdentifierEqExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.IdentifierProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type[] getProjectedTypes()",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.IdentifierEqExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.GeneratedCollectionAliases:void <init>(org.hibernate.persister.collection.CollectionPersister,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.BasicLoader:void postInstantiate()"
        ]
    },
    "org.hibernate.loader.DefaultEntityAliases:void <init>(org.hibernate.persister.entity.Loadable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.BasicLoader:void postInstantiate()"
        ]
    },
    "org.hibernate.loader.ColumnEntityAliases:void <init>(java.util.Map,org.hibernate.persister.entity.Loadable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.BatchFetchQueue:boolean isCached(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:java.lang.Object get(java.lang.Object,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.engine.BatchFetchQueue:boolean isCached(org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:org.hibernate.cache.access.SoftLock lockItem(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:void beforeExecutions()"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:org.hibernate.cache.access.SoftLock lockItem(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockItem(java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockItem(java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.DateType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)"
        ]
    },
    "org.hibernate.type.AbstractType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.CacheKey:boolean equals(java.lang.Object)",
            "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkNaturalId(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityEntry,java.lang.Object[],java.lang.Object[],org.hibernate.EntityMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.TypedValue:boolean equals(java.lang.Object)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityUniqueKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int getSubclassPropertyIndex(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateLazySelectString()"
        ]
    },
    "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.CacheKey:boolean equals(java.lang.Object)",
            "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkNaturalId(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityEntry,java.lang.Object[],java.lang.Object[],org.hibernate.EntityMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MutableType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.AbstractType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.engine.TypedValue:boolean equals(java.lang.Object)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityUniqueKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.hibernate.type.DateType:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.DateType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:boolean isEqual(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.NullableType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.DateType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.connection.ConnectionProvider createConnectionProvider(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper:void prepare(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void validate()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader$Metadata:int resolveColumnPosition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Array getArray(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateArray(java.lang.String,java.sql.Array)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.io.InputStream getAsciiStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateAsciiStream(java.lang.String,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.math.BigDecimal getBigDecimal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.BigDecimalType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.BigIntegerType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.math.BigDecimal getBigDecimal(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateBigDecimal(java.lang.String,java.math.BigDecimal)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.io.InputStream getBinaryStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AbstractBynaryType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateBinaryStream(java.lang.String,java.io.InputStream,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Blob getBlob(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.BlobType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateBlob(java.lang.String,java.sql.Blob)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:boolean getBoolean(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.BooleanType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateBoolean(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:byte getByte(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ByteType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateByte(java.lang.String,byte)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:byte[] getBytes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AbstractBynaryType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateBytes(java.lang.String,byte[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.io.Reader getCharacterStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TextType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AbstractCharArrayType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateCharacterStream(java.lang.String,java.io.Reader,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Clob getClob(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClobType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateClob(java.lang.String,java.sql.Clob)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Date getDate(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CalendarDateType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.DateType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Date getDate(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateDate(java.lang.String,java.sql.Date)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:double getDouble(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.DoubleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateDouble(java.lang.String,double)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:float getFloat(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.FloatType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateFloat(java.lang.String,float)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:int getInt(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.IntegerType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NumericBooleanType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.ColumnMetadata:void <init>(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateInt(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:long getLong(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.LongType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateLong(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.lang.Object getObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.lang.Object getObject(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateObject(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateObject(java.lang.String,java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Ref getRef(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateRef(java.lang.String,java.sql.Ref)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:short getShort(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ShortType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void initIndexes(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateShort(java.lang.String,short)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.lang.String getString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CharBooleanType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.StringType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.CharacterType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:void <init>(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.ColumnMetadata:void <init>(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void <init>(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void addReference(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateString(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Time getTime(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TimeType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Time getTime(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateTime(java.lang.String,java.sql.Time)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Timestamp getTimestamp(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CalendarType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.TimestampType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateTimestamp(java.lang.String,java.sql.Timestamp)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.sql.Timestamp getTimestamp(java.lang.String,java.util.Calendar)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.io.InputStream getUnicodeStream(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:java.net.URL getURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ResultSetWrapper:void updateNull(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:void parseListener(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Configuration:void setListener(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],boolean[],java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader$ResultRowProcessor:java.lang.Object buildResultRow(java.lang.Object[],java.sql.ResultSet,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:boolean indexExists(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:boolean elementExists(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister$3:void bindValues(java.sql.PreparedStatement)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void updateOrInsert(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void updateOrInsert(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void updateOrInsert(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void processInsertGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void processUpdateGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElement(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndex(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElementToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeKey(java.sql.PreparedStatement,java.io.Serializable,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndexToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIdentifier(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ParameterBinder:int bindQueryParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.TypeFactory:org.hibernate.type.Type heuristicType(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type guessType(java.lang.Class)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader$Metadata:org.hibernate.type.Type getHibernateType(int)",
            "org.hibernate.hql.ast.util.LiteralProcessor:void setConstantValue(org.hibernate.hql.ast.tree.DotNode,java.lang.String,java.lang.Object)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type findFunctionReturnType(java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:void setText(java.lang.String)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.mapping.Any:org.hibernate.type.Type getType()"
        ]
    },
    "org.hibernate.mapping.SimpleValue:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DependantValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsPersistent(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)"
        ]
    },
    "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constant(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void processConstant(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.ASTPrinter:void showNode(java.io.PrintWriter,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTPrinter:void showAst(java.util.ArrayList,java.io.PrintWriter,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void traceIn(java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void 'from'(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void groupExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void fromTable(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void setClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void comparisonExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClauseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void conditionList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderDirection(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void filters(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void thetaJoins(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void sqlToken(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void distinctOrAll(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectColumn(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectAtom(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void count(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void methodCall(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void aggregate(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void constant(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void countExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanOp(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void binaryComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void likeEscape(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void inList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void quantified(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parenSelect(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void addrExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parameter(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void additiveExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void multiplicativeExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void caseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExprAfterMinusDiv(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arguments(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void traceIn(java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void setClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void whereClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void intoClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:java.lang.String path(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertablePropertySpec(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void assignment(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void newValue(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void groupClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void logicalExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasedSelectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void identifier(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constructor(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void functionCall(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void count(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunction(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void literal(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aggregateExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElementList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void joinElement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:int joinType(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void pathAsIdent(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void withClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void exprOrSubquery(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void inRhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunctionOrSubselect(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constant(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void parameter(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void caseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExprLhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyName(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRefLhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void numericInteger(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void parameter(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void preprocess(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.SelectPathExpressionParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void preprocess(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void endChild(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.ParserHelper:void parse(org.hibernate.hql.classic.Parser,java.lang.String,java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setBoolean(java.lang.String,boolean)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:void dirtyCheck(org.hibernate.event.FlushEntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean isUpdateNecessary(org.hibernate.event.FlushEntityEvent,boolean)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:int getEntityState(java.lang.Object,java.lang.String,org.hibernate.engine.EntityEntry,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.engine.ForeignKeys:boolean isNotTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)"
        ]
    },
    "org.hibernate.engine.CascadingAction$9:void noCascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.Object,org.hibernate.persister.entity.EntityPersister,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:boolean isVersionChanged(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMapElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentListElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.Collections:void processUnreachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.type.OneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.OneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.String resolveEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setEntity(int,java.lang.Object)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setEntity(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AnyType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AnyType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.AnyType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AnyType:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:int[] findModified(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.action.EntityUpdateAction:void postUpdate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityUpdateAction:void postCommitUpdate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.action.EntityUpdateAction:boolean preUpdate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityInsertAction:void postInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityInsertAction:void postCommitInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.action.EntityInsertAction:boolean preInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityDeleteAction:boolean preDelete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityDeleteAction:void postDelete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void execute()"
        ]
    },
    "org.hibernate.action.EntityDeleteAction:void postCommitDelete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireDelete(org.hibernate.event.DeleteEvent,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void delete(java.lang.String,java.lang.Object,boolean,java.util.Set)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void fireDelete(org.hibernate.event.DeleteEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void saveOrUpdate(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.io.Serializable fireSave(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.io.Serializable save(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void save(java.lang.String,java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireUpdate(org.hibernate.event.SaveOrUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void update(java.lang.String,java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.event.PreCollectionRecreateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRecreateAction:void preRecreate()"
        ]
    },
    "org.hibernate.event.PostCollectionRemoveEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRemoveAction:void postRemove()"
        ]
    },
    "org.hibernate.event.PreCollectionRemoveEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRemoveAction:void preRemove()"
        ]
    },
    "org.hibernate.event.PostCollectionRecreateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRecreateAction:void postRecreate()"
        ]
    },
    "org.hibernate.event.AbstractCollectionEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.InitializeCollectionEvent:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PreCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PreCollectionRecreateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PostCollectionRemoveEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object)",
            "org.hibernate.event.PostCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PreCollectionRemoveEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource,java.lang.Object)",
            "org.hibernate.event.PostCollectionRecreateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.type.CollectionType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void setReadOnly(java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ForeignKeys$Nullifier:void nullifyTransientReferences(java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isOperationQueueEnabled()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isClearQueueEnabled()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentBag:void clear()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isPutQueueEnabled()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)"
        ]
    },
    "org.hibernate.event.InitializeCollectionEvent:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void initializeCollection(org.hibernate.collection.PersistentCollection,boolean)"
        ]
    },
    "org.hibernate.action.CollectionRemoveAction:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.AbstractCollectionEvent:java.lang.Object getLoadedOwnerOrNull(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.InitializeCollectionEvent:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PreCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PostCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.AbstractCollectionEvent:java.io.Serializable getLoadedOwnerIdOrNull(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.InitializeCollectionEvent:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PreCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.PostCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:java.io.Serializable getSnapshot()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:java.lang.Object getSnapshotElement(java.lang.Object,int)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.lang.Object getSnapshotElement(java.lang.Object,int)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.id.Assigned:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable getUpdateId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getVersion(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.StatelessSessionImpl:void delete(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean isVersionChanged(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getValues(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.EntityMode,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.event.def.WrapVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.AbstractVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.EntityEntry:void setReadOnly(boolean,java.lang.Object)",
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void writeObject(java.io.ObjectOutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettingsInternal(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettings()",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.cfg.Configuration:void <init>(org.hibernate.cfg.SettingsFactory)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void <init>()"
        ]
    },
    "org.hibernate.dialect.resolver.DialectFactory:void registerDialectResolver(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectFactory:void <clinit>()"
        ]
    },
    "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties,java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.FrontBaseDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.PointbaseDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.ProgressDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.Oracle8iDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.Oracle9iDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.Cache71Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.JDataStoreDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn bindReturnJoin(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.Map,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn bindLoadCollection(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.engine.query.sql.NativeSQLQueryRootReturn:void <init>(java.lang.String,java.lang.String,java.util.Map,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)",
            "org.hibernate.engine.query.sql.NativeSQLQueryRootReturn:void <init>(java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addColumns(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String generateInsertRowString()"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addColumns(java.lang.String[],boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateUpdateRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)"
        ]
    },
    "org.hibernate.sql.Update:org.hibernate.sql.Update addWhereColumns(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumns(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateInsertRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)"
        ]
    },
    "org.hibernate.sql.Insert:org.hibernate.sql.Insert addColumns(java.lang.String[],boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String generateInsertRowString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateInsertString(boolean,boolean[],int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.id.IdentityGenerator$BasicDelegate:org.hibernate.id.insert.IdentifierGeneratingInsert prepareIdentifierGeneratingInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateIdentityInsertString(boolean[])"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria setLockMode(org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.MySQLMyISAMDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.MySQLInnoDBDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.MySQL5Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.MySQL5InnoDBDialect:void <init>()"
        ]
    },
    "org.hibernate.dialect.FirebirdDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.DB2Dialect:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.DB2390Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.DB2400Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.DataDirectOracle9Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.Sybase11Dialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.SybaseAnywhereDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.dialect.SybaseDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.dialect.resolver.AbstractDialectResolver:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.id.IdentifierGeneratorFactory:java.lang.Class getIdentifierGeneratorClass(java.lang.String,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.SimpleValue:boolean isIdentityColumn(org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void <init>(java.sql.Connection,org.hibernate.dialect.Dialect,boolean)"
        ]
    },
    "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void <init>(java.sql.Connection,org.hibernate.dialect.Dialect,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void <init>(java.sql.Connection,org.hibernate.dialect.Dialect)",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void validate()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.tool.hbm2ddl.SchemaExport getSchemaExport(org.hibernate.cfg.Configuration)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidator:void <init>(org.hibernate.cfg.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.tool.hbm2ddl.SchemaValidator getSchemaValidator(org.hibernate.cfg.Configuration)",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.tool.hbm2ddl.SchemaUpdate getSchemaUpdate(org.hibernate.cfg.Configuration)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.mapping.Component:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DependantValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object instantiate(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object instantiate(java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object instantiate()"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:void <init>(org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.lang.String,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.SubqueryExpression:void createAndSetInnerQuery(org.hibernate.criterion.CriteriaQuery,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.cache.UpdateTimestampsCache:void preinvalidate(java.io.Serializable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void execute(org.hibernate.action.Executable)"
        ]
    },
    "org.hibernate.cache.UpdateTimestampsCache:void invalidate(java.io.Serializable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:void decrementLock(java.lang.Object,org.hibernate.cache.ReadWriteCache$Lock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.ReadWriteCache:void release(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.ReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:void handleLockExpiry(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.ReadWriteCache:void release(java.lang.Object,org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.ReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)"
        ]
    },
    "org.hibernate.cache.ReadOnlyCache:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean afterInsert(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cache.TransactionalCache:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cache.TransactionalCache:boolean insert(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean insert(java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:java.util.Map getMergeMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$3:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireRefresh(org.hibernate.event.RefreshEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.mapping.Property:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.component.Dom4jComponentTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.cache.impl.CacheDataDescriptionImpl:org.hibernate.cache.impl.CacheDataDescriptionImpl decode(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cache.impl.CacheDataDescriptionImpl:org.hibernate.cache.impl.CacheDataDescriptionImpl decode(org.hibernate.mapping.Collection)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(org.hibernate.mapping.Property,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Column:java.lang.String getSqlType(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.mapping.DependantValue:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DependantValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.Array:java.lang.Class getElementClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Array:org.hibernate.type.CollectionType getDefaultCollectionType()"
        ]
    },
    "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.mapping.Set:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.DotNode:void resolveIndex(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:java.lang.String addFromAssociation(org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:java.lang.String getElementName(org.hibernate.hql.classic.PathExpressionParser$CollectionElement,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:boolean continuePathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromClass(java.lang.String,org.hibernate.persister.entity.Queryable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:org.hibernate.persister.entity.PropertyMapping getPropertyMapping(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.TwoPhaseLoad:void addUninitializedEntity(org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.TwoPhaseLoad:void addUninitializedCachedEntity(org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.LockMode,boolean,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)"
        ]
    },
    "org.hibernate.event.def.ProxyVisitor:java.lang.Object processEntity(java.lang.Object,org.hibernate.type.EntityType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:boolean reassociateIfUninitializedProxy(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object resolveKey(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeProperty(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.type.EmbeddedComponentType:void <init>(org.hibernate.tuple.component.ComponentMetamodel)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Component:org.hibernate.type.Type buildType()"
        ]
    },
    "org.hibernate.hql.HolderInstantiator:java.lang.Object instantiate(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.ScrollableResultsImpl:void prepareCurrentRow(boolean)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void setIdentifier(java.lang.Object,java.io.Serializable,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.action.EntityIdentityInsertAction:void execute()",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable getUpdateId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:void resetIdentifier(java.lang.Object,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void resetIdentifier(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.io.Serializable[],java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.event.def.WrapVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValue(java.lang.Object,int,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object[],int,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.engine.EntityEntry:void postUpdate(java.lang.Object,java.lang.Object[],java.lang.Object)",
            "org.hibernate.engine.EntityEntry:void forceLocked(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:void before()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:java.util.List list()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:void before()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.SQLQueryImpl:int executeUpdate()",
            "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.QueryImpl:java.util.List list()",
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.action.EntityInsertAction:boolean isCachePutEnabled(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.impl.SessionImpl openSession(java.sql.Connection,boolean,long,org.hibernate.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(java.sql.Connection,org.hibernate.Interceptor)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(org.hibernate.Interceptor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openTemporarySession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(java.sql.Connection,boolean,boolean,org.hibernate.ConnectionReleaseMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session buildOrObtainSession()",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session buildOrObtainSession()"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void postInitialize(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.CollectionEntry:void afterAction(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object[],int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int[] findDirty(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean handleInterception(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void dirtyCheck(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:int[] findModified(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean handleInterception(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void dirtyCheck(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void afterInitialize(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object createProxy(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object createProxyIfNecessary(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.action.EntityIdentityInsertAction:org.hibernate.engine.EntityKey generateDelayedEntityKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:void <init>(java.lang.Object[],java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor,boolean)"
        ]
    },
    "org.hibernate.action.CollectionAction:void afterTransactionCompletion(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)"
        ]
    },
    "org.hibernate.action.CollectionAction:void beforeExecutions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)"
        ]
    },
    "org.hibernate.action.CollectionAction:void evict()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRecreateAction:void execute()",
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)"
        ]
    },
    "org.hibernate.type.MutableType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ArrayType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.type.TypeFactory:void deepCopy(java.lang.Object[],org.hibernate.type.Type[],boolean[],java.lang.Object[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:java.lang.Object[] createDeletedState(org.hibernate.persister.entity.EntityPersister,java.lang.Object[],org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AbstractType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.AbstractType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AbstractType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.type.NullableType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ClobType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.BlobType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CompositeCustomType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CustomType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.type.AbstractType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.engine.Cascade:void cascadeComponent(java.lang.Object,org.hibernate.type.AbstractComponentType,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:java.lang.Object[] replace(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] replaceAssociations(java.lang.Object[],java.lang.Object[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)"
        ]
    },
    "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.type.ComponentType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object semiResolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:org.hibernate.EntityMode getEntityMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.collection.PersistentCollection locateLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.tuple.component.ComponentTuplizerFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.tuple.entity.EntityTuplizer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getComponentValue(org.hibernate.type.ComponentType,java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getComponentValue(org.hibernate.type.ComponentType,java.lang.Object,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.entity.EntityTuplizerFactory:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void reset()"
        ]
    },
    "org.hibernate.criterion.BetweenExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.criterion.NotExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Object getFinal(int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractScrollableResults:java.math.BigDecimal getBigDecimal(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.math.BigInteger getBigInteger(int)",
            "org.hibernate.impl.AbstractScrollableResults:byte[] getBinary(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.String getText(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Boolean getBoolean(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Byte getByte(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Character getCharacter(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Double getDouble(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Float getFloat(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Integer getInteger(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Long getLong(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Short getShort(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.String getString(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.util.Locale getLocale(int)"
        ]
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Object getNonFinal(int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractScrollableResults:java.sql.Blob getBlob(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.sql.Clob getClob(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.util.Date getDate(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.util.Calendar getCalendar(int)",
            "org.hibernate.impl.AbstractScrollableResults:java.util.TimeZone getTimeZone(int)"
        ]
    },
    "org.hibernate.id.enhanced.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.id.enhanced.SequenceStyleGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.id.IncrementGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.id.IdentifierGeneratorFactory:java.io.Serializable get(java.sql.ResultSet,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:java.io.Serializable getGeneratedIdentity(java.sql.ResultSet,org.hibernate.type.Type)",
            "org.hibernate.id.SequenceGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.id.TableHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.id.SequenceHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.util.ReflectHelper:java.lang.reflect.Constructor getConstructor(java.lang.Class,org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.ConstructorNode:java.lang.reflect.Constructor resolveConstructor(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.type.EmbeddedComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IntoClause:void validateTypes(org.hibernate.hql.ast.tree.SelectClause)"
        ]
    },
    "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:boolean isDateTimeType(org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:void initialize()",
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type resolveDataType()",
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type resolveDateTimeArithmeticResultType(org.hibernate.type.Type,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:boolean isIntegral(org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)"
        ]
    },
    "org.hibernate.engine.TypedValue:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.criterion.Expression:org.hibernate.criterion.Criterion sql(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.Expression:org.hibernate.criterion.Criterion sql(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.Expression:org.hibernate.criterion.Criterion sql(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion sqlRestriction(java.lang.String,java.lang.Object,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion sqlRestriction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.engine.SessionImplementor,org.hibernate.engine.query.ParameterMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String,java.lang.Class)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String[],java.lang.Class[])"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.Class)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.Object get(java.lang.Class,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.id.enhanced.SequenceStyleGenerator:org.hibernate.id.enhanced.DatabaseStructure buildDatabaseStructure(java.util.Properties,org.hibernate.dialect.Dialect,boolean,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.SequenceStyleGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.id.IdentifierGeneratorFactory:org.hibernate.id.IdentifierGenerator create(java.lang.String,org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)"
        ]
    },
    "org.hibernate.id.UUIDHexGenerator:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.JoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.util.Set,java.lang.String,java.lang.String[],boolean,int)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)",
            "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.event.EventListeners:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void reset()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.RefreshEvent:void <init>(java.lang.Object,org.hibernate.LockMode,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.Object,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void load(java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,org.hibernate.LockMode,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable,org.hibernate.LockMode)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.event.LoadEvent:void <init>(java.io.Serializable,java.lang.String,boolean,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object immediateLoad(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evict(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String,java.io.Serializable)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evict(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class,java.io.Serializable)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.String,java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:void evict()"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void remove(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:void execute()"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean afterUpdate(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.cache.access.SoftLock)"
        ]
    },
    "org.hibernate.event.def.EvictVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.impl.IteratorImpl:void postNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.IteratorImpl:void <init>(java.sql.ResultSet,java.sql.PreparedStatement,org.hibernate.event.EventSource,org.hibernate.type.Type[],java.lang.String[][],org.hibernate.hql.HolderInstantiator)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()"
        ]
    },
    "org.hibernate.Hibernate:void close(java.util.Iterator)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.context.ThreadLocalSessionContext$CleanupSynch:void afterCompletion(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.String bestGuessEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:boolean contains(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String bestGuessEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.lang.String getEntityName(java.lang.Object)",
            "org.hibernate.intercept.javassist.FieldInterceptorImpl:java.lang.Object readObject(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.intercept.cglib.FieldInterceptorImpl:java.lang.Object readObject(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object returnNarrowedProxy(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.PersistenceContext,java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.proxy.pojo.cglib.CGLIBLazyInitializer:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.proxy.map.MapLazyInitializer:java.util.Map getMap()",
            "org.hibernate.proxy.dom4j.Dom4jLazyInitializer:org.dom4j.Element getElement()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object unproxy(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object unproxyAndReassociate(java.lang.Object)",
            "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)",
            "org.hibernate.Hibernate:java.lang.Class getClass(java.lang.Object)",
            "org.hibernate.Hibernate:boolean isPropertyInitialized(java.lang.Object,java.lang.String)"
        ]
    },
    "org.hibernate.Hibernate:void initialize(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.AnyType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void assemble(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromCache(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry,org.hibernate.cache.entry.CacheEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.TypeFactory:java.lang.Object[] assemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.io.Serializable[],java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ManyToOneType:java.io.Serializable assembleId(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ManyToOneType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:void beforeAssemble(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void cascadeOnMerge(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Map)",
            "org.hibernate.event.def.DefaultLockEventListener:void cascadeOnLock(org.hibernate.event.LockEvent,org.hibernate.persister.entity.EntityPersister,java.lang.Object)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void cascadeAfterReplicate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:void cascadeBeforeSave(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:void cascadeAfterSave(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeBeforeDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.EntityEntry,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeAfterDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Set)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void cascadeOnFlush(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object merge(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object merge(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.String,java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void merge(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$6:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void saveOrUpdateCopy(java.lang.String,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$7:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$8:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$9:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void persist(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void persist(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void persistOnFlush(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void persistOnFlush(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:int getIndexOfFirstMatchingProperty(java.util.List,java.lang.String)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentArrayHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentArrayHolder:boolean endRead()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getQueuedOrphans(java.lang.String)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentList:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.AbstractPersistentCollection$1:boolean hasNext()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:int size()",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeRemove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:void beforeAdd(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:int size()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.transform.DistinctResultTransformer:java.util.List transformList(java.util.List)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:boolean isLookupByNaturalKey()",
            "org.hibernate.impl.CollectionFilterImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.impl.CollectionFilterImpl:java.lang.Object[] valueArray()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object uniqueElement(java.util.List)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.NoArgSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.CharIndexFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.PositionSubstringFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.StandardSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.VarArgsSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.SQLFunctionTemplate:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ConvertFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.entity.CollectionElementLoader:java.lang.Object loadElement(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object)",
            "org.hibernate.loader.entity.AbstractEntityLoader:java.lang.Object load(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,java.io.Serializable)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.loader.hql.QueryLoader:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.loader.OuterJoinableAssociation:int getPosition(java.lang.String,java.util.List)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsBeforeTransactionCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromClause:boolean hasCollectionFecthes()",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.hql.ast.tree.FromElement locateSingleFromElement()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isNonQualifiedPropertyRef(antlr.collections.AST)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:int getErrorCount()",
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:boolean containsCollectionFetches()",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderIdentifierSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderPropertiesSelect(org.hibernate.sql.QuerySelect)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List getResultList(java.util.List,org.hibernate.transform.ResultTransformer)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister,java.util.List)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void initializeNonLazyCollections()",
            "org.hibernate.engine.JoinSequence:java.lang.String toString()",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.engine.JoinSequence:int getJoinCount()",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)",
            "org.hibernate.engine.ActionQueue:void prepareActions(java.util.List)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:int getColumnSpan()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Constraint:int getColumnSpan()",
            "org.hibernate.mapping.Index:int getColumnSpan()",
            "org.hibernate.mapping.MetaAttribute:java.lang.String getValue()",
            "org.hibernate.mapping.MetaAttribute:boolean isMultiValued()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:int getLength()",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:int size()",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:boolean hasNamedParameters()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized()",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$1:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:void updateCurrentIterator()",
            "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:void and()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.dialect.function.NoArgSQLFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.AbstractAnsiTrimEmulationFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.DerbyDialect$DerbyTrimFunctionEmulation:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.SqlGenerator:void endFunctionTemplate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:boolean hasCollectionFecthes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.ErrorCounter:int getErrorCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.ErrorCounter:void throwQueryException()"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:boolean containsCollectionFetches()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:boolean needsFetchingScroll()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.ScrollableResults performScroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.loading.EntityLoadContext:void cleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.LoadContexts:void cleanup(java.sql.ResultSet)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()"
        ]
    },
    "org.hibernate.engine.JoinSequence:int getJoinCount()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Property:int getColumnSpan()",
            "org.hibernate.mapping.OneToMany:int getColumnSpan()",
            "org.hibernate.mapping.Set:void createPrimaryKey()"
        ]
    },
    "org.hibernate.mapping.Constraint:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)"
        ]
    },
    "org.hibernate.mapping.Index:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.MetaAttribute:boolean isMultiValued()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.ProjectionList:int getLength()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()",
            "org.hibernate.criterion.ProjectionList:boolean isGrouped()"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentList:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentList:boolean empty()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean empty()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentBag:boolean isEmpty()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.dialect.function.ConditionalParenthesisFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.FromElement:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:boolean hasEmbeddedParameters()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.mapping.ForeignKey:boolean isReferenceToPrimaryKey()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean empty()",
            "org.hibernate.collection.PersistentSet:boolean isEmpty()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])",
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentList:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Clear:void operate()",
            "org.hibernate.collection.PersistentBag$Clear:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Clear:void operate()",
            "org.hibernate.collection.PersistentBag$Clear:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Clear:void operate()",
            "org.hibernate.collection.PersistentBag$Clear:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:boolean hasEmbeddedParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.SqlFragment:boolean hasEmbeddedParameters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.ForeignKey:boolean isReferenceToPrimaryKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void alignColumns()",
            "org.hibernate.mapping.ForeignKey:java.lang.String toString()"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:int size()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:int size()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:int size()",
            "org.hibernate.collection.PersistentSet:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractQueryImpl:boolean hasNamedParameters()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized()",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:boolean hasNamedParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:boolean hasUninitializedLazyProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.secure.JACCPreDeleteEventListener:boolean onPreDelete(org.hibernate.event.PreDeleteEvent)",
            "org.hibernate.secure.JACCPreLoadEventListener:void onPreLoad(org.hibernate.event.PreLoadEvent)",
            "org.hibernate.secure.JACCPreInsertEventListener:boolean onPreInsert(org.hibernate.event.PreInsertEvent)",
            "org.hibernate.secure.JACCPreUpdateEventListener:boolean onPreUpdate(org.hibernate.event.PreUpdateEvent)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean isEmpty()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean isEmpty()",
            "org.hibernate.collection.PersistentList:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean empty()",
            "org.hibernate.collection.PersistentSet:boolean isEmpty()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.collection.PersistentBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])",
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentSet:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentSet$Clear:void operate()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)"
        ]
    },
    "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>()"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:int size()",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:int size()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()",
            "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getSQLAliasCount()",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:long getElementCountInMemory()",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:int size()",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.EventCache:int size()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generatePositionalParameter(antlr.collections.AST)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:int size()",
            "org.hibernate.engine.query.ParameterMetadata:void <init>(org.hibernate.engine.query.OrdinalParameterDescriptor[],java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:int getColumnSpan()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.SessionStatisticsImpl:java.lang.String toString()"
        ]
    },
    "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.SessionStatisticsImpl:java.lang.String toString()"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getSQLAliasCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)"
        ]
    },
    "org.hibernate.cache.HashtableCache:long getElementCountInMemory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.BaseRegionAdapter:long getElementCountInMemory()"
        ]
    },
    "org.hibernate.util.IdentityMap:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:int size()",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()",
            "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getSQLAliasCount()",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:long getElementCountInMemory()",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:int size()",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.EventCache:int size()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generatePositionalParameter(antlr.collections.AST)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:int size()",
            "org.hibernate.engine.query.ParameterMetadata:void <init>(org.hibernate.engine.query.OrdinalParameterDescriptor[],java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:int getColumnSpan()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.event.def.EventCache:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:int size()",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()",
            "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getSQLAliasCount()",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:long getElementCountInMemory()",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:int size()",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.EventCache:int size()",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generatePositionalParameter(antlr.collections.AST)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:int size()",
            "org.hibernate.engine.query.ParameterMetadata:void <init>(org.hibernate.engine.query.OrdinalParameterDescriptor[],java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:int getColumnSpan()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generatePositionalParameter(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void parameter(antlr.collections.AST)"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:int size()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:int size()",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()",
            "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:int getSQLAliasCount()",
            "org.hibernate.loader.hql.QueryLoader:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.HashtableCache:long getElementCountInMemory()",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:int size()",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.EventCache:int size()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:boolean matches(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST generatePositionalParameter(antlr.collections.AST)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:int size()",
            "org.hibernate.engine.query.ParameterMetadata:void <init>(org.hibernate.engine.query.OrdinalParameterDescriptor[],java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Table:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Table:int getColumnSpan()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.engine.query.ParameterMetadata:void <init>(org.hibernate.engine.query.OrdinalParameterDescriptor[],java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Table:int getColumnSpan()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean isSnapshotEmpty(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean isSnapshotEmpty(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean isSnapshotEmpty(java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Clear:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void clear()",
            "org.hibernate.stat.StatisticsImpl:void clear()",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void clear()",
            "org.hibernate.util.IdentityMap:void clear()",
            "org.hibernate.event.def.EventCache:void clear()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.map.MapProxy:void clear()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clearSubselects()"
        ]
    },
    "org.hibernate.collection.PersistentMap:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isEmpty()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentMap:boolean empty()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean isEmpty()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.util.IdentityMap:boolean isEmpty()",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.event.def.EventCache:boolean isEmpty()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.proxy.map.MapProxy:boolean isEmpty()",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:boolean hasLoadingCollectionEntries()",
            "org.hibernate.engine.loading.LoadContexts:boolean hasRegisteredLoadingCollectionEntries()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:void doCleanup()"
        ]
    },
    "org.hibernate.util.IdentityMap:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isEmpty()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentMap:boolean empty()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.util.IdentityMap:boolean isEmpty()",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.event.def.EventCache:boolean isEmpty()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.proxy.map.MapProxy:boolean isEmpty()",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:boolean hasLoadingCollectionEntries()",
            "org.hibernate.engine.loading.LoadContexts:boolean hasRegisteredLoadingCollectionEntries()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:void doCleanup()"
        ]
    },
    "org.hibernate.event.def.EventCache:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isEmpty()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentMap:boolean empty()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.util.IdentityMap:boolean isEmpty()",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.event.def.EventCache:boolean isEmpty()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.proxy.map.MapProxy:boolean isEmpty()",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:boolean hasLoadingCollectionEntries()",
            "org.hibernate.engine.loading.LoadContexts:boolean hasRegisteredLoadingCollectionEntries()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:void doCleanup()"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:boolean isEmpty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentSet:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isSnapshotEmpty(java.io.Serializable)",
            "org.hibernate.collection.PersistentMap:boolean isEmpty()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentMap:boolean empty()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getAppropriateInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.EntityLoader getAppropriateUniqueKeyLoader(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:boolean hasPropertyResultMap(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.util.IdentityMap:boolean isEmpty()",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.event.def.EventCache:boolean isEmpty()",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessDML(org.hibernate.hql.ast.tree.RestrictableStatement)",
            "org.hibernate.proxy.map.MapProxy:boolean isEmpty()",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:boolean hasLoadingCollectionEntries()",
            "org.hibernate.engine.loading.LoadContexts:boolean hasRegisteredLoadingCollectionEntries()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session doUnbind(org.hibernate.SessionFactory,boolean)",
            "org.hibernate.context.ManagedSessionContext:void doCleanup()"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:boolean hasLoadingCollectionEntries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.engine.loading.LoadContexts:boolean hasRegisteredLoadingCollectionEntries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.loading.LoadContexts:void unregisterLoadingCollectionXRef(org.hibernate.engine.CollectionKey)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.FilterQueryPlan getFilterQueryPlan(java.lang.String,java.lang.String,boolean,java.util.Map)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.HQLQueryPlan getHQLQueryPlan(java.lang.String,boolean,java.util.Map)"
        ]
    },
    "org.hibernate.context.ManagedSessionContext:void doCleanup()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session unbind(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.cfg.Mappings:void checkQueryExist(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addQuery(java.lang.String,org.hibernate.engine.NamedQueryDefinition)",
            "org.hibernate.cfg.Mappings:void addSQLQuery(java.lang.String,org.hibernate.engine.NamedSQLQueryDefinition)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void checkQueryExist(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:boolean hasFunction(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:boolean isJoin(java.lang.String)",
            "org.hibernate.util.FilterHelper:boolean isAffectedBy(java.util.Map)",
            "org.hibernate.util.FilterHelper:void render(java.lang.StringBuffer,java.lang.String,java.util.Map)",
            "org.hibernate.util.IdentityMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:boolean containsKey(java.lang.Object)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.hql.ast.tree.FromClause:void checkForDuplicateClassAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isEntryFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)"
        ]
    },
    "org.hibernate.dialect.function.SQLFunctionRegistry:boolean hasFunction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Template:boolean isFunctionOrKeyword(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaQueryTranslator:boolean isJoin(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.lang.String,java.lang.String[],boolean,int,org.hibernate.engine.CascadeStyle)"
        ]
    },
    "org.hibernate.util.FilterHelper:boolean isAffectedBy(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean isAffectedByEnabledFilters(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.util.FilterHelper:void render(java.lang.StringBuffer,java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String getManyToManyFilterFragment(java.lang.String,java.util.Map)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String filterFragment(java.lang.String,java.util.Map)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String filterFragment(java.lang.String,java.util.Map)",
            "org.hibernate.util.FilterHelper:java.lang.String render(java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.util.IdentityMap:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void checkQueryExist(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:boolean hasFunction(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:boolean isJoin(java.lang.String)",
            "org.hibernate.util.FilterHelper:boolean isAffectedBy(java.util.Map)",
            "org.hibernate.util.FilterHelper:void render(java.lang.StringBuffer,java.lang.String,java.util.Map)",
            "org.hibernate.util.IdentityMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:boolean containsKey(java.lang.Object)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.hql.ast.tree.FromClause:void checkForDuplicateClassAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isEntryFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)"
        ]
    },
    "org.hibernate.event.def.EventCache:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void checkQueryExist(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:boolean hasFunction(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:boolean isJoin(java.lang.String)",
            "org.hibernate.util.FilterHelper:boolean isAffectedBy(java.util.Map)",
            "org.hibernate.util.FilterHelper:void render(java.lang.StringBuffer,java.lang.String,java.util.Map)",
            "org.hibernate.util.IdentityMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:boolean containsKey(java.lang.Object)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.hql.ast.tree.FromClause:void checkForDuplicateClassAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isEntryFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:void checkForDuplicateClassAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement addFromElement(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PathExpressionParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)",
            "org.hibernate.hql.classic.GroupByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:org.hibernate.mapping.Table addDenormalizedTable(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,org.hibernate.mapping.Table)",
            "org.hibernate.cfg.Mappings:void checkQueryExist(java.lang.String)",
            "org.hibernate.cfg.Mappings:void addResultSetMapping(org.hibernate.engine.ResultSetMappingDefinition)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.dialect.function.SQLFunctionRegistry:boolean hasFunction(java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.List generateCustomReturns(boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processRootReturn(org.hibernate.engine.query.sql.NativeSQLQueryRootReturn)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:void processJoinReturn(org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:boolean isJoin(java.lang.String)",
            "org.hibernate.util.FilterHelper:boolean isAffectedBy(java.util.Map)",
            "org.hibernate.util.FilterHelper:void render(java.lang.StringBuffer,java.lang.String,java.util.Map)",
            "org.hibernate.util.IdentityMap:boolean containsKey(java.lang.Object)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.EventCache:boolean containsKey(java.lang.Object)",
            "org.hibernate.event.def.EventCache:void setOperatedOn(java.lang.Object,boolean)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.hql.ast.tree.FromClause:void checkForDuplicateClassAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsClassAlias(java.lang.String)",
            "org.hibernate.hql.classic.FromParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:boolean isName(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addJoin(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.CollectionProperties:boolean isCollectionProperty(java.lang.String)",
            "org.hibernate.hql.CollectionProperties:boolean isAnyCollectionProperty(java.lang.String)",
            "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isEntryFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:boolean containsEntity(org.hibernate.engine.EntityKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:boolean isEntryFor(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.engine.ForeignKeys:boolean isNotTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:boolean containsCollection(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean isConnectedToSession()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean contains(java.lang.Object)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl$1:boolean includeSubclasses(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.sql.OracleJoinFragment:void addLeftOuterJoinCondition(java.lang.String)",
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:boolean isFunctionOrKeyword(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean isSubclassEntityName(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized(java.lang.String)",
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.exception.SQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.exception.CacheSQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)",
            "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.bytecode.util.BasicClassFilter:boolean shouldInstrumentClass(java.lang.String)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$CustomFieldFilter:boolean shouldTransformFieldAccess(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:boolean isSequence(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:boolean affectsTable(java.lang.String)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.QuerySplitter:boolean isPossiblyClassName(java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.criterion.Example:boolean isPropertyIncluded(java.lang.Object,java.lang.String,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean contains(java.lang.Object)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl$1:boolean includeSubclasses(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Constraint:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:boolean containsColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl$1:boolean includeSubclasses(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.JoinSequence:boolean isIncluded(java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindUniqueKey(org.dom4j.Attribute,org.hibernate.mapping.Table,org.hibernate.mapping.Column,org.hibernate.cfg.Mappings)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()"
        ]
    },
    "org.hibernate.mapping.Constraint:boolean containsColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindIndex(org.dom4j.Attribute,org.hibernate.mapping.Table,org.hibernate.mapping.Column,org.hibernate.cfg.Mappings)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)"
        ]
    },
    "org.hibernate.mapping.Index:boolean containsColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean contains(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.sql.OracleJoinFragment:void addLeftOuterJoinCondition(java.lang.String)",
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:boolean isFunctionOrKeyword(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean isSubclassEntityName(java.lang.String)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.tuple.DynamicMapInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized(java.lang.String)",
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAdditionalProperty(java.lang.String,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.exception.SQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.exception.CacheSQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)",
            "org.hibernate.action.BulkOperationCleanupAction:boolean affectedEntity(java.util.Set,java.io.Serializable[])",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.bytecode.util.BasicClassFilter:boolean shouldInstrumentClass(java.lang.String)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$CustomFieldFilter:boolean shouldTransformFieldAccess(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:boolean isSequence(java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:boolean affectsTable(java.lang.String)",
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.QuerySplitter:boolean isPossiblyClassName(java.lang.String,java.lang.String)",
            "org.hibernate.engine.ActionQueue:boolean areTablesToUpdated(java.util.List,java.util.Set)",
            "org.hibernate.criterion.Example:boolean isPropertyIncluded(java.lang.Object,java.lang.String,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.sql.OracleJoinFragment:void addLeftOuterJoinCondition(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.OracleJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)"
        ]
    },
    "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)"
        ]
    },
    "org.hibernate.sql.Template:boolean isFunctionOrKeyword(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:java.lang.String renderOrderByStringTemplate(java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean isSubclassEntityName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.intercept.AbstractFieldInterceptor:boolean isInitialized(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.Hibernate:boolean isPropertyInitialized(java.lang.Object,java.lang.String)"
        ]
    },
    "org.hibernate.exception.SQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.BasicSQLExceptionConverter:org.hibernate.JDBCException convert(java.sql.SQLException)",
            "org.hibernate.exception.JDBCExceptionHelper:org.hibernate.JDBCException convert(org.hibernate.exception.SQLExceptionConverter,java.sql.SQLException,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.exception.CacheSQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.exception.JDBCExceptionHelper:org.hibernate.JDBCException convert(org.hibernate.exception.SQLExceptionConverter,java.sql.SQLException,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.lang.String format(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:void openParen()"
        ]
    },
    "org.hibernate.bytecode.util.BasicClassFilter:boolean shouldInstrumentClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.AbstractClassTransformerImpl:byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter$CustomFieldFilter:boolean shouldTransformFieldAccess(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.JavassistClassTransformer$1:boolean handleReadAccess(java.lang.String,java.lang.String)",
            "org.hibernate.bytecode.javassist.JavassistClassTransformer$1:boolean handleWriteAccess(java.lang.String,java.lang.String)",
            "org.hibernate.bytecode.cglib.CglibClassTransformer$1:boolean acceptRead(org.objectweb.asm.Type,java.lang.String)",
            "org.hibernate.bytecode.cglib.CglibClassTransformer$1:boolean acceptWrite(org.objectweb.asm.Type,java.lang.String)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:boolean isSequence(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.AssignmentSpecification:boolean affectsTable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.hql.QuerySplitter:boolean isPossiblyClassName(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.QuerySplitter:java.lang.String[] concreteQueries(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.criterion.Example:boolean isPropertyIncluded(java.lang.Object,java.lang.String,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void addComponentTypedValues(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,java.util.List,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendComponentCondition(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)"
        ]
    },
    "org.hibernate.collection.PersistentSet$SimpleAdd:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.collection.PersistentSet$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.sql.OracleJoinFragment:void <clinit>()",
            "org.hibernate.sql.Template:void <clinit>()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.dialect.Dialect:void registerKeyword(java.lang.String)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[])",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.exception.SQLStateConverter:void <clinit>()",
            "org.hibernate.exception.CacheSQLStateConverter:void <clinit>()",
            "org.hibernate.connection.ConnectionProviderFactory:void <clinit>()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:void <clinit>()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void collectClassNames(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$1:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void initSequences(java.sql.Connection,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addChild(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.HqlSqlWalker:void addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.hql.classic.PreprocessingParser:void <clinit>()",
            "org.hibernate.hql.classic.SelectParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.hql.QuerySplitter:void <clinit>()",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void addSynchronizedTable(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.criterion.Example:org.hibernate.criterion.Example excludeProperty(java.lang.String)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.collection.PersistentSet$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.sql.OracleJoinFragment:void <clinit>()",
            "org.hibernate.sql.Template:void <clinit>()",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.dialect.Dialect:void registerKeyword(java.lang.String)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.loader.Loader:java.util.Set[] transpose(java.util.List)",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[])",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.exception.SQLStateConverter:void <clinit>()",
            "org.hibernate.exception.CacheSQLStateConverter:void <clinit>()",
            "org.hibernate.connection.ConnectionProviderFactory:void <clinit>()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:void <clinit>()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.Queryable[])",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteTransientEntity(org.hibernate.event.EventSource,java.lang.Object,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.bytecode.util.BasicClassFilter:void <init>(java.lang.String[],java.lang.String[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void collectClassNames(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$1:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void initSequences(java.sql.Connection,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.ast.tree.FromClause:void registerFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addChild(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.HqlSqlWalker:void addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.hql.classic.PreprocessingParser:void <clinit>()",
            "org.hibernate.hql.classic.SelectParser:void <clinit>()",
            "org.hibernate.hql.classic.WhereParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.hql.QuerySplitter:void <clinit>()",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void addSynchronizedTable(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.criterion.Example:org.hibernate.criterion.Example excludeProperty(java.lang.String)"
        ]
    },
    "org.hibernate.sql.OracleJoinFragment:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.OracleJoinFragment:org.hibernate.sql.JoinFragment copy()",
            "org.hibernate.sql.OracleJoinFragment:void addLeftOuterJoinCondition(java.lang.String)",
            "org.hibernate.sql.OracleJoinFragment:void <clinit>()",
            "org.hibernate.dialect.TimesTenDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()",
            "org.hibernate.dialect.SAPDBDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()",
            "org.hibernate.dialect.Oracle8iDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()",
            "org.hibernate.dialect.OracleDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()"
        ]
    },
    "org.hibernate.sql.Template:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect)",
            "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:java.lang.String renderOrderByStringTemplate(java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:boolean isFunctionOrKeyword(java.lang.String,java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.sql.Template:void <clinit>()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.mapping.Formula:java.lang.String getTemplate(org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedEntityName(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedEntityClass(java.lang.Class)"
        ]
    },
    "org.hibernate.dialect.Dialect:void registerKeyword(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.SQLServerDialect:void <init>()",
            "org.hibernate.dialect.DB2Dialect:void <init>()",
            "org.hibernate.dialect.TeradataDialect:void <init>()"
        ]
    },
    "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[])",
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[],org.hibernate.type.AssociationType)"
        ]
    },
    "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()"
        ]
    },
    "org.hibernate.exception.SQLStateConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.BasicSQLExceptionConverter:void <clinit>()",
            "org.hibernate.dialect.Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.SQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.exception.SQLStateConverter:void <clinit>()"
        ]
    },
    "org.hibernate.exception.CacheSQLStateConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Cache71Dialect:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter()",
            "org.hibernate.exception.CacheSQLStateConverter:org.hibernate.JDBCException convert(java.sql.SQLException,java.lang.String,java.lang.String)",
            "org.hibernate.exception.CacheSQLStateConverter:void <clinit>()"
        ]
    },
    "org.hibernate.connection.ConnectionProviderFactory:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.connection.ConnectionProvider createConnectionProvider(java.util.Properties)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider()",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.ConnectionProviderFactory:void <clinit>()",
            "org.hibernate.connection.DriverManagerConnectionProvider:void configure(java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.ManagedProviderConnectionHelper:void prepare(boolean)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)",
            "org.hibernate.jdbc.util.FormatStyle:void <clinit>()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$000()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$100()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$200()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$300()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$400()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$500()",
            "org.hibernate.jdbc.util.BasicFormatterImpl:void <clinit>()"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void collectClassNames(java.io.File,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter$1:void handleEntry(java.util.zip.ZipEntry,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$ZipFileProcessor:void process(java.io.File)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void initSequences(java.sql.Connection,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void <init>(java.sql.Connection,org.hibernate.dialect.Dialect,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:void addChild(org.hibernate.hql.ast.tree.FromClause)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromClause:void setParentFromClause(org.hibernate.hql.ast.tree.FromClause)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void addQuerySpaces(java.io.Serializable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.MethodNode:void handleElements(org.hibernate.hql.ast.tree.FromReferenceNode,java.lang.String)",
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceCollection(org.hibernate.type.CollectionType,boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntityJoin(java.lang.String,org.hibernate.type.EntityType,boolean,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:void resolveIndex(antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement addFromElement()",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createElementJoin(org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollectionJoin(org.hibernate.engine.JoinSequence,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityAssociation(java.lang.String,java.lang.String,int)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST createIntoClause(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.classic.PreprocessingParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PreprocessingParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.PreprocessingParser:void <clinit>()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile()"
        ]
    },
    "org.hibernate.hql.classic.SelectParser:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:void <clinit>()",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addEntityToFetch(java.lang.String,java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void setCollectionToFetch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addQuerySpaces(java.io.Serializable[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addQuerySpaces(java.io.Serializable[])"
        ]
    },
    "org.hibernate.hql.QuerySplitter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.QuerySplitter:java.lang.String[] concreteQueries(java.lang.String,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.QuerySplitter:boolean isPossiblyClassName(java.lang.String,java.lang.String)",
            "org.hibernate.hql.QuerySplitter:void <clinit>()",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:void addSynchronizedTable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.criterion.Example:org.hibernate.criterion.Example excludeProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.util.IdentityMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean containsValue(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsProxy(java.lang.Object)",
            "org.hibernate.mapping.Table:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.util.IdentityMap:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.util.IdentityMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean containsValue(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsProxy(java.lang.Object)",
            "org.hibernate.mapping.Table:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.event.def.EventCache:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.util.IdentityMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean containsValue(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsProxy(java.lang.Object)",
            "org.hibernate.mapping.Table:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.util.IdentityMap:boolean containsValue(java.lang.Object)",
            "org.hibernate.event.def.EventCache:boolean containsValue(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean containsProxy(java.lang.Object)",
            "org.hibernate.mapping.Table:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:boolean containsProxy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.String getEntityName(java.lang.Object)",
            "org.hibernate.proxy.AbstractLazyInitializer:boolean isConnectedToSession()"
        ]
    },
    "org.hibernate.mapping.Table:boolean containsColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DenormalizedTable:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void read()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap headMap(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap tailMap(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap:java.lang.Object firstKey()",
            "org.hibernate.collection.PersistentSortedMap:java.lang.Object lastKey()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentList:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentList:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentList:java.lang.String toString()",
            "org.hibernate.collection.PersistentList:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int hashCode()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean contains(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentIdentifierBag:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentSet:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:java.lang.String toString()",
            "org.hibernate.collection.PersistentSet:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:int hashCode()",
            "org.hibernate.collection.PersistentMap:java.util.Set keySet()",
            "org.hibernate.collection.PersistentMap:java.util.Collection values()",
            "org.hibernate.collection.PersistentMap:java.util.Set entrySet()",
            "org.hibernate.collection.PersistentMap:java.lang.String toString()",
            "org.hibernate.collection.PersistentMap:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:int hashCode()",
            "org.hibernate.collection.PersistentBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.lang.Object get(int)",
            "org.hibernate.collection.PersistentBag:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentBag:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentBag:java.lang.String toString()",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet headSet(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet tailSet(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.lang.Object first()",
            "org.hibernate.collection.PersistentSortedSet:java.lang.Object last()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void write()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$MapEntryProxy:java.lang.Object setValue(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:void clear()",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void add(int,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object remove(int)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean remove(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void remove()",
            "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void set(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentBag:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void clear()",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(java.io.InputStream,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.net.URL)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.io.File)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.query.HQLQueryPlan:java.util.Iterator performIterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterateFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.ScrollableResults performScroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.engine.query.HQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addFile(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addDirectory(java.io.File)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addCacheableFile(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addCacheableFile(java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addXML(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addDocument(org.w3c.dom.Document)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addInputStream(java.io.InputStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addURL(java.net.URL)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addResource(java.lang.String,java.lang.ClassLoader)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addResource(java.lang.String)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addJar(java.io.File)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindVersioningProperty(org.hibernate.mapping.Table,org.dom4j.Element,org.hibernate.cfg.Mappings,java.lang.String,org.hibernate.mapping.RootClass,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindDiscriminatorProperty(org.hibernate.mapping.Table,org.hibernate.mapping.RootClass,org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$6:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder$CollectionType$7:org.hibernate.mapping.Collection create(org.dom4j.Element,java.lang.String,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.CollectionEntry:java.util.Collection getOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanExpr(antlr.collections.AST,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClauseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanOp(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void caseExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void fromTable(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void 'from'(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void sqlToken(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void conditionList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void quantified(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void selectColumn(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void addrExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void parameter(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderCollectionSelectFragment(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderCollectionSelectFragment(int,int)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderValueCollectionSelectFragment(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderValueCollectionSelectFragment(int,int)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderIdentifierSelect(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderIdentifierSelect(int,int)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementType:java.lang.String renderPropertySelect(int,int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderPropertySelect(int,int)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,org.hibernate.engine.ValueInclusion[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateGeneratedValuesSelectString(org.hibernate.engine.ValueInclusion[])"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSnapshotSelectString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragmentSansLeadingComma(java.lang.String,boolean[])"
        ]
    },
    "org.hibernate.loader.collection.CollectionJoinWalker:java.lang.StringBuffer whereString(java.lang.String,java.lang.String[],java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)"
        ]
    },
    "org.hibernate.transaction.CacheSynchronization:void afterCompletion(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void notifyLocalSynchsAfterTransactionCompletion(int)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void closeIfRequired()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void commit()",
            "org.hibernate.transaction.JDBCTransaction:void rollback()"
        ]
    },
    "org.hibernate.transaction.JTATransaction:void closeIfRequired()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JTATransaction:void commit()",
            "org.hibernate.transaction.JTATransaction:void rollback()"
        ]
    },
    "org.hibernate.id.enhanced.TableGenerator:java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.id.MultipleHiLoPerTableGenerator:java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)"
        ]
    },
    "org.hibernate.dialect.Dialect:java.lang.String getCastTypeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.MySQLDialect:java.lang.String getCastTypeName(int)"
        ]
    },
    "org.hibernate.dialect.TeradataDialect:java.lang.String getTypeName(int,int,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:java.lang.String[] sqlCreateStrings(org.hibernate.dialect.Dialect)",
            "org.hibernate.dialect.Dialect:java.lang.String getCastTypeName(int)",
            "org.hibernate.mapping.Column:java.lang.String getSqlType(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.dialect.PostgreSQLDialect:java.lang.String getSelectClauseNullString(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.Column:java.lang.String getSqlType(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader$Metadata:org.hibernate.type.Type getHibernateType(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.EntityMode guessEntityMode(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.criterion.Example:org.hibernate.EntityMode getEntityMode(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Set entrySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Set entrySet()",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Set entrySet()",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.event.def.EventCache:java.util.Set entrySet()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void prepareEntityFlushes(org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$CriterionEntry:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.NotExpression:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.CriteriaImpl$CriterionEntry:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.NotExpression:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toString()",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.LogicalExpression:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.CriteriaImpl$CriterionEntry:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.NotExpression:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toString()",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.impl.SessionFactoryObjectFactory:void addInstance(java.lang.String,java.lang.String,org.hibernate.SessionFactory,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.impl.SessionFactoryObjectFactory:void removeInstance(java.lang.String,java.lang.String,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void close()"
        ]
    },
    "org.hibernate.connection.DatasourceConnectionProvider:void configure(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:void <init>(org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter,java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:void <init>(org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter,java.util.Properties,org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$1)"
        ]
    },
    "org.hibernate.transaction.JNDITransactionManagerLookup:javax.transaction.TransactionManager getTransactionManager(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.transaction.TransactionManagerLookupFactory:javax.transaction.TransactionManager getTransactionManager(java.util.Properties)"
        ]
    },
    "org.hibernate.transaction.JTATransactionFactory:javax.naming.InitialContext resolveInitialContext(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JTATransactionFactory:void configure(java.util.Properties)"
        ]
    },
    "org.hibernate.cache.QueryKey:void <init>(java.lang.String,org.hibernate.type.Type[],java.lang.Object[],java.util.Map,java.lang.Integer,java.lang.Integer,java.util.Set,org.hibernate.EntityMode,org.hibernate.transform.ResultTransformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cache.QueryKey:void readObject(java.io.ObjectInputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.DateType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.type.DateType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AdaptedImmutableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.SerializableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.engine.TypedValue:int hashCode()"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.type.DateType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AdaptedImmutableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.SerializableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.engine.TypedValue:int hashCode()"
        ]
    },
    "org.hibernate.type.SerializableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.type.DateType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AdaptedImmutableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.SerializableType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.engine.TypedValue:int hashCode()"
        ]
    },
    "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.CacheKey:void <init>(java.io.Serializable,org.hibernate.type.Type,java.lang.String,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:int generateHashCode()",
            "org.hibernate.engine.EntityUniqueKey:int generateHashCode(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.EntityKey:int generateHashCode()"
        ]
    },
    "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.engine.TypedValue:int hashCode()"
        ]
    },
    "org.hibernate.engine.TypedValue:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup:java.lang.Object getTransactionIdentifier(javax.transaction.Transaction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.connection.DriverManagerConnectionProvider:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void execute()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:void afterTransactionCompletion(boolean,org.hibernate.Transaction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:void connectionCleanedUp()",
            "org.hibernate.transaction.CacheSynchronization:void afterCompletion(int)",
            "org.hibernate.transaction.JDBCTransaction:void commit()",
            "org.hibernate.transaction.JDBCTransaction:void rollback()",
            "org.hibernate.transaction.JTATransaction:void afterCommitRollback()"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:void afterNontransactionalQuery(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void afterOperation(boolean)",
            "org.hibernate.impl.SessionImpl:void afterOperation(boolean)"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:java.sql.Connection close()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void managedClose()",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:java.sql.Connection manualDisconnect()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.sql.Connection disconnect()"
        ]
    },
    "org.hibernate.engine.ActionQueue:void afterTransactionCompletion(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void afterTransactionCompletion(boolean,org.hibernate.Transaction)"
        ]
    },
    "org.hibernate.bytecode.javassist.FieldTransformer:void transform(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.bytecode.javassist.JavassistClassTransformer:byte[] doTransform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.AbstractClassTransformerImpl:byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExportTask:void execute()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void evaluateAssignment(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void assignment(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getDisplayText()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectStatement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void newValue(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void assignment(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void exprOrSubquery(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunctionOrSubselect(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void exprOrSubquery(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void inRhs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.impl.AbstractScrollableResults:void afterScrollOperation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.ScrollableResultsImpl:void prepareCurrentRow(boolean)",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean next()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean previous()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean scroll(int)",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean last()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean first()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:void afterLast()"
        ]
    },
    "org.hibernate.engine.ParameterBinder:int bindQueryParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.engine.ActionQueue:void sortActions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEntities(org.hibernate.event.FlushEvent)"
        ]
    },
    "org.hibernate.mapping.OneToOne:void createForeignKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.mapping.Map:void createAllKeys()",
            "org.hibernate.mapping.Collection:void createForeignKeys()"
        ]
    },
    "org.hibernate.mapping.Subclass:void createForeignKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Collection:void createForeignKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:void createAllKeys()"
        ]
    },
    "org.hibernate.mapping.Join:void createForeignKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Map:void createAllKeys()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:void doSecondPass(java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Property:boolean isOptional()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getReferencedProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getReferencedPropertyType(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getRecursiveProperty(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.Property:boolean isValid(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.ToOne:boolean isValid(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.UniqueKey:java.lang.String sqlDropString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.custom.CustomLoader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.List list(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:java.util.List performList(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean scroll(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean first()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean last()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean next()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean previous()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean setRowNumber(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:boolean next()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean scroll(int)",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean last()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean first()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:void afterLast()"
        ]
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:boolean previous()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean scroll(int)"
        ]
    },
    "org.hibernate.engine.CascadingAction$1:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$8:java.util.Iterator getCascadableChildrenIterator(org.hibernate.event.EventSource,org.hibernate.type.CollectionType,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void setClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExprList(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasedSelectExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constructor(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constructor(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aggregateExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void functionCall(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void count(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElementList(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void groupClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderExprs(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderExprs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void functionCall(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void arithmeticExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void logicalExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void inRhs(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void caseExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void arithmeticExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlSqlWalker analyze(org.hibernate.hql.ast.HqlParser,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void beginFunctionTemplate(antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void methodCall(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.BasicExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void generate(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void handleWithFragment(org.hibernate.hql.ast.tree.FromElement,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void createFromJoinElement(antlr.collections.AST,antlr.collections.AST,int,antlr.collections.AST,antlr.collections.AST,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.AssignmentSpecification:java.lang.String getSqlAssignmentFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClauseExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void filters(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void thetaJoins(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void arguments(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void methodCall(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void selectClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.SQLQuery createSQLQuery(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.LiteralProcessor:void lookupConstant(org.hibernate.hql.ast.tree.DotNode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.JavaConstantNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElement(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndex(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeElementToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.NullableType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeKey(java.sql.PreparedStatement,java.io.Serializable,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIndexToWhere(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int writeIdentifier(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int dehydrate(java.io.Serializable,java.lang.Object[],java.lang.Object,boolean[],boolean[][],int,java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.VersionTypeSeedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CurrencyType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.TimeZoneType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.NullableType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.Versioning:java.lang.Object increment(java.lang.Object,org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void update(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object getNextVersion(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.event.def.ReattachVisitor:void removeCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.util.ComparableComparator:int compare(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.ReadWriteCache$Lock:boolean isPuttable(long,java.lang.Object,java.util.Comparator)",
            "org.hibernate.cache.ReadWriteCache$Item:boolean isPuttable(long,java.lang.Object,java.util.Comparator)",
            "org.hibernate.type.CalendarDateType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.CalendarType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.ReplicationMode$4:boolean shouldOverwriteCurrentVersion(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.type.VersionType)"
        ]
    },
    "org.hibernate.type.AbstractType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void setParent(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,int,java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void setParent(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,int,java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void setParent(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,int,java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:java.lang.Object transformTuple(java.lang.Object[],java.lang.String[])",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void setParent(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setIdentifier(java.lang.Object,java.io.Serializable)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValues(java.lang.Object,java.lang.Object[])",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,int,java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:boolean continuePathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void addToCurrentJoin(org.hibernate.hql.classic.PathExpressionParser$CollectionElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:boolean continuePathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.type.Type getTypeUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Distinct:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(java.lang.String,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:java.lang.String[] getColumnAliases(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String[] getColumnsUsingProjection(org.hibernate.Criteria,java.lang.String)",
            "org.hibernate.criterion.Distinct:java.lang.String[] getColumnAliases(java.lang.String,int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(java.lang.String,int)"
        ]
    },
    "org.hibernate.criterion.PropertyExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.InExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.NullExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()"
        ]
    },
    "org.hibernate.criterion.IlikeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.BetweenExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.LikeExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.NotNullExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.criterion.NotExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LogicalExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void appendPropertyCondition(java.lang.String,java.lang.Object,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery,java.lang.StringBuffer)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.loader.collection.CollectionLoader:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.SubselectCollectionLoader:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.collection.SubselectOneToManyLoader:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.Configuration:void setCacheConcurrencyStrategy(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration setCacheConcurrencyStrategy(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$TextGetter:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object getParent(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getVersion(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.IdentifierValue getUnsavedIdentifierValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.Type,java.lang.reflect.Constructor)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)",
            "org.hibernate.property.Dom4jAccessor$Dom4jGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$AttributeGetter:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object getParent(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getVersion(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.IdentifierValue getUnsavedIdentifierValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.Type,java.lang.reflect.Constructor)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)",
            "org.hibernate.property.Dom4jAccessor$Dom4jGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$ElementGetter:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object getParent(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getVersion(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.IdentifierValue getUnsavedIdentifierValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.Type,java.lang.reflect.Constructor)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)",
            "org.hibernate.property.Dom4jAccessor$Dom4jGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object getParent(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getVersion(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object getPropertyValue(java.lang.Object,int)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.IdentifierValue getUnsavedIdentifierValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.Type,java.lang.reflect.Constructor)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)",
            "org.hibernate.property.Dom4jAccessor$Dom4jGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.MetaType:int getColumnSpan(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:int getColumnSpan(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.BinaryLogicOperatorNode:void mutateRowValueConstructorSyntaxesIfNecessary(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.AbstractNullnessCheckNode:void initialize()",
            "org.hibernate.hql.NameGenerator:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:int getColumnSpan(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:int getColumnSpan(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.BinaryLogicOperatorNode:void mutateRowValueConstructorSyntaxesIfNecessary(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.AbstractNullnessCheckNode:void initialize()",
            "org.hibernate.hql.NameGenerator:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.ComponentType:int getColumnSpan(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initPropertyPaths(java.lang.String,org.hibernate.type.Type,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractPropertyMapping:void initComponentPropertyPaths(java.lang.String,org.hibernate.type.AbstractComponentType,java.lang.String[],java.lang.String[],org.hibernate.engine.Mapping)",
            "org.hibernate.param.NamedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.PositionalParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.param.CollectionFilterKeyParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:int bindFilterParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.type.SpecialOneToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int getColumnSpan(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.util.SessionFactoryHelper:int getColumnSpan(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processDynamicFilterParameters(java.lang.String,org.hibernate.hql.ast.tree.ParameterContainer,org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.hql.ast.tree.BinaryLogicOperatorNode:void mutateRowValueConstructorSyntaxesIfNecessary(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.AbstractNullnessCheckNode:void initialize()",
            "org.hibernate.hql.NameGenerator:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[],org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindPositionalParameters(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ParameterBinder:int bindPositionalParameters(java.sql.PreparedStatement,java.lang.Object[],org.hibernate.type.Type[],int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:int[] findModified(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:int getColumnSpan(org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.ParameterNode:java.lang.String getRenderText(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.BinaryLogicOperatorNode:void mutateRowValueConstructorSyntaxesIfNecessary(org.hibernate.type.Type,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.AbstractNullnessCheckNode:void initialize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.NameGenerator:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[],org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[])",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentityGenerator$BasicDelegate:java.lang.String getSelectSQL()"
        ]
    },
    "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type findFunctionReturnType(java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.type.Type getDataType()",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type findFunctionReturnType(java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.type.Type getDataType()",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type findFunctionReturnType(java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:org.hibernate.type.Type getDataType()",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.SelectParser:org.hibernate.type.Type aggregateType(java.util.List,org.hibernate.type.Type,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getIdentitySelectString()",
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.ClassicAvgFunction:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$3:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.dialect.Dialect$2:org.hibernate.type.Type getReturnType(org.hibernate.type.Type,org.hibernate.engine.Mapping)",
            "org.hibernate.type.SpecialOneToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.MetaType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.AnyType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.CompositeCustomType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.type.ManyToOneType:int[] sqlTypes(org.hibernate.engine.Mapping)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.criterion.SimpleExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Order:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.type.ManyToOneType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateUpdateString(boolean[],int,java.lang.Object[],boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String[] generateSQLDeletStrings(java.lang.Object[])",
            "org.hibernate.type.CompositeCustomType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)",
            "org.hibernate.type.ComponentType:boolean[] toColumnNullness(java.lang.Object,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.TypeFactory:int[] findModified(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findModified(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedSQLQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.hql.ast.tree.IntoClause:void initializeColumns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IntoClause:void initialize(org.hibernate.persister.entity.Queryable)"
        ]
    },
    "org.hibernate.persister.entity.JoinedSubclassEntityPersister:org.hibernate.persister.entity.Queryable$Declarer getSubclassPropertyDeclarer(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:void handlePropertyBeingDereferenced(org.hibernate.type.Type,java.lang.String)"
        ]
    },
    "org.hibernate.engine.JoinHelper:java.lang.String[] getLHSColumnNames(org.hibernate.type.AssociationType,int,org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)"
        ]
    },
    "org.hibernate.criterion.CountProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.PropertyProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.PropertyProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getGroupBy()",
            "org.hibernate.criterion.Distinct:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toGroupSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.PropertySubqueryExpression:java.lang.String toLeftSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.SubqueryExpression:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AggregateProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getSelect()",
            "org.hibernate.criterion.Distinct:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.ProjectionList:java.lang.String toSqlString(org.hibernate.Criteria,int,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.hql.ast.tree.IndexNode:void prepareForDot(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityAssociation(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollection(org.hibernate.persister.collection.QueryableCollection,java.lang.String,int,boolean,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String[] toColumns(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.JoinWalker:void walkEntityTree(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.loader.JoinWalker:void walkEntityTree(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String)",
            "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String filterFragment(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.entity.EntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.CascadeEntityJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String getWhereFragment()",
            "org.hibernate.type.CollectionType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.hql.ast.util.SyntheticAndFactory:void addDiscriminatorWhereFragment(org.hibernate.hql.ast.tree.RestrictableStatement,org.hibernate.persister.entity.Queryable,java.util.Map,java.lang.String)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String filterFragment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String filterFragment(java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type determineType(int,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void evict(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CascadingAction$4:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.type.TypeFactory:void beforeAssemble(java.io.Serializable[],org.hibernate.type.Type[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.StandardQueryCache:java.util.List get(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],boolean,java.util.Set,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void addAssociationToJoinTreeIfNecessary(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:void walkCollectionTree(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkEntityAssociationTree(org.hibernate.type.AssociationType,org.hibernate.persister.entity.OuterJoinLoadable,int,java.lang.String,java.lang.String,boolean,int)",
            "org.hibernate.loader.JoinWalker:void walkComponentTree(org.hibernate.type.AbstractComponentType,int,int,org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,java.lang.String,int)",
            "org.hibernate.loader.JoinWalker:void walkCompositeElementTree(org.hibernate.type.AbstractComponentType,java.lang.String[],org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.loader.JoinWalker:boolean isJoinable(int,java.util.Set,java.lang.String,java.lang.String[],org.hibernate.type.AssociationType,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence addJoin(org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.engine.JoinSequence createJoinSequence(boolean,org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createManyToMany(java.lang.String,java.lang.String,java.lang.String,org.hibernate.persister.entity.Queryable,org.hibernate.type.EntityType,int)",
            "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST createFromFilterElement(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.classic.PathExpressionParser:void addJoin(java.lang.String,org.hibernate.type.AssociationType)",
            "org.hibernate.hql.classic.PathExpressionParser:void addJoin(java.lang.String,org.hibernate.type.AssociationType,java.lang.String[])",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFromAssociation(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:boolean isCached(org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:boolean isCached(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.engine.CollectionKey:void <init>(java.lang.String,java.io.Serializable,org.hibernate.type.Type,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionKey:void <init>(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.engine.CollectionKey:org.hibernate.engine.CollectionKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.EntityKey:void <init>(java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object internalLoad(java.lang.String,java.io.Serializable,boolean,boolean)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getOptionalObjectKey(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.EntityIdentityInsertAction:org.hibernate.engine.EntityKey generateDelayedEntityKey()",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getCollectionOwner(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.EntityEntry:boolean isNullifiable(boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.EntityKey:void <init>(java.io.Serializable,java.lang.String,java.lang.String,org.hibernate.type.Type,boolean,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.EntityKey:org.hibernate.engine.EntityKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.AssociationKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.EntityUniqueKey:org.hibernate.engine.EntityUniqueKey deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.CollectionEntry:void dirty(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AbstractType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.TypeFactory:int[] findModified(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findDirty(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement addFromElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement addFromElement(java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence,org.hibernate.type.EntityType,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence,boolean,boolean,org.hibernate.type.EntityType)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityAssociation(java.lang.String,java.lang.String,int)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createManyToMany(java.lang.String,java.lang.String,java.lang.String,org.hibernate.persister.entity.Queryable,org.hibernate.type.EntityType,int)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:antlr.collections.AST createIntoClause(java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void intoClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.proxy.pojo.javassist.JavassistLazyInitializer:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.proxy.pojo.cglib.CGLIBLazyInitializer:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultRefreshEventListener:void evictCachedCollections(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.WrapVisitor:void processValue(int,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:void processValues(java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.event.def.AbstractVisitor:void processEntityPropertyValues(java.lang.Object[],org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.event.def.AbstractVisitor:void processValue(int,java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:void processValues(java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.event.def.AbstractVisitor:void processEntityPropertyValues(java.lang.Object[],org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CollectionCacheEntry:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.type.TypeFactory:java.io.Serializable[] disassemble(java.lang.Object[],org.hibernate.type.Type[],boolean[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CacheEntry:void <init>(java.lang.Object[],org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CollectionType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentArrayHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean needsUpdating(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getLoadedCollectionOwnerIdOrNull(org.hibernate.engine.CollectionEntry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getLoadedCollectionOwnerOrNull(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getLoadedCollectionOwnerIdOrNull(org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.AssociationType getElementAssociationType(org.hibernate.type.CollectionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createElementJoin(org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createManyToMany(java.lang.String,java.lang.String,java.lang.String,org.hibernate.persister.entity.Queryable,org.hibernate.type.EntityType,int)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:org.hibernate.engine.CollectionEntry deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.tree.ConstructorNode:void prepare()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.type.Type findFunctionReturnType(java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.MethodNode:void dialectFunction(antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.AggregateNode:org.hibernate.type.Type getDataType()",
            "org.hibernate.hql.ast.tree.CountNode:org.hibernate.type.Type getDataType()"
        ]
    },
    "org.hibernate.hql.ast.tree.MethodNode:void resolve(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.EntityEntry:java.lang.Object getLoadedValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.ReattachVisitor:java.io.Serializable extractCollectionKeyFromOwner(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isFoundInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean implementsLifecycle(org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean implementsValidatable(org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Class getConcreteProxyClass(org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValues(java.lang.Object,java.lang.Object[],org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValue(java.lang.Object,int,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getPropertyValue(java.lang.Object,java.lang.String,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void setIdentifier(java.lang.Object,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getVersion(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object instantiate(java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean isInstance(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean hasUninitializedLazyProperties(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void resetIdentifier(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.persister.entity.EntityPersister getSubclassEntityPersister(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.EntityMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void setPropertyValue(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.ComponentType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.type.AbstractType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.CacheKey:boolean equals(java.lang.Object)",
            "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkNaturalId(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityEntry,java.lang.Object[],java.lang.Object[],org.hibernate.EntityMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.AbstractType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.engine.TypedValue:boolean equals(java.lang.Object)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityUniqueKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object[] nullSafeGetValues(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:java.util.Iterator performIterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.ScrollableResults performScroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.custom.sql.SQLCustomQuery$ParserContext:java.util.Map getPropertyResultsMapByAlias(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveCollectionProperties(java.lang.String,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String resolveProperties(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.NativeSQLQueryPlan getNativeSQLQueryPlan(org.hibernate.engine.query.sql.NativeSQLQuerySpecification)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.engine.query.NativeSQLQueryPlan getNativeSQLQueryPlan(org.hibernate.engine.query.sql.NativeSQLQuerySpecification)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()"
        ]
    },
    "org.hibernate.engine.query.ParamLocationRecognizer:org.hibernate.engine.query.ParamLocationRecognizer parseLocations(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)"
        ]
    },
    "org.hibernate.loader.BasicLoader:void postInstantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.CollectionElementLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.entity.CascadeEntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.CascadingAction,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.EntityLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String[],org.hibernate.type.Type,int,org.hibernate.LockMode,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaLoader:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map)",
            "org.hibernate.loader.hql.QueryLoader:void <init>(org.hibernate.hql.ast.QueryTranslatorImpl,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void compile()"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean putFromLoad(java.lang.Object,java.lang.Object,long,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.CacheKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getValues(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.EntityMode,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AbstractType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean isVersionChanged(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object)",
            "org.hibernate.type.AbstractType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isSame(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.AbstractType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsPersistent(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.type.ComponentType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:boolean isEqual(java.lang.Object,java.lang.Object,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.CollectionKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.EntityKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.Collections:void prepareCollectionForUpdate(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,org.hibernate.EntityMode,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.engine.EntityUniqueKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.custom.CustomLoader:void autoDiscoverTypes(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.type.BigDecimalType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.BigIntegerType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.BlobType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.BlobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.BooleanType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.ByteType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.TextType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.AbstractCharArrayType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.ClobType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ClobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.CalendarDateType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.DateType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.DoubleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.FloatType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.IntegerType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.NumericBooleanType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ColumnMetadata:void <init>(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addColumn(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.type.LongType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.ShortType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.CharBooleanType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.StringType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.CharacterType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.IndexMetadata:void <init>(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.ForeignKeyMetadata:void <init>(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addForeignKey(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.type.TimeType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.type.TimestampType:java.lang.Object get(java.sql.ResultSet,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.NullableType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.LocaleType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object get(java.sql.ResultSet,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],boolean[],java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister$3:void bindValues(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.hql.ast.tree.JavaConstantNode:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.ASTPrinter:void showAst(java.util.ArrayList,java.io.PrintWriter,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTPrinter:void showAst(antlr.collections.AST,java.io.PrintWriter)",
            "org.hibernate.hql.ast.util.ASTPrinter:void showAst(java.util.ArrayList,java.io.PrintWriter,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void orderDirection(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void selectAtom(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.SqlGeneratorBase:void constant(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void whereClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void intoClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertStatement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:java.lang.String path(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void intoClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:java.lang.String path(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constructor(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void pathAsIdent(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertablePropertySpec(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void intoClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void logicalExpr(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void whereClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void groupClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void logicalExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void withClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void caseExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void identifier(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:java.lang.String path(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasedSelectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void parameter(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyName(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasRef(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void count(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void literal(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constant(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElementList(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromClause(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:int joinType(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void joinElement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void pathAsIdent(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void functionCall(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void withClause(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void handleWithFragment(org.hibernate.hql.ast.tree.FromElement,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyName(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)"
        ]
    },
    "org.hibernate.hql.antlr.HqlSqlBaseWalker:void numericInteger(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean isUpdateNecessary(org.hibernate.event.FlushEntityEvent,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.collection.PersistentMapElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.collection.PersistentListElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)"
        ]
    },
    "org.hibernate.event.def.AbstractVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.ReattachVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void delete(java.lang.String,java.lang.Object,boolean,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.IteratorImpl:void remove()",
            "org.hibernate.engine.CascadingAction$1:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void fireDelete(org.hibernate.event.DeleteEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void delete(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void delete(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void saveOrUpdate(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void saveOrUpdate(java.lang.Object)",
            "org.hibernate.engine.CascadingAction$5:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.io.Serializable save(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.io.Serializable save(java.lang.Object)",
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void save(java.lang.String,java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void save(java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void update(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void update(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void update(java.lang.String,java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void update(java.lang.Object,java.io.Serializable)"
        ]
    },
    "org.hibernate.action.CollectionRecreateAction:void preRecreate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRecreateAction:void execute()"
        ]
    },
    "org.hibernate.action.CollectionRemoveAction:void postRemove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.action.CollectionRemoveAction:void preRemove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRemoveAction:void execute()"
        ]
    },
    "org.hibernate.action.CollectionRecreateAction:void postRecreate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionRecreateAction:void execute()"
        ]
    },
    "org.hibernate.event.PreCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void preUpdate()"
        ]
    },
    "org.hibernate.event.PostCollectionUpdateEvent:void <init>(org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void postUpdate()"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.ForeignKeys$Nullifier:void nullifyTransientReferences(java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.cfg.Mappings:void addUniquePropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addPropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.cfg.Configuration:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.collection.PersistentBag$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentList$SimpleAdd:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:void queueOperation(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormula(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumn(java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumns(java.lang.String[])",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addWhereToken(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String)",
            "org.hibernate.sql.InFragment:org.hibernate.sql.InFragment addValue(java.lang.Object)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.Criteria,org.hibernate.criterion.Criterion)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String,org.hibernate.type.Type)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolver(org.hibernate.dialect.resolver.DialectResolver)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)",
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.util.XMLHelper$ErrorLogger:void error(org.xml.sax.SAXParseException)",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.transaction.JDBCTransaction:void registerSynchronization(javax.transaction.Synchronization)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:void addColumn(org.hibernate.tool.hbm2ddl.ColumnMetadata)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:void visit(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.FromElement:void addDestination(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromElement:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SqlFragment:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addImpliedFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(antlr.RecognitionException)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportWarning(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectClass(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectScalar(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendWhereToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendHavingToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendOrderByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendGroupByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectTokens(java.lang.String[])",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.query.ParamLocationRecognizer:void ordinalParameter(int)",
            "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void add(int)",
            "org.hibernate.engine.StatefulPersistenceContext:void addNonLazyCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence addJoin(org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])",
            "org.hibernate.engine.ResultSetMappingDefinition:void addQueryReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void addToBatch(java.lang.Integer,org.hibernate.action.EntityInsertAction)",
            "org.hibernate.mapping.Table:void addCheckConstraint(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:void addFormula(org.hibernate.mapping.Formula)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.MetaAttribute:void addValue(java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection)",
            "org.hibernate.criterion.Example:void addPropertyTypedValue(java.lang.Object,org.hibernate.type.Type,java.util.List)",
            "org.hibernate.criterion.Junction:org.hibernate.criterion.Junction add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.cfg.Mappings:void addUniquePropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addPropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.cfg.Configuration:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.collection.PersistentBag$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentList$SimpleAdd:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:void queueOperation(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormula(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumn(java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumns(java.lang.String[])",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addWhereToken(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String)",
            "org.hibernate.sql.InFragment:org.hibernate.sql.InFragment addValue(java.lang.Object)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.Criteria,org.hibernate.criterion.Criterion)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String,org.hibernate.type.Type)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolver(org.hibernate.dialect.resolver.DialectResolver)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)",
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.util.XMLHelper$ErrorLogger:void error(org.xml.sax.SAXParseException)",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.transaction.JDBCTransaction:void registerSynchronization(javax.transaction.Synchronization)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:void addColumn(org.hibernate.tool.hbm2ddl.ColumnMetadata)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:void visit(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.FromElement:void addDestination(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromElement:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SqlFragment:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addImpliedFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(antlr.RecognitionException)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportWarning(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectClass(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectScalar(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendWhereToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendHavingToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendOrderByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendGroupByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectTokens(java.lang.String[])",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.query.ParamLocationRecognizer:void ordinalParameter(int)",
            "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void add(int)",
            "org.hibernate.engine.StatefulPersistenceContext:void addNonLazyCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence addJoin(org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])",
            "org.hibernate.engine.ResultSetMappingDefinition:void addQueryReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void addToBatch(java.lang.Integer,org.hibernate.action.EntityInsertAction)",
            "org.hibernate.mapping.Table:void addCheckConstraint(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:void addFormula(org.hibernate.mapping.Formula)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.MetaAttribute:void addValue(java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection)",
            "org.hibernate.criterion.Example:void addPropertyTypedValue(java.lang.Object,org.hibernate.type.Type,java.util.List)",
            "org.hibernate.criterion.Junction:org.hibernate.criterion.Junction add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentArrayHolder:java.lang.Object getSnapshotElement(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object getSnapshotElement(java.lang.Object,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable getUpdateId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable getUpdateId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.type.EntityType:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.event.def.WrapVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.AbstractVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultEvictEventListener:void doEvict(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.engine.EntityEntry:void setReadOnly(boolean,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void setReadOnly(java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Settings buildSettings(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.SessionFactory buildSessionFactory()"
        ]
    },
    "org.hibernate.cfg.Configuration:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.dialect.Oracle9iDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.Oracle10gDialect:void <init>()"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.engine.query.sql.NativeSQLQueryRootReturn:void <init>(java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.dialect.MySQL5InnoDBDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.SimpleValue:boolean isIdentityColumn(org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:void <init>(java.sql.Connection,org.hibernate.dialect.Dialect)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.tool.hbm2ddl.SchemaExport getSchemaExport(org.hibernate.cfg.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void execute()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.tool.hbm2ddl.SchemaValidator getSchemaValidator(org.hibernate.cfg.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void execute()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.tool.hbm2ddl.SchemaUpdate getSchemaUpdate(org.hibernate.cfg.Configuration)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void execute()"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object instantiate(java.io.Serializable,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object instantiate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object instantiate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean update(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:boolean insert(java.lang.Object,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityInsertAction:void execute()"
        ]
    },
    "org.hibernate.engine.CascadingAction$3:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void refresh(java.lang.Object,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.component.Dom4jComponentTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.Dom4jComponentTuplizer:org.hibernate.property.Getter buildGetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)",
            "org.hibernate.tuple.component.Dom4jComponentTuplizer:org.hibernate.property.Setter buildSetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.cache.impl.CacheDataDescriptionImpl:org.hibernate.cache.impl.CacheDataDescriptionImpl decode(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.cache.impl.CacheDataDescriptionImpl:org.hibernate.cache.impl.CacheDataDescriptionImpl decode(org.hibernate.mapping.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.mapping.Array:org.hibernate.type.CollectionType getDefaultCollectionType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:org.hibernate.type.CollectionType getCollectionType()"
        ]
    },
    "org.hibernate.mapping.Set:void validate(org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void validate()"
        ]
    },
    "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable getUpdateId(java.lang.Object,org.hibernate.persister.entity.EntityPersister,java.io.Serializable,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void resetIdentifier(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)"
        ]
    },
    "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.io.Serializable[],java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(java.sql.Connection,org.hibernate.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(java.sql.Connection)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(org.hibernate.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession()"
        ]
    },
    "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session buildOrObtainSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session buildOrObtainSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean handleInterception(org.hibernate.event.FlushEntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:void afterInitialize(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.action.EntityIdentityInsertAction:void <init>(java.lang.Object[],java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:java.lang.Object[] createDeletedState(org.hibernate.persister.entity.EntityPersister,java.lang.Object[],org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)"
        ]
    },
    "org.hibernate.type.NullableType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ClobType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.MetaType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.BlobType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.AnyType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CustomType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object semiResolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractScrollableResults:java.math.BigDecimal getBigDecimal(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.math.BigInteger getBigInteger(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:byte[] getBinary(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.String getText(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Boolean getBoolean(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Byte getByte(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Character getCharacter(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Double getDouble(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Float getFloat(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Integer getInteger(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Long getLong(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.Short getShort(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.lang.String getString(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.util.Locale getLocale(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.sql.Blob getBlob(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.sql.Clob getClob(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.util.Date getDate(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.util.Calendar getCalendar(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.AbstractScrollableResults:java.util.TimeZone getTimeZone(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.id.IdentifierGeneratorFactory:java.io.Serializable getGeneratedIdentity(java.sql.ResultSet,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:java.io.Serializable executeAndExtract(java.sql.PreparedStatement)",
            "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:java.io.Serializable executeAndExtract(java.sql.PreparedStatement)",
            "org.hibernate.id.IdentityGenerator$BasicDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.id.SequenceIdentityGenerator$Delegate:java.io.Serializable executeAndExtract(java.sql.PreparedStatement)"
        ]
    },
    "org.hibernate.id.SequenceGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.id.SequenceHiLoGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.IntoClause:void validateTypes(org.hibernate.hql.ast.tree.SelectClause)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:void initialize()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type resolveDataType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type getDataType()"
        ]
    },
    "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type resolveDateTimeArithmeticResultType(org.hibernate.type.Type,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type resolveDataType()"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.loader.collection.BasicCollectionJoinWalker:int getJoinType(org.hibernate.type.AssociationType,org.hibernate.FetchMode,java.lang.String,java.util.Set,java.lang.String,java.lang.String[],boolean,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.IteratorImpl:void <init>(java.sql.ResultSet,java.sql.PreparedStatement,org.hibernate.event.EventSource,org.hibernate.type.Type[],java.lang.String[][],org.hibernate.hql.HolderInstantiator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:java.lang.String bestGuessEntityName(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object)",
            "org.hibernate.impl.StatelessSessionImpl:void refresh(java.lang.Object,org.hibernate.LockMode)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.type.AnyType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.AnyType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:java.io.Serializable getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AnyType:boolean isModified(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.proxy.map.MapLazyInitializer:java.util.Map getMap()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.map.MapProxy:int size()",
            "org.hibernate.proxy.map.MapProxy:void clear()",
            "org.hibernate.proxy.map.MapProxy:boolean isEmpty()",
            "org.hibernate.proxy.map.MapProxy:boolean containsKey(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:boolean containsValue(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:java.util.Collection values()",
            "org.hibernate.proxy.map.MapProxy:void putAll(java.util.Map)",
            "org.hibernate.proxy.map.MapProxy:java.util.Set entrySet()",
            "org.hibernate.proxy.map.MapProxy:java.util.Set keySet()",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object get(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.proxy.map.MapProxy:java.lang.Object put(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jLazyInitializer:org.dom4j.Element getElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element target()"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object unproxy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.Hibernate:java.lang.Class getClass(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.Hibernate:boolean isPropertyInitialized(java.lang.Object,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.DefaultMergeEventListener:void cascadeOnMerge(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsPersistent(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.event.def.DefaultLockEventListener:void cascadeOnLock(org.hibernate.event.LockEvent,org.hibernate.persister.entity.EntityPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultReplicateEventListener:void cascadeAfterReplicate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:void cascadeBeforeSave(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:void cascadeAfterSave(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.event.def.AbstractFlushingEventListener:void cascadeOnFlush(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareEntityFlushes(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultEvictEventListener:void doEvict(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void cascadeOnUpdate(org.hibernate.event.SaveOrUpdateEvent,org.hibernate.persister.entity.EntityPersister,java.lang.Object)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object merge(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object saveOrUpdateCopy(java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.CascadingAction$6:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.engine.CascadingAction$7:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void persist(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void persistOnFlush(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:void updateCurrentIterator()",
            "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentElementHolder:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:void updateCurrentIterator()",
            "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.JoinedIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:void updateCurrentIterator()",
            "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.JoinedIterator:void updateCurrentIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:java.lang.Object next()",
            "org.hibernate.util.JoinedIterator:void remove()"
        ]
    },
    "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:void updateCurrentIterator()",
            "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.LazyIterator:boolean hasNext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.pretty.Printer:void toString(java.util.Iterator,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:boolean hasNext()",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.QuerySelect:void appendTokens(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void internalInitSubclassPropertyAliasesMap(java.lang.String,java.util.Iterator)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String join(java.util.Iterator,org.hibernate.dialect.function.DerbyConcatFunction$StringTransformer,org.hibernate.dialect.function.DerbyConcatFunction$StringJoinTemplate)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.ComponentMetamodel:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialInsertComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:boolean hasPartialUpdateComponentGeneration(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityMetamodel:void mapPropertyToIndex(org.hibernate.mapping.Property,int)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.tuple.Dom4jInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.DynamicMapInstantiator:void <init>(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.JoinedIterator:boolean hasNext()",
            "org.hibernate.util.JoinedIterator:void updateCurrentIterator()",
            "org.hibernate.util.IdentityMap$KeyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.StringHelper:java.lang.String join(java.lang.String,java.util.Iterator)",
            "org.hibernate.util.StringHelper:java.lang.String[] multiply(java.lang.String,java.util.Iterator,java.util.Iterator)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.util.List toList(java.util.Iterator)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void close()",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:boolean contains(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Set collectSpecifiedFiles()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:void <init>(org.hibernate.hql.ast.HqlSqlWalker)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Nullability:java.lang.String checkSubElementsNullability(org.hibernate.type.Type,java.lang.Object)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.ManyToOne:void createPropertyRefConstraints(java.util.Map)",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Constraint:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.Index:java.lang.String buildSqlCreateIndexString(org.hibernate.dialect.Dialect,java.lang.String,org.hibernate.mapping.Table,java.util.Iterator,boolean,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.Index:void addColumns(java.util.Iterator)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Collection:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.Join:boolean isLazy()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:int getSubclassSpan()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:int getJoinNumber(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyColumnDuplication(java.util.Set,java.util.Iterator)",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Set getIdentityTables()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void appendColumns(java.lang.StringBuffer,java.util.Iterator)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumns(java.util.Iterator)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Component:int getColumnSpan()",
            "org.hibernate.mapping.Component:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Component:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Component:boolean[] getColumnUpdateability()",
            "org.hibernate.mapping.Component:org.hibernate.mapping.Property getProperty(java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration$1:org.hibernate.type.Type getIdentifierType(java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.UnionSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.JoinedSubclass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.OneToOne:void createForeignKey()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isValid(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Property:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IdentifierCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DependantValue:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String[],java.lang.String,java.lang.String[])"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String[],java.lang.String)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:java.lang.String generateLockString()"
        ]
    },
    "org.hibernate.loader.hql.QueryLoader:boolean needsFetchingScroll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.hql.HolderInstantiator,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.CollectionEntry:boolean isSnapshotEmpty(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.collection.PersistentList$Clear:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentBag$Clear:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList$Clear:void operate()",
            "org.hibernate.collection.PersistentBag$Clear:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentBag:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.engine.loading.EntityLoadContext:void cleanup()",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentSet$Clear:void operate()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.mapping.ForeignKey:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:boolean hasUninitializedLazyProperties(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean hasUninitializedLazyProperties(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:boolean shouldGetAllProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.secure.JACCPreDeleteEventListener:boolean onPreDelete(org.hibernate.event.PreDeleteEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityDeleteAction:boolean preDelete()"
        ]
    },
    "org.hibernate.secure.JACCPreLoadEventListener:void onPreLoad(org.hibernate.event.PreLoadEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.io.Serializable[],java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.secure.JACCPreInsertEventListener:boolean onPreInsert(org.hibernate.event.PreInsertEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:boolean preInsert()",
            "org.hibernate.action.EntityInsertAction:boolean preInsert()"
        ]
    },
    "org.hibernate.secure.JACCPreUpdateEventListener:boolean onPreUpdate(org.hibernate.event.PreUpdateEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:boolean preUpdate()"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:void clear()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:void clear()",
            "org.hibernate.collection.PersistentSet$Clear:void operate()",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void cleanup()"
        ]
    },
    "org.hibernate.collection.PersistentSet$Clear:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.bytecode.util.BasicClassFilter:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:void <clinit>()",
            "org.hibernate.bytecode.buildtime.JavassistInstrumenter:void <clinit>()"
        ]
    },
    "org.hibernate.stat.SessionStatisticsImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.cache.impl.bridge.BaseRegionAdapter:long getElementCountInMemory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.SecondLevelCacheStatistics:long getElementCountInMemory()"
        ]
    },
    "org.hibernate.collection.PersistentMap$Clear:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Clear:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:void clear()",
            "org.hibernate.stat.StatisticsImpl:void clear()",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void clear()",
            "org.hibernate.util.IdentityMap:void clear()",
            "org.hibernate.event.def.EventCache:void clear()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.map.MapProxy:void clear()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clearSubselects()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.StatisticsImpl:void <init>()",
            "org.hibernate.stat.StatisticsImpl:void <init>(org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.cache.HashtableCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.BaseRegionAdapter:void clear()",
            "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:void evictAll()",
            "org.hibernate.cache.NonstrictReadWriteCache:void clear()",
            "org.hibernate.cache.ReadWriteCache:void clear()",
            "org.hibernate.cache.ReadOnlyCache:void clear()",
            "org.hibernate.cache.TransactionalCache:void clear()"
        ]
    },
    "org.hibernate.util.IdentityMap:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Clear:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.stat.StatisticsImpl:void clear()",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void clear()",
            "org.hibernate.util.IdentityMap:void clear()",
            "org.hibernate.event.def.EventCache:void clear()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.map.MapProxy:void clear()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clearSubselects()"
        ]
    },
    "org.hibernate.event.def.EventCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Clear:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.stat.StatisticsImpl:void clear()",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void clear()",
            "org.hibernate.util.IdentityMap:void clear()",
            "org.hibernate.event.def.EventCache:void clear()",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.map.MapProxy:void clear()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clearSubselects()"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$Clear:void operate()",
            "org.hibernate.collection.PersistentIdentifierBag:void clear()",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.stat.StatisticsImpl:void clear()",
            "org.hibernate.loader.custom.sql.SQLQueryParser:java.lang.String substituteParams(java.lang.String)",
            "org.hibernate.cache.HashtableCache:void clear()",
            "org.hibernate.util.IdentityMap:void clear()",
            "org.hibernate.event.def.EventCache:void clear()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.map.MapProxy:void clear()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clear()",
            "org.hibernate.engine.BatchFetchQueue:void clearSubselects()"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void clear()"
        ]
    },
    "org.hibernate.engine.BatchFetchQueue:void clearSubselects()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String getManyToManyFilterFragment(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String filterFragment(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.type.CollectionType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.String getOnCondition(java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.util.FilterHelper:java.lang.String render(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement addFromElement(java.lang.String,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.AbstractPersistentCollection:boolean isConnectedToSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean isOperationQueueEnabled()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isPutQueueEnabled()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isClearQueueEnabled()",
            "org.hibernate.collection.AbstractPersistentCollection:void throwLazyInitializationExceptionIfNotConnected()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean setCurrentSession(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.JoinSequence:boolean isIncluded(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.JoinSequence:void addExtraJoins(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.persister.entity.Joinable,boolean)"
        ]
    },
    "org.hibernate.sql.OracleJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)",
            "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)"
        ]
    },
    "org.hibernate.sql.Template:java.lang.String renderWhereStringTemplate(java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Formula:java.lang.String getTemplate(org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)"
        ]
    },
    "org.hibernate.sql.Template:java.lang.String renderOrderByStringTemplate(java.lang.String,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.dialect.resolver.BasicSQLExceptionConverter:org.hibernate.JDBCException convert(java.sql.SQLException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.AbstractDialectResolver:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.exception.JDBCExceptionHelper:org.hibernate.JDBCException convert(org.hibernate.exception.SQLExceptionConverter,java.sql.SQLException,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.enhanced.SequenceStructure$1:long getNextValue()",
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.id.IncrementGenerator:void getNext(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.GUIDGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SequenceGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.hql.QueryLoader:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsForward(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object loadSequentialRowsReverse(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,boolean)",
            "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.loader.Loader:java.util.List loadEntity(org.hibernate.engine.SessionImplementor,java.lang.Object,java.lang.Object,org.hibernate.type.Type,org.hibernate.type.Type,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.loader.Loader:java.util.List loadEntityBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type,java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.loader.Loader:void loadCollection(org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:void loadCollectionBatch(org.hibernate.engine.SessionImplementor,java.io.Serializable[],org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:void loadCollectionSubselect(org.hibernate.engine.SessionImplementor,java.io.Serializable[],java.lang.Object[],org.hibernate.type.Type[],java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.loader.Loader:java.util.List doList(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.hql.HolderInstantiator,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.exception.JDBCExceptionHelper:org.hibernate.JDBCException convert(org.hibernate.exception.SQLExceptionConverter,java.sql.SQLException,java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:void executeBatch()",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp usePreparedStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp useCallableStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TransactionHelper$1Work:void doWork(java.sql.Connection)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.lang.String format(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.SQLStatementLogger:void logStatement(java.lang.String,org.hibernate.jdbc.util.FormatStyle)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,java.io.Writer,java.sql.Statement,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:void openParen()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()"
        ]
    },
    "org.hibernate.bytecode.AbstractClassTransformerImpl:byte[] transform(java.lang.ClassLoader,java.lang.String,java.lang.Class,java.security.ProtectionDomain,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$2:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processClassFile(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.InstrumentedClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "org.hibernate.bytecode.javassist.JavassistClassTransformer$1:boolean handleReadAccess(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:int transformInvokevirtualsIntoGetfields(javassist.bytecode.ClassFile,javassist.bytecode.CodeIterator,int)"
        ]
    },
    "org.hibernate.bytecode.javassist.JavassistClassTransformer$1:boolean handleWriteAccess(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:int transformInvokevirtualsIntoPutfields(javassist.bytecode.ClassFile,javassist.bytecode.CodeIterator,int)"
        ]
    },
    "org.hibernate.bytecode.cglib.CglibClassTransformer$1:boolean acceptRead(org.objectweb.asm.Type,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.bytecode.cglib.CglibClassTransformer$1:boolean acceptWrite(org.objectweb.asm.Type,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.OracleJoinFragment:org.hibernate.sql.JoinFragment copy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QuerySelect:org.hibernate.sql.QuerySelect copy()"
        ]
    },
    "org.hibernate.dialect.TimesTenDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(int[],java.lang.String)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)"
        ]
    },
    "org.hibernate.dialect.SAPDBDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(int[],java.lang.String)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(int[],java.lang.String)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)"
        ]
    },
    "org.hibernate.dialect.OracleDialect:org.hibernate.sql.JoinFragment createOuterJoinFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(int[],java.lang.String)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)"
        ]
    },
    "org.hibernate.mapping.Formula:java.lang.String getTemplate(org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.loader.collection.OneToManyJoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:boolean isDuplicateAssociation(java.lang.String,java.lang.String[],org.hibernate.type.AssociationType)"
        ]
    },
    "org.hibernate.dialect.resolver.BasicSQLExceptionConverter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.AbstractDialectResolver:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.dialect.resolver.BasicSQLExceptionConverter:org.hibernate.JDBCException convert(java.sql.SQLException)",
            "org.hibernate.dialect.resolver.BasicSQLExceptionConverter:void <clinit>()"
        ]
    },
    "org.hibernate.jdbc.util.FormatStyle:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableStructure:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.id.TableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.jdbc.util.SQLStatementLogger:org.hibernate.jdbc.util.FormatStyle determineActualStyle(org.hibernate.jdbc.util.FormatStyle)",
            "org.hibernate.jdbc.util.FormatStyle:void <clinit>()",
            "org.hibernate.jdbc.AbstractBatcher:void log(java.lang.String)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,org.hibernate.cfg.Settings)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void <init>(org.hibernate.cfg.Configuration,java.sql.Connection)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:org.hibernate.tool.hbm2ddl.SchemaExport setFormat(boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration,java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration,org.hibernate.cfg.Settings)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void setFormat(boolean)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$000()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$100()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$200()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$300()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:java.lang.String perform()",
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$400()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.util.BasicFormatterImpl:java.util.Set access$500()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.BasicFormatterImpl$FormatProcess:boolean isFunctionName(java.lang.String)"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter$ZipFileProcessor:void process(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void collectClassNames(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processJarFile(java.io.File,java.util.Set)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromClause:void setParentFromClause(org.hibernate.hql.ast.tree.FromClause)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.MethodNode:void handleElements(org.hibernate.hql.ast.tree.FromReferenceNode,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.MethodNode:void resolveCollectionProperty(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntityJoin(java.lang.String,org.hibernate.type.EntityType,boolean,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntity(org.hibernate.type.EntityType,boolean,java.lang.String,boolean,antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollectionJoin(org.hibernate.engine.JoinSequence,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollectionElementsJoin(org.hibernate.persister.collection.QueryableCollection,java.lang.String)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollection(org.hibernate.persister.collection.QueryableCollection,java.lang.String,int,boolean,boolean)"
        ]
    },
    "org.hibernate.proxy.AbstractLazyInitializer:boolean isConnectedToSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.AbstractLazyInitializer:void setSession(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.mapping.DenormalizedTable:boolean containsColumn(org.hibernate.mapping.Column)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.DenormalizedTable:boolean containsColumn(org.hibernate.mapping.Column)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap headMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap headMap(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap headMap(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap tailMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap tailMap(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap tailMap(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap:java.lang.Object firstKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.lang.Object firstKey()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object firstKey()"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap:java.lang.Object lastKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.lang.Object lastKey()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object lastKey()"
        ]
    },
    "org.hibernate.collection.PersistentList:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateSubcriteria()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateExpressionEntries()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateOrderings()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.ArrayType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Iterator filesets()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Table:java.util.Iterator getCheckConstraintsIterator()",
            "org.hibernate.mapping.SimpleValue:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator columnIterator()",
            "org.hibernate.mapping.Index:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toString()"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object[] valueArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.JoinedIterator:void <init>(java.util.List)",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.Object[] typecast(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata[] getColumns()",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.engine.ResultSetMappingDefinition:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.collection.PersistentList:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int indexOf(java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.collection.PersistentList:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator()"
        ]
    },
    "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentList:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentBag:java.util.List subList(int,int)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentList:java.lang.String toString()",
            "org.hibernate.collection.PersistentBag:java.lang.String toString()",
            "org.hibernate.impl.CriteriaImpl:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.mapping.SimpleValue:java.lang.String toString()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentList:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)",
            "org.hibernate.mapping.Table$ForeignKeyKey:boolean equals(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentList:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:int hashCode()",
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.engine.query.sql.NativeSQLQuerySpecification:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)",
            "org.hibernate.mapping.Table$ForeignKeyKey:int hashCode()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateSubcriteria()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateExpressionEntries()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateOrderings()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.ArrayType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Iterator filesets()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Table:java.util.Iterator getCheckConstraintsIterator()",
            "org.hibernate.mapping.SimpleValue:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator columnIterator()",
            "org.hibernate.mapping.Index:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toString()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object[] valueArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.JoinedIterator:void <init>(java.util.List)",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.Object[] typecast(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata[] getColumns()",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.engine.ResultSetMappingDefinition:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int indexOf(java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator()"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentList:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentBag:java.util.List subList(int,int)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentSet:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Iterator iterateEntityNameResolvers(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:java.util.Iterator iterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray()",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.proxy.pojo.cglib.CGLIBProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentSet:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:java.lang.String toString()",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSet:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSet:boolean equals(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.query.sql.NativeSQLQuerySpecification:boolean equals(java.lang.Object)",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:boolean equals(java.lang.Object)",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.collection.PersistentSet:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSet:int hashCode()",
            "org.hibernate.cache.QueryKey:int generateHashCode()",
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.engine.query.sql.NativeSQLQuerySpecification:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection)",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.util.Set keySet()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Set keySet()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getDefinedFilterNames()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getEntityKeys()",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getCollectionKeys()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getQueries()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getEntityNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getCollectionRoleNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getSecondLevelCacheRegionNames()",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.event.def.EventCache:java.util.Set keySet()",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:java.lang.String toString()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl$2:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Set keySet()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.ParameterMetadata:java.util.Set getNamedParameterNames()",
            "org.hibernate.engine.FilterDefinition:java.util.Set getParameterNames()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.String toString()",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection values()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Collection values()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentityMap:java.util.Collection values()",
            "org.hibernate.event.def.EventCache:java.util.Collection values()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Collection values()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()"
        ]
    },
    "org.hibernate.collection.PersistentMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateSubcriteria()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateExpressionEntries()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateOrderings()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.ArrayType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Iterator filesets()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Table:java.util.Iterator getCheckConstraintsIterator()",
            "org.hibernate.mapping.SimpleValue:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator columnIterator()",
            "org.hibernate.mapping.Index:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toString()"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object[] valueArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.JoinedIterator:void <init>(java.util.List)",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.Object[] typecast(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata[] getColumns()",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.engine.ResultSetMappingDefinition:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()"
        ]
    },
    "org.hibernate.collection.PersistentBag:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.collection.PersistentBag:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int indexOf(java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.collection.PersistentBag:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator()"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentList:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentBag:java.util.List subList(int,int)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentList:java.lang.String toString()",
            "org.hibernate.collection.PersistentBag:java.lang.String toString()",
            "org.hibernate.impl.CriteriaImpl:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.mapping.SimpleValue:java.lang.String toString()",
            "org.hibernate.criterion.ProjectionList:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet headSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet headSet(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet headSet(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet tailSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet tailSet(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet tailSet(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet:java.lang.Object first()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.lang.Object first()",
            "org.hibernate.collection.PersistentSortedSet:java.lang.Object first()"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet:java.lang.Object last()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.lang.Object last()",
            "org.hibernate.collection.PersistentSortedSet:java.lang.Object last()"
        ]
    },
    "org.hibernate.collection.PersistentMap$MapEntryProxy:java.lang.Object setValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.collection.PersistentMap$MapEntryProxy:java.lang.Object setValue(java.lang.Object)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.util.JoinedIterator:void remove()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.cfg.Mappings:void addUniquePropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addPropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.cfg.Configuration:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.collection.PersistentBag$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentList$SimpleAdd:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:void queueOperation(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormula(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumn(java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumns(java.lang.String[])",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addWhereToken(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String)",
            "org.hibernate.sql.InFragment:org.hibernate.sql.InFragment addValue(java.lang.Object)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.Criteria,org.hibernate.criterion.Criterion)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String,org.hibernate.type.Type)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolver(org.hibernate.dialect.resolver.DialectResolver)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)",
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.util.XMLHelper$ErrorLogger:void error(org.xml.sax.SAXParseException)",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.transaction.JDBCTransaction:void registerSynchronization(javax.transaction.Synchronization)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:void addColumn(org.hibernate.tool.hbm2ddl.ColumnMetadata)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:void visit(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.FromElement:void addDestination(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromElement:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SqlFragment:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addImpliedFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(antlr.RecognitionException)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportWarning(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectClass(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectScalar(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendWhereToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendHavingToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendOrderByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendGroupByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectTokens(java.lang.String[])",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.query.ParamLocationRecognizer:void ordinalParameter(int)",
            "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void add(int)",
            "org.hibernate.engine.StatefulPersistenceContext:void addNonLazyCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence addJoin(org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])",
            "org.hibernate.engine.ResultSetMappingDefinition:void addQueryReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void addToBatch(java.lang.Integer,org.hibernate.action.EntityInsertAction)",
            "org.hibernate.mapping.Table:void addCheckConstraint(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:void addFormula(org.hibernate.mapping.Formula)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.MetaAttribute:void addValue(java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection)",
            "org.hibernate.criterion.Example:void addPropertyTypedValue(java.lang.Object,org.hibernate.type.Type,java.util.List)",
            "org.hibernate.criterion.Junction:org.hibernate.criterion.Junction add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean retainAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSet:boolean retainAll(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:boolean add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:void addSecondPass(org.hibernate.cfg.SecondPass,boolean)",
            "org.hibernate.cfg.Mappings:void addUniquePropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addPropertyReference(java.lang.String,java.lang.String)",
            "org.hibernate.cfg.Mappings:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.cfg.Configuration:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)",
            "org.hibernate.collection.PersistentBag$SimpleAdd:void operate()",
            "org.hibernate.collection.PersistentList$SimpleAdd:void operate()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:void queueOperation(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentSet:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormula(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumn(java.lang.String)",
            "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumns(java.lang.String[])",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addWhereToken(java.lang.String)",
            "org.hibernate.sql.SimpleSelect:void and()",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String,java.lang.String)",
            "org.hibernate.sql.InFragment:org.hibernate.sql.InFragment addValue(java.lang.Object)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.Criteria,org.hibernate.criterion.Criterion)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.impl.SQLQueryImpl:void <init>(java.lang.String,java.lang.String[],java.lang.Class[],org.hibernate.LockMode[],org.hibernate.engine.SessionImplementor,java.util.Collection,org.hibernate.FlushMode,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String,org.hibernate.type.Type)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addJoin(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addSynchronizedQuerySpace(java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addQuerySpaces(java.io.Serializable[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(int,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)",
            "org.hibernate.dialect.resolver.DialectResolverSet:void addResolver(org.hibernate.dialect.resolver.DialectResolver)",
            "org.hibernate.loader.custom.sql.SQLQueryParser$ParameterSubstitutionRecognizer:void addNamedParameter(java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:void performDiscovery(org.hibernate.loader.custom.CustomLoader$Metadata,java.util.List,java.util.List)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String generateTableAlias(int,java.lang.String,org.hibernate.persister.entity.Joinable)",
            "org.hibernate.loader.Loader:java.lang.Object instanceNotYetLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.lang.String,org.hibernate.engine.EntityKey,org.hibernate.LockMode,org.hibernate.engine.EntityKey,java.lang.Object,java.util.List,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:void addAssociationToJoinTree(org.hibernate.type.AssociationType,java.lang.String[],java.lang.String,java.lang.String,int,int)",
            "org.hibernate.util.XMLHelper$ErrorLogger:void error(org.xml.sax.SAXParseException)",
            "org.hibernate.util.ArrayHelper:void addAll(java.util.Collection,java.lang.Object[])",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.transaction.JDBCTransaction:void registerSynchronization(javax.transaction.Synchronization)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:void addColumn(org.hibernate.tool.hbm2ddl.ColumnMetadata)",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void execute(boolean,boolean)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:void addFileset(org.apache.tools.ant.types.FileSet)",
            "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:void visit(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.FromElement:void addDestination(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromElement:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SqlFragment:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void addCollectionFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.FromClause:void addImpliedFromElement(org.hibernate.hql.ast.tree.FromElement)",
            "org.hibernate.hql.ast.tree.IntoClause:void visitPropertySpecNodes(antlr.collections.AST,java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator:void out(antlr.collections.AST)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.SqlGenerator$FunctionArguments:void clause(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(antlr.RecognitionException)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportWarning(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addFrom(java.lang.String,org.hibernate.engine.JoinSequence)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectClass(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectScalar(org.hibernate.type.Type)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendWhereToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendHavingToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendOrderByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendGroupByToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectToken(java.lang.String)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectTokens(java.lang.String[])",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.query.ParamLocationRecognizer:void ordinalParameter(int)",
            "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void add(int)",
            "org.hibernate.engine.StatefulPersistenceContext:void addNonLazyCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.JoinSequence:org.hibernate.engine.JoinSequence addJoin(org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])",
            "org.hibernate.engine.ResultSetMappingDefinition:void addQueryReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void addToBatch(java.lang.Integer,org.hibernate.action.EntityInsertAction)",
            "org.hibernate.mapping.Table:void addCheckConstraint(java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.SimpleValue:void addFormula(org.hibernate.mapping.Formula)",
            "org.hibernate.mapping.Constraint:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.Index:void addColumn(org.hibernate.mapping.Column)",
            "org.hibernate.mapping.MetaAttribute:void addValue(java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void addReferencedColumn(org.hibernate.mapping.Column)",
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection)",
            "org.hibernate.criterion.Example:void addPropertyTypedValue(java.lang.Object,org.hibernate.type.Type,java.util.List)",
            "org.hibernate.criterion.Junction:org.hibernate.criterion.Junction add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void add(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void add(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void remove()",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.util.JoinedIterator:void remove()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void set(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListIteratorProxy:void set(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.util.JoinedIterator:void remove()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseMappingElement(org.dom4j.Element,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addDirectory(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addDirectory(java.io.File)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addCacheableFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addURL(java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addResource(java.lang.String,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addClass(java.lang.Class)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addResource(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseMappingElement(org.dom4j.Element,java.lang.String)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addJar(java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseMappingElement(org.dom4j.Element,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderCollectionSelectFragment(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderValueCollectionSelectFragment(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String selectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:java.lang.String selectString(java.util.List)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderIdentifierSelect(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElement:java.lang.String renderPropertySelect(int,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragmentSansLeadingComma(java.lang.String,boolean[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.transaction.JTATransaction:void rollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.dialect.MySQLDialect:java.lang.String getCastTypeName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.function.CastFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:void <init>(org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter,java.util.Properties,org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter:javax.transaction.Transaction getTransaction()"
        ]
    },
    "org.hibernate.transaction.TransactionManagerLookupFactory:javax.transaction.TransactionManager getTransactionManager(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.JTATransactionFactory:void configure(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.TransactionFactoryFactory:org.hibernate.transaction.TransactionFactory buildTransactionFactory(java.util.Properties)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void close()"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:void connectionCleanedUp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:java.sql.Connection cleanup()"
        ]
    },
    "org.hibernate.transaction.JTATransaction:void afterCommitRollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JTATransaction:void commit()",
            "org.hibernate.transaction.JTATransaction:void rollback()"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void afterOperation(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.StatelessSessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void afterOperation(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object load(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.lang.Object get(java.lang.String,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List listFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void managedClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void close()",
            "org.hibernate.transaction.CacheSynchronization:void afterCompletion(int)",
            "org.hibernate.transaction.JDBCTransaction:void closeIfRequired()",
            "org.hibernate.transaction.JTATransaction:void closeIfRequired()"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.sql.Connection disconnect()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:boolean scroll(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean setRowNumber(int)"
        ]
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:boolean last()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:void afterLast()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean setRowNumber(int)"
        ]
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:boolean first()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean setRowNumber(int)"
        ]
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:void afterLast()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void createFromJoinElement(antlr.collections.AST,antlr.collections.AST,int,antlr.collections.AST,antlr.collections.AST,antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void joinElement(antlr.collections.AST)"
        ]
    },
    "org.hibernate.param.VersionTypeSeedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object getNextVersion(org.hibernate.event.FlushEntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache$Lock:boolean isPuttable(long,java.lang.Object,java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.ReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)"
        ]
    },
    "org.hibernate.cache.ReadWriteCache$Item:boolean isPuttable(long,java.lang.Object,java.util.Comparator)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.ReadWriteCache:boolean put(java.lang.Object,java.lang.Object,long,java.lang.Object,java.util.Comparator,boolean)"
        ]
    },
    "org.hibernate.type.CalendarDateType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.type.CalendarType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.type.AdaptedImmutableType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.ComponentType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.ReplicationMode$4:boolean shouldOverwriteCurrentVersion(java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.type.VersionType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration setCacheConcurrencyStrategy(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.property.Dom4jAccessor$Dom4jGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:java.lang.String[][] generateColumnNames(org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.SelectClause:void initializeColumnNames()"
        ]
    },
    "org.hibernate.id.IdentityGenerator$BasicDelegate:java.lang.String getSelectSQL()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindNamedSQLQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.IntoClause:void initialize(org.hibernate.persister.entity.Queryable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollection(org.hibernate.persister.collection.QueryableCollection,java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceCollection(org.hibernate.type.CollectionType,boolean,boolean,java.lang.String,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.IdentNode:void resolveIndex(antlr.collections.AST)"
        ]
    },
    "org.hibernate.loader.JoinWalker:void walkEntityTree(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.collection.OneToManyJoinWalker:void <init>(org.hibernate.persister.collection.QueryableCollection,int,java.lang.String,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initAll(java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initProjection(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String getWhereFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.engine.CascadingAction$4:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.hql.ast.util.SessionFactoryHelper:org.hibernate.engine.JoinSequence createJoinSequence(boolean,org.hibernate.type.AssociationType,java.lang.String,int,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntityJoin(java.lang.String,org.hibernate.type.EntityType,boolean,antlr.collections.AST)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createElementJoin(org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.engine.JoinSequence createJoinSequence(java.lang.String,int)"
        ]
    },
    "org.hibernate.hql.classic.PathExpressionParser:void addJoin(java.lang.String,org.hibernate.type.AssociationType,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.PathExpressionParser:java.lang.String continueFromManyToMany(java.lang.String,java.lang.String[],org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.CollectionKey:void <init>(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.collection.PersistentCollection locateLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.EntityEntry:boolean isNullifiable(boolean,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityJoin(java.lang.String,java.lang.String,org.hibernate.engine.JoinSequence,boolean,boolean,org.hibernate.type.EntityType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.DotNode:void dereferenceEntityJoin(java.lang.String,org.hibernate.type.EntityType,boolean,antlr.collections.AST)"
        ]
    },
    "org.hibernate.event.def.AbstractVisitor:void processValues(java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.ReattachVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)"
        ]
    },
    "org.hibernate.event.def.AbstractVisitor:void processEntityPropertyValues(java.lang.Object[],org.hibernate.type.Type[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean wrapCollections(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,org.hibernate.type.Type[],java.lang.Object[])",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean hasDirtyCollections(org.hibernate.event.FlushEntityEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.Status)",
            "org.hibernate.event.def.DefaultReplicateEventListener:boolean visitCollectionsBeforeSave(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.type.Type[],org.hibernate.event.EventSource)",
            "org.hibernate.event.def.WrapVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.AbstractSaveEventListener:boolean visitCollectionsBeforeSave(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.type.Type[],org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.cache.entry.CacheEntry:void <init>(java.lang.Object[],org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.type.CollectionType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:int[] findDirty(org.hibernate.tuple.StandardProperty[],java.lang.Object[],java.lang.Object[],boolean[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.tree.AggregateNode:org.hibernate.type.Type getDataType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.CountNode:org.hibernate.type.Type getDataType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.ReattachVisitor:java.io.Serializable extractCollectionKeyFromOwner(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.OnUpdateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnLockVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean implementsLifecycle(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:boolean invokeSaveLifecycle(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultDeleteEventListener:boolean invokeDeleteLifecycle(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultPostLoadEventListener:void onPostLoad(org.hibernate.event.PostLoadEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:boolean invokeUpdateLifecycle(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean implementsValidatable(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void validate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.Status,org.hibernate.EntityMode)",
            "org.hibernate.event.def.AbstractSaveEventListener:void validate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Class getConcreteProxyClass(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean hasUninitializedLazyProperties(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findDirty(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findModified(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean[] getPropertyUpdateability(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.ScrollableResults performScroll(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.AbstractSessionImpl:org.hibernate.engine.query.NativeSQLQueryPlan getNativeSQLQueryPlan(org.hibernate.engine.query.sql.NativeSQLQuerySpecification)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractSessionImpl:java.util.List list(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.AbstractSessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.StatelessSessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)"
        ]
    },
    "org.hibernate.loader.custom.CustomLoader:void autoDiscoverTypes(java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.ResultSet getResultSet(java.sql.PreparedStatement,boolean,boolean,org.hibernate.engine.RowSelection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.BlobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.BlobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ClobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.ClobType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readElement(java.sql.ResultSet,java.lang.Object,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIndex(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readKey(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.SpecialOneToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.io.Serializable insert(java.lang.Object[],boolean[],java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTPrinter:void showAst(antlr.collections.AST,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTPrinter:void showAst(antlr.collections.AST,java.io.PrintStream)",
            "org.hibernate.hql.ast.HqlParser:void showAst(antlr.collections.AST,java.io.PrintWriter)"
        ]
    },
    "org.hibernate.event.def.ReattachVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractVisitor:java.lang.Object processValue(java.lang.Object,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.impl.IteratorImpl:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.util.JoinedIterator:void remove()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.engine.CascadingAction$1:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void delete(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])"
        ]
    },
    "org.hibernate.impl.SessionImpl:void delete(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void saveOrUpdate(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.CascadingAction$5:void cascade(org.hibernate.event.EventSource,java.lang.Object,java.lang.String,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Cascade:void cascadeToOne(java.lang.Object,org.hibernate.type.Type,org.hibernate.engine.CascadeStyle,java.lang.Object,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.io.Serializable save(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void save(java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void update(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void update(java.lang.Object,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.action.CollectionUpdateAction:void preUpdate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.action.CollectionUpdateAction:void postUpdate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.CollectionUpdateAction:void execute()"
        ]
    },
    "org.hibernate.type.CollectionType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object readIdentifier(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.custom.CustomLoader$ScalarResultColumnProcessor:java.lang.Object extract(java.lang.Object[],java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaLoader:java.lang.Object getResultColumnOrRow(java.lang.Object[],org.hibernate.transform.ResultTransformer,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.lang.String getInstanceClass(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object nullSafeGet(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AnyType:java.lang.Object hydrate(java.sql.ResultSet,java.lang.String[],org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addUniquePropertyReference(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addPropertyReference(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.Mappings:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.Configuration:void addAuxiliaryDatabaseObject(org.hibernate.mapping.AuxiliaryDatabaseObject)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.collection.PersistentBag$SimpleAdd:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.PersistentList$SimpleAdd:void operate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void performQueuedOperations()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void queueOperation(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentList:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:void clear()",
            "org.hibernate.collection.PersistentList:java.lang.Object set(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:void add(int,java.lang.Object)",
            "org.hibernate.collection.PersistentList:java.lang.Object remove(int)",
            "org.hibernate.collection.PersistentSet:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentSet:void clear()",
            "org.hibernate.collection.PersistentMap:java.lang.Object put(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentMap:java.lang.Object remove(java.lang.Object)",
            "org.hibernate.collection.PersistentMap:void clear()",
            "org.hibernate.collection.PersistentBag:boolean add(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void clear()"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumns(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void appendElementColumns(org.hibernate.sql.SelectFragment,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void appendIndexColumns(org.hibernate.sql.SelectFragment,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void appendIdentifierColumns(org.hibernate.sql.SelectFragment,java.lang.String)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.SelectFragment createSelect(int[],int[])"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormula(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormulas(java.lang.String,java.lang.String[],java.lang.String[])",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void appendElementColumns(org.hibernate.sql.SelectFragment,java.lang.String)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void appendIndexColumns(org.hibernate.sql.SelectFragment,java.lang.String)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.SelectFragment createSelect(int[],int[])"
        ]
    },
    "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.InsertSelect:org.hibernate.sql.InsertSelect addColumns(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumns(java.lang.String[])",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectSizeString(boolean)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByElementString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSelectVersionString()",
            "org.hibernate.dialect.lock.SelectLockingStrategy:java.lang.String generateLockString()"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addWhereToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.InFragment:org.hibernate.sql.InFragment addValue(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:java.lang.String discriminatorFilterFragment(java.lang.String)",
            "org.hibernate.loader.JoinWalker:java.lang.StringBuffer whereString(java.lang.String,java.lang.String[],int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.Criteria,org.hibernate.criterion.Criterion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.criterion.Criterion)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria addOrder(org.hibernate.criterion.Order)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String,org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addScalar(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.String)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.Class,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int,org.hibernate.impl.CriteriaImpl$1)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria addOrder(org.hibernate.criterion.Order)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria addOrder(org.hibernate.criterion.Order)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectResolverSet:void addResolver(org.hibernate.dialect.resolver.DialectResolver)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectFactory:void <clinit>()"
        ]
    },
    "org.hibernate.util.XMLHelper$ErrorLogger:void error(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.XMLHelper$ErrorLogger:void fatalError(org.xml.sax.SAXParseException)"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void registerSynchronization(javax.transaction.Synchronization)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:void addFileset(org.apache.tools.ant.types.FileSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaExportTask:void addFileset(org.apache.tools.ant.types.FileSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean,java.io.Writer,java.sql.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean,java.io.Writer,java.sql.Statement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,boolean,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:void addFileset(org.apache.tools.ant.types.FileSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.IndexMetadata:void addColumn(org.hibernate.tool.hbm2ddl.ColumnMetadata)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.TableMetadata:void addIndex(java.sql.ResultSet)"
        ]
    },
    "org.hibernate.tool.instrument.BasicInstrumentationTask:void addFileset(org.apache.tools.ant.types.FileSet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:void visit(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.NodeTraverser:void visitDepthFirst(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:void addDestination(org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElement:void setOrigin(org.hibernate.hql.ast.tree.FromElement,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.SqlFragment:void addEmbeddedParameter(org.hibernate.param.ParameterSpecification)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:void addImpliedFromElement(org.hibernate.hql.ast.tree.FromElement)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.ErrorCounter:void reportError(antlr.RecognitionException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void reportError(antlr.RecognitionException)",
            "org.hibernate.hql.ast.HqlParser:void reportError(antlr.RecognitionException)",
            "org.hibernate.hql.ast.HqlSqlWalker:void reportError(antlr.RecognitionException)"
        ]
    },
    "org.hibernate.hql.ast.ErrorCounter:void reportError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.HqlParser:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void reportError(java.lang.String)",
            "org.hibernate.hql.ast.ErrorCounter:void reportError(antlr.RecognitionException)"
        ]
    },
    "org.hibernate.hql.ast.ErrorCounter:void reportWarning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.SqlGenerator:void reportWarning(java.lang.String)",
            "org.hibernate.hql.ast.HqlParser:void reportWarning(java.lang.String)",
            "org.hibernate.hql.ast.HqlSqlWalker:void reportWarning(java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void addSelectScalar(org.hibernate.type.Type)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void appendWhereToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void appendToken(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void appendHavingToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.HavingParser:void appendToken(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void appendOrderByToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.OrderByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void appendGroupByToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.GroupByParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectToken(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl:void appendScalarSelectTokens(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.query.ParamLocationRecognizer:void ordinalParameter(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParameterParser:void parse(java.lang.String,org.hibernate.engine.query.ParameterParser$Recognizer)"
        ]
    },
    "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void add(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void access$000(org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription,int)"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:void addNonLazyCollection(org.hibernate.collection.PersistentCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.engine.ResultSetMappingDefinition:void addQueryReturn(org.hibernate.engine.query.sql.NativeSQLQueryReturn)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.engine.ActionQueue$InsertActionSorter:void addToBatch(java.lang.Integer,org.hibernate.action.EntityInsertAction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()"
        ]
    },
    "org.hibernate.mapping.Table:void addCheckConstraint(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:void addFormula(org.hibernate.mapping.Formula)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindColumnsOrFormula(org.dom4j.Element,org.hibernate.mapping.SimpleValue,java.lang.String,boolean,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.mapping.MetaAttribute:void addValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.Example:void addPropertyTypedValue(java.lang.Object,org.hibernate.type.Type,java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Example:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Example:void addComponentTypedValues(java.lang.String,java.lang.Object,org.hibernate.type.AbstractComponentType,java.util.List,org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Junction:org.hibernate.criterion.Junction add(org.hibernate.criterion.Criterion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)",
            "org.hibernate.criterion.NaturalIdentifier:org.hibernate.criterion.NaturalIdentifier set(java.lang.String,java.lang.Object)"
        ]
    },
    "org.hibernate.event.def.DefaultEvictEventListener:void doEvict(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)"
        ]
    },
    "org.hibernate.dialect.Oracle10gDialect:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.StandardDialectResolver:org.hibernate.dialect.Dialect resolveDialectInternal(java.sql.DatabaseMetaData)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.Object instantiate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:java.lang.Object instantiate(java.lang.String,java.io.Serializable)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)"
        ]
    },
    "org.hibernate.tuple.component.Dom4jComponentTuplizer:org.hibernate.property.Getter buildGetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.component.Dom4jComponentTuplizer:org.hibernate.property.Setter buildSetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.mapping.Collection:org.hibernate.type.CollectionType getCollectionType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Collection:org.hibernate.type.Type getType()"
        ]
    },
    "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.classic.Session openSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:java.io.Serializable executeAndExtract(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:java.io.Serializable executeAndExtract(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.id.IdentityGenerator$BasicDelegate:java.io.Serializable getResult(org.hibernate.engine.SessionImplementor,java.sql.ResultSet,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.id.SequenceIdentityGenerator$Delegate:java.io.Serializable executeAndExtract(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.id.SequenceHiLoGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:org.hibernate.type.Type getDataType()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.proxy.map.MapProxy:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection values()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentityMap:java.util.Collection values()",
            "org.hibernate.event.def.EventCache:java.util.Collection values()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Collection values()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()"
        ]
    },
    "org.hibernate.proxy.map.MapProxy:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.util.Set keySet()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getDefinedFilterNames()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getEntityKeys()",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getCollectionKeys()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getQueries()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getEntityNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getCollectionRoleNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getSecondLevelCacheRegionNames()",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.event.def.EventCache:java.util.Set keySet()",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:java.lang.String toString()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl$2:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Set keySet()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.ParameterMetadata:java.util.Set getNamedParameterNames()",
            "org.hibernate.engine.FilterDefinition:java.util.Set getParameterNames()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.String toString()",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element target()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setQName(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespace()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List getNamespacesForURI(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespacePrefix()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespaceURI()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getQualifiedName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List additionalNamespaces()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List declaredNamespaces()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addComment(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addCDATA(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addEntity(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Attribute)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.CDATA)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Entity)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Text)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Namespace)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Attribute)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.CDATA)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Entity)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Namespace)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Text)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean supportsParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element getParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setParent(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Document getDocument()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setDocument(org.dom4j.Document)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isReadOnly()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setName(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getText()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getTextTrim()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getStringValue()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String asXML()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void write(java.io.Writer)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:short getNodeType()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNodeTypeName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object selectObject(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node selectSingleNode(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String valueOf(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Number numberValueOf(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean matches(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.XPath createXPath(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node asXPathResult(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void accept(org.dom4j.Visitor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object clone()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object getData()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setData(java.lang.Object)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List attributes()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributes(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int attributeCount()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator attributeIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isRootElement()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasMixedContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isTextOnly()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void appendAttributes(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node getXPathResult(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node node(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int indexOf(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int nodeCount()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element elementByID(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List content()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator nodeIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setContent(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void appendContent(org.dom4j.Branch)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void clearContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setProcessingInstructions(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean removeProcessingInstruction(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Comment)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.ProcessingInstruction)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Comment)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void normalize()"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void cascadeOnUpdate(org.hibernate.event.SaveOrUpdateEvent,org.hibernate.persister.entity.EntityPersister,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.util.JoinedIterator:void remove()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.AbstractPersistentCollection$IteratorProxy:void remove()",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentMap$EntryIteratorProxy:void remove()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.util.JoinedIterator:void remove()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String[],java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addCondition(java.lang.String[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectSizeString(boolean)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateSelectRowByIndexString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String generateDetectRowByElementString()",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSelectVersionString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getSelectByUniqueKeyString(java.lang.String)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:java.lang.String generateLockString()"
        ]
    },
    "org.hibernate.tuple.entity.AbstractEntityTuplizer:boolean shouldGetAllProperties(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:java.lang.Object[] getPropertyValues(java.lang.Object)"
        ]
    },
    "org.hibernate.action.EntityIdentityInsertAction:boolean preInsert()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.action.EntityIdentityInsertAction:void execute()"
        ]
    },
    "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:org.hibernate.bytecode.ClassTransformer getClassTransformer(org.hibernate.bytecode.util.ClassDescriptor,java.util.Set)",
            "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:void <clinit>()",
            "org.hibernate.bytecode.buildtime.CGLIBInstrumenter$CustomClassDescriptor:void <init>(byte[])",
            "org.hibernate.tool.instrument.cglib.InstrumentTask:org.hibernate.bytecode.buildtime.Instrumenter buildInstrumenter(org.hibernate.bytecode.buildtime.Logger,org.hibernate.bytecode.buildtime.Instrumenter$Options)"
        ]
    },
    "org.hibernate.bytecode.buildtime.JavassistInstrumenter:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.JavassistInstrumenter$CustomClassDescriptor:boolean isInstrumented()",
            "org.hibernate.bytecode.buildtime.JavassistInstrumenter:org.hibernate.bytecode.ClassTransformer getClassTransformer(org.hibernate.bytecode.util.ClassDescriptor,java.util.Set)",
            "org.hibernate.bytecode.buildtime.JavassistInstrumenter:void <clinit>()",
            "org.hibernate.tool.instrument.javassist.InstrumentTask:org.hibernate.bytecode.buildtime.Instrumenter buildInstrumenter(org.hibernate.bytecode.buildtime.Logger,org.hibernate.bytecode.buildtime.Instrumenter$Options)"
        ]
    },
    "org.hibernate.stat.SecondLevelCacheStatistics:long getElementCountInMemory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.stat.SecondLevelCacheStatistics:java.lang.String toString()"
        ]
    },
    "org.hibernate.stat.StatisticsImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.StatisticsImpl:void <init>(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.cache.impl.bridge.BaseRegionAdapter:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.impl.bridge.BaseGeneralDataRegionAdapter:void evictAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.UpdateTimestampsCache:void clear()",
            "org.hibernate.cache.StandardQueryCache:void clear()"
        ]
    },
    "org.hibernate.cache.NonstrictReadWriteCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evictAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evictAll()"
        ]
    },
    "org.hibernate.cache.ReadWriteCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evictAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evictAll()"
        ]
    },
    "org.hibernate.cache.ReadOnlyCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evictAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evictAll()"
        ]
    },
    "org.hibernate.cache.TransactionalCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evictAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void removeAll()",
            "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evictAll()"
        ]
    },
    "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection:void throwLazyInitializationExceptionIfNotConnected()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:void initialize(boolean)"
        ]
    },
    "org.hibernate.engine.JoinSequence:void addExtraJoins(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.persister.entity.Joinable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int)",
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)"
        ]
    },
    "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)"
        ]
    },
    "org.hibernate.id.enhanced.SequenceStructure$1:long getNextValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.OptimizerFactory$PooledOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)",
            "org.hibernate.id.enhanced.OptimizerFactory$NoopOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)",
            "org.hibernate.id.enhanced.OptimizerFactory$HiLoOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"
        ]
    },
    "org.hibernate.id.IncrementGenerator:void getNext(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.IncrementGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.id.GUIDGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.exception.JDBCExceptionHelper:org.hibernate.JDBCException convert(org.hibernate.exception.SQLExceptionConverter,java.sql.SQLException,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractScrollableResults:void close()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean scroll(int)",
            "org.hibernate.impl.ScrollableResultsImpl:boolean first()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean last()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean next()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean previous()",
            "org.hibernate.impl.ScrollableResultsImpl:void afterLast()",
            "org.hibernate.impl.ScrollableResultsImpl:void beforeFirst()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean isFirst()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean isLast()",
            "org.hibernate.impl.ScrollableResultsImpl:int getRowNumber()",
            "org.hibernate.impl.ScrollableResultsImpl:boolean setRowNumber(int)",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean next()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean last()",
            "org.hibernate.impl.FetchingScrollableResultsImpl:void beforeFirst()",
            "org.hibernate.impl.SessionImpl:void doWork(org.hibernate.jdbc.Work)",
            "org.hibernate.impl.IteratorImpl:void close()",
            "org.hibernate.impl.IteratorImpl:java.lang.Object next()",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.Connection openConnection()",
            "org.hibernate.jdbc.AbstractBatcher:void closeConnection(java.sql.Connection)",
            "org.hibernate.jdbc.AbstractBatcher:void cancelLastQuery()",
            "org.hibernate.jdbc.JDBCContext:void afterNontransactionalQuery(boolean)",
            "org.hibernate.jdbc.ConnectionManager:void openConnection()",
            "org.hibernate.jdbc.ConnectionManager:void closeConnection()",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:org.hibernate.tool.hbm2ddl.TableMetadata getTableMetadata(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.engine.transaction.Isolater$JdbcDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void executeBatch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.impl.StatelessSessionImpl:void managedFlush()",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableStatement(java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,boolean)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.type.DbTimestampType:java.sql.Timestamp usePreparedStatement(java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp getCurrentTimestamp(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.DbTimestampType:java.sql.Timestamp useCallableStatement(java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp getCurrentTimestamp(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.TransactionHelper$1Work:void doWork(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.transaction.Isolater$JtaDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)",
            "org.hibernate.engine.transaction.Isolater$JdbcDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)"
        ]
    },
    "org.hibernate.jdbc.util.SQLStatementLogger:void logStatement(java.lang.String,org.hibernate.jdbc.util.FormatStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableStructure:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.id.TableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:void log(java.lang.String)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:void execute(boolean,boolean,java.io.Writer,java.sql.Statement,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void create(boolean,boolean,java.io.Writer,java.sql.Statement)",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void drop(boolean,boolean,java.io.Writer,java.sql.Statement)"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter$2:void handleEntry(java.util.zip.ZipEntry,byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$ZipFileProcessor:void process(java.io.File)"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processClassFile(java.io.File,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processFile(java.io.File,java.util.Set)"
        ]
    },
    "org.hibernate.bytecode.InstrumentedClassLoader:java.lang.Class loadClass(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ReflectHelper:java.lang.Class classForName(java.lang.String,java.lang.Class)",
            "org.hibernate.util.ReflectHelper:java.lang.Class classForName(java.lang.String)",
            "org.hibernate.util.SerializationHelper$CustomObjectInputStream:java.lang.Class resolveClass(java.io.ObjectStreamClass)",
            "org.hibernate.bytecode.InstrumentedClassLoader:java.lang.Class loadClass(java.lang.String)"
        ]
    },
    "org.hibernate.bytecode.javassist.FieldTransformer:int transformInvokevirtualsIntoGetfields(javassist.bytecode.ClassFile,javassist.bytecode.CodeIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)"
        ]
    },
    "org.hibernate.bytecode.javassist.FieldTransformer:int transformInvokevirtualsIntoPutfields(javassist.bytecode.ClassFile,javassist.bytecode.CodeIterator,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)"
        ]
    },
    "org.hibernate.sql.QuerySelect:org.hibernate.sql.QuerySelect copy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String fromJoinFragment(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String whereJoinFragment(java.lang.String,boolean,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(int[],java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String renderSelect(int[],int[],int[])"
        ]
    },
    "org.hibernate.id.enhanced.TableStructure:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.TransactionHelper$1Work:void doWork(java.sql.Connection)"
        ]
    },
    "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.TransactionHelper$1Work:void doWork(java.sql.Connection)"
        ]
    },
    "org.hibernate.id.MultipleHiLoPerTableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.TransactionHelper$1Work:void doWork(java.sql.Connection)"
        ]
    },
    "org.hibernate.id.TableGenerator:java.io.Serializable doWorkInCurrentTransaction(java.sql.Connection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.TransactionHelper$1Work:void doWork(java.sql.Connection)"
        ]
    },
    "org.hibernate.jdbc.util.SQLStatementLogger:org.hibernate.jdbc.util.FormatStyle determineActualStyle(org.hibernate.jdbc.util.FormatStyle)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.util.SQLStatementLogger:void logStatement(java.lang.String,org.hibernate.jdbc.util.FormatStyle)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void log(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareBatchStatement(java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement getCallableStatement(java.sql.Connection,java.lang.String,boolean)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement getPreparedStatement(java.sql.Connection,java.lang.String,boolean,boolean,java.lang.String[],org.hibernate.ScrollMode,boolean)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaExport:org.hibernate.tool.hbm2ddl.SchemaExport setFormat(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdate:void <init>(org.hibernate.cfg.Configuration,org.hibernate.cfg.Settings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.SchemaUpdate:void setFormat(boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processJarFile(java.io.File,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processFile(java.io.File,java.util.Set)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollectionElementsJoin(org.hibernate.persister.collection.QueryableCollection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.IndexNode:void resolve(boolean,boolean,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.proxy.AbstractLazyInitializer:void setSession(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.StatefulPersistenceContext deserialize(java.io.ObjectInputStream,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap subMap(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap headMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap headMap(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap headMap(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap tailMap(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.util.SortedMap tailMap(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.SortedMap tailMap(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object firstKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.lang.Object firstKey()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object firstKey()"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object lastKey()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedMap:java.lang.Object lastKey()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.lang.Object lastKey()"
        ]
    },
    "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void validateSchema(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void secondPassCompile()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void secondPassCompile()",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentList:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:int countOccurrences(java.lang.Object,java.util.List,org.hibernate.type.Type,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.sql.SelectFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.InsertSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toStatementString()",
            "org.hibernate.sql.SimpleSelect:java.lang.String toWhereClause()",
            "org.hibernate.sql.InFragment:java.lang.String toFragmentString()",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateSubcriteria()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateExpressionEntries()",
            "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateOrderings()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SQLQueryImpl:void verifyParameters()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.function.DerbyConcatFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.dialect.resolver.DialectResolverSet:org.hibernate.dialect.Dialect resolveDialect(java.sql.DatabaseMetaData)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.BasicCollectionJoinWalker:void initStatementString(java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.hql.QueryLoader:int bindParameterValues(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.JoinWalker:org.hibernate.sql.JoinFragment mergeOuterJoins(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countEntityPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:int countCollectionPersisters(java.util.List)",
            "org.hibernate.loader.JoinWalker:java.lang.String orderBy(java.util.List)",
            "org.hibernate.loader.JoinWalker:void initPersisters(java.util.List,org.hibernate.LockMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.ArrayType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void addReadWriteMethods(javassist.bytecode.ClassFile)",
            "org.hibernate.bytecode.javassist.FieldTransformer:void transformInvokevirtualsIntoPutAndGetfields(javassist.bytecode.ClassFile)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Iterator filesets()",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.hql.ast.tree.IndexNode$AggregatedIndexCollectionSelectorParameterSpecifications:java.lang.String collectDisplayInfo()",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.ast.HqlSqlWalker:void processQuery(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void beforeSelectClause()",
            "org.hibernate.hql.ast.ErrorCounter:java.lang.String getErrorString()",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void validateScrollability()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String renderScalarSelect()",
            "org.hibernate.hql.classic.ClauseParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.ActionQueue$InsertActionSorter:void sort()",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.UniqueKey createUniqueKey(java.util.List)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.ForeignKey createForeignKey(java.lang.String,java.util.List,java.lang.String,java.util.List)",
            "org.hibernate.mapping.Table:java.util.Iterator getCheckConstraintsIterator()",
            "org.hibernate.mapping.SimpleValue:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Constraint:java.util.Iterator columnIterator()",
            "org.hibernate.mapping.Index:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Junction:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toSqlString(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.Junction:java.lang.String toString()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentSet:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Iterator iterateEntityNameResolvers(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:java.util.Iterator iterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentList:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.collection.PersistentBag:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateSubcriteria()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAliasCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createAssociationPathCriteriaMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateExpressionEntries()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getWhereCondition()"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:java.util.Iterator iterateOrderings()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.lang.String getOrderBy()"
        ]
    },
    "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void registerEntityNameResolvers(org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.LazyIterator:boolean hasNext()",
            "org.hibernate.util.LazyIterator:java.lang.Object next()"
        ]
    },
    "org.hibernate.type.ArrayType:java.util.Iterator getElementsIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tool.instrument.BasicInstrumentationTask:java.util.Iterator filesets()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getColumnIterator()"
        ]
    },
    "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()"
        ]
    },
    "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.cfg.Configuration:void secondPassCompileForeignKeys(org.hibernate.mapping.Table,java.util.Set)",
            "org.hibernate.mapping.DenormalizedTable:void createForeignKeys()"
        ]
    },
    "org.hibernate.mapping.Table:java.util.Iterator getCheckConstraintsIterator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.SimpleValue:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.CollectionSecondPass:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:java.lang.String columns(org.hibernate.mapping.Value)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.OneToOne:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.OneToOne:java.util.List getConstraintColumns()",
            "org.hibernate.mapping.SimpleValue:boolean hasFormula()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.SimpleValue:boolean isNullable()",
            "org.hibernate.mapping.SimpleValue:boolean[] getColumnInsertability()",
            "org.hibernate.mapping.Property:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.OneToMany:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Set:void createPrimaryKey()",
            "org.hibernate.mapping.IdentifierCollection:void createPrimaryKey()",
            "org.hibernate.mapping.Collection:void checkColumnDuplication()",
            "org.hibernate.mapping.Join:void createPrimaryKey()",
            "org.hibernate.mapping.IndexedCollection:void createPrimaryKey()",
            "org.hibernate.mapping.SingleTableSubclass:java.util.Iterator getDiscriminatorColumnIterator()",
            "org.hibernate.mapping.PersistentClass:void createPrimaryKey()",
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.Constraint:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.PrimaryKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void prepareTemporaryTables(org.hibernate.engine.Mapping,org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.ForeignKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ForeignKey:void alignColumns(org.hibernate.mapping.Table)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.UniqueKey:boolean isGenerated(org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.mapping.Constraint:java.util.Iterator columnIterator()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Index:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Index:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Index:java.lang.String sqlConstraintString(org.hibernate.dialect.Dialect)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getIndexIterator()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray()",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.Object[] valueArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray()",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.Object[] valueArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)"
        ]
    },
    "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.Property:org.hibernate.criterion.Criterion in(java.util.Collection)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentList:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentIdentifierBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentBag:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()",
            "org.hibernate.cache.entry.StructuredCollectionCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.JoinedIterator:void <init>(java.util.List)",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.Object[] typecast(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.tool.hbm2ddl.IndexMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata[] getColumns()",
            "org.hibernate.hql.ast.tree.FromElement:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.hql.ast.tree.SqlFragment:org.hibernate.param.ParameterSpecification[] getEmbeddedParameters()",
            "org.hibernate.engine.ResultSetMappingDefinition:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.proxy.pojo.cglib.CGLIBProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)"
        ]
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQuerySpecification generateQuerySpecification(java.util.Map)"
        ]
    },
    "org.hibernate.util.JoinedIterator:void <init>(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassClosureIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassPropertyClosureIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getPropertyIterator()"
        ]
    },
    "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaCreationScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:java.lang.String[] generateSchemaUpdateScript(org.hibernate.dialect.Dialect,org.hibernate.tool.hbm2ddl.DatabaseMetadata)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String[] getNamedParameters()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getQueries()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getEntityNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getCollectionRoleNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getSecondLevelCacheRegionNames()",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void autoDiscoverTypes(java.sql.ResultSet)",
            "org.hibernate.loader.criteria.CriteriaJoinWalker:void <init>(org.hibernate.persister.entity.OuterJoinLoadable,org.hibernate.loader.criteria.CriteriaQueryTranslator,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.impl.CriteriaImpl,java.lang.String,java.util.Map,java.lang.String)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:java.lang.String[] getFiles()",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:java.lang.String[] getFiles()",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getColumnAliases(int)",
            "org.hibernate.criterion.ProjectionList:java.lang.String[] getAliases()"
        ]
    },
    "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type[] typeArray()",
            "org.hibernate.loader.custom.CustomLoader:void <init>(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.loader.custom.CustomLoader:void autoDiscoverTypes(java.sql.ResultSet)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.hql.ast.tree.IntoClause:void initializeColumns()",
            "org.hibernate.criterion.ProjectionList:org.hibernate.type.Type[] getTypes(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.ArrayHelper:java.lang.Object[] typecast(java.lang.Object[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tool.hbm2ddl.IndexMetadata:org.hibernate.tool.hbm2ddl.ColumnMetadata[] getColumns()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.ResultSetMappingDefinition:org.hibernate.engine.query.sql.NativeSQLQueryReturn[] getQueryReturns()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SQLQueryImpl:void <init>(org.hibernate.engine.NamedSQLQueryDefinition,org.hibernate.engine.SessionImplementor,org.hibernate.engine.query.ParameterMetadata)",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery setResultSetMapping(java.lang.String)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean containsAll(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentList:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean containsAll(java.util.Collection)",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int indexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean remove(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int indexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int indexOf(java.lang.Object)",
            "org.hibernate.loader.hql.QueryLoader:void initialize(org.hibernate.hql.ast.tree.SelectClause)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int lastIndexOf(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentList:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentIdentifierBag:int lastIndexOf(java.lang.Object)",
            "org.hibernate.collection.PersistentBag:int lastIndexOf(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator()",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator()"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:java.lang.String[] generateDropSchemaScript(org.hibernate.dialect.Dialect)",
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentList:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.collection.PersistentBag:java.util.ListIterator listIterator(int)",
            "org.hibernate.hql.ast.util.JoinProcessor:void processJoins(org.hibernate.hql.ast.tree.QueryNode)"
        ]
    },
    "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.List subList(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection$ListProxy:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentList:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.List subList(int,int)",
            "org.hibernate.collection.PersistentBag:java.util.List subList(int,int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.DetachedCriteria:java.lang.String toString()",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.CriteriaImpl:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.Distinct:java.lang.String toString()",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.mapping.Table$ForeignKeyKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.query.sql.NativeSQLQuerySpecification:void <init>(java.lang.String,org.hibernate.engine.query.sql.NativeSQLQueryReturn[],java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.engine.query.sql.NativeSQLQuerySpecification generateQuerySpecification(java.util.Map)"
        ]
    },
    "org.hibernate.mapping.Table$ForeignKeyKey:int hashCode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.ArrayHelper:int hash(java.lang.Object[])",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.type.AbstractType:int getHashCode(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:int hashCode()",
            "org.hibernate.mapping.Table:java.lang.String uniqueColumnString(java.util.Iterator,java.lang.String)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentSet:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Iterator iterateEntityNameResolvers(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:java.util.Iterator iterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentSet:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.util.Iterator iterateEntityNameResolvers(org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl$CoordinatingEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator(java.util.Map)"
        ]
    },
    "org.hibernate.util.IdentitySet:java.util.Iterator iterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.util.Map)",
            "org.hibernate.cfg.Environment:void verifyProperties(java.util.Properties)",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration mergeProperties(java.util.Properties)",
            "org.hibernate.collection.PersistentSortedMap:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentList:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean removeAll(java.util.Collection)",
            "org.hibernate.collection.PersistentIdentifierBag:boolean addAll(int,java.util.Collection)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator iterator()",
            "org.hibernate.collection.PersistentSet:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:void putAll(java.util.Map)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:void <init>(org.hibernate.engine.SessionImplementor,java.util.Collection)",
            "org.hibernate.collection.PersistentBag:boolean addAll(java.util.Collection)",
            "org.hibernate.collection.PersistentSortedSet:java.io.Serializable snapshot(org.hibernate.persister.collection.BasicCollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.sql.ForUpdateFragment:void <init>(org.hibernate.dialect.Dialect,java.util.Map,java.util.Map)",
            "org.hibernate.sql.DerbyCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Update:java.lang.String toStatementString()",
            "org.hibernate.sql.ANSICaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.sql.HSQLCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.MckoiCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.sql.DecodeCaseFragment:java.lang.String toFragmentString()",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.param.DynamicFilterParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.FilterImpl:void validate()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Iterator iterateEntityNameResolvers(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Map checkNamedQueries()",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionFactoryObjectFactory$1:void objectRemoved(javax.naming.event.NamingEvent)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterLists(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.dialect.AbstractTransactSQLDialect:java.lang.String applyLocksToSql(java.lang.String,java.util.Map,java.util.Map)",
            "org.hibernate.dialect.TypeNames:java.lang.String get(int,int,int,int)",
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:org.hibernate.EntityMode guessEntityMode(java.lang.Object)",
            "org.hibernate.stat.SecondLevelCacheStatistics:java.util.Map getEntries()",
            "org.hibernate.loader.collection.SubselectCollectionLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.collection.SubselectOneToManyLoader:void <init>(org.hibernate.persister.collection.QueryableCollection,java.lang.String,java.util.Collection,org.hibernate.engine.QueryParameters,java.util.Map,org.hibernate.engine.SessionFactoryImplementor,java.util.Map)",
            "org.hibernate.loader.custom.sql.SQLQueryReturnProcessor:java.util.Map filter(java.util.Map)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaEntityNameMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:void createCriteriaSQLAliasMap()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.QueryParameters getQueryParameters()",
            "org.hibernate.loader.hql.QueryLoader:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.loader.Loader:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.entry.StructuredMapCacheEntry:java.lang.Object destructure(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.UpdateTimestampsCache:boolean isUpToDate(java.util.Set,java.lang.Long)",
            "org.hibernate.cache.FilterKey:void <init>(java.lang.String,java.util.Map,java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.FilterHelper:void <init>(java.util.Map,org.hibernate.dialect.Dialect,org.hibernate.dialect.function.SQLFunctionRegistry)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.util.IdentityMap:void putAll(java.util.Map)",
            "org.hibernate.util.IdentityMap:java.util.Set entrySet()",
            "org.hibernate.util.IdentityMap:java.util.List entryList()",
            "org.hibernate.util.IdentityMap:java.util.Map$Entry[] entryArray()",
            "org.hibernate.util.IdentityMap:java.util.Map invert(java.util.Map)",
            "org.hibernate.util.NamingHelper:java.util.Properties getJndiProperties(java.util.Properties)",
            "org.hibernate.util.IdentitySet:java.util.Iterator iterator()",
            "org.hibernate.util.IdentitySet:boolean containsAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean addAll(java.util.Collection)",
            "org.hibernate.util.IdentitySet:boolean removeAll(java.util.Collection)",
            "org.hibernate.util.ExternalSessionFactoryConfig:org.hibernate.cfg.Configuration buildConfiguration()",
            "org.hibernate.util.ExternalSessionFactoryConfig:void addAll(java.util.Properties,java.util.Map)",
            "org.hibernate.util.ArrayHelper:int[] toIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:boolean[] toBooleanArray(java.util.Collection)",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.util.FastHashMap:int hashCode()",
            "org.hibernate.connection.ConnectionProviderFactory:java.util.Properties getConnectionProperties(java.util.Properties)",
            "org.hibernate.action.BulkOperationCleanupAction:void <init>(org.hibernate.engine.SessionImplementor,java.util.Set)",
            "org.hibernate.action.BulkOperationCleanupAction:void evictEntityRegions()",
            "org.hibernate.action.BulkOperationCleanupAction:void evictCollectionRegions()",
            "org.hibernate.event.def.EventCache:void putAll(java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MetaType:void <init>(java.util.Map,org.hibernate.type.Type)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.CollectionType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.type.MapType:java.lang.Object replaceElements(java.lang.Object,java.lang.Object,java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:java.lang.Object indexOf(java.lang.Object,java.lang.Object)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromElement findIntendedAliasedFromElementBasedOnCrazyJPARequirements(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:org.hibernate.hql.ast.tree.FromClause locateChildFromClauseWithJoinByPath(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:void resolve()",
            "org.hibernate.hql.ast.tree.AbstractStatement:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:void <init>(java.util.List)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void mergeJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:org.hibernate.LockMode[] getLockModes(java.util.Map)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.lang.String applyLocks(java.lang.String,java.util.Map,org.hibernate.dialect.Dialect)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.loading.LoadContexts:void cleanupCollectionXRefs(java.util.Set)",
            "org.hibernate.engine.query.QueryPlanCache:org.hibernate.engine.query.ParameterMetadata buildNativeSQLParameterMetadata(java.lang.String)",
            "org.hibernate.engine.query.HQLQueryPlan:org.hibernate.engine.query.ParameterMetadata buildParameterMetadata(org.hibernate.hql.ParameterTranslations,java.lang.String)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.engine.StatefulPersistenceContext:java.io.Serializable getOwnerId(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInOwner(java.lang.String,java.lang.String,java.lang.Object,java.util.Map)",
            "org.hibernate.engine.StatefulPersistenceContext:void serialize(java.io.ObjectOutputStream)",
            "org.hibernate.engine.QueryParameters:void processFilters(java.lang.String,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getCollectionBatch(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)",
            "org.hibernate.engine.ParameterBinder:int bindNamedParameters(java.sql.PreparedStatement,java.util.Map,int,org.hibernate.engine.ParameterBinder$NamedParameterSource,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Map getUniqueKeys()",
            "org.hibernate.mapping.SimpleValue:org.hibernate.id.IdentifierGenerator createIdentifierGenerator(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String,org.hibernate.mapping.RootClass)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getUniqueKeyIterator()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion allEq(java.util.Map)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray()",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.util.IdentitySet:java.lang.Object[] toArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray()",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray()",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray()",
            "org.hibernate.criterion.Restrictions:org.hibernate.criterion.Criterion in(java.lang.String,java.util.Collection)"
        ]
    },
    "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.proxy.pojo.cglib.CGLIBProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)"
        ]
    },
    "org.hibernate.util.IdentitySet:java.lang.Object[] toArray(java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentMap$EntrySetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.AbstractPersistentCollection$SetProxy:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.collection.PersistentSet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.IdentitySet:java.lang.Object[] toArray(java.lang.Object[])",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:java.lang.String[][] to2DStringArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:int[][] to2DIntArray(java.util.Collection)",
            "org.hibernate.util.ArrayHelper:org.hibernate.type.Type[] toTypeArray(java.util.Collection)",
            "org.hibernate.secure.JACCPermissions:void checkPermission(java.lang.Class,java.lang.String,javax.security.jacc.EJBMethodPermission)",
            "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.proxy.pojo.cglib.CGLIBProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)"
        ]
    },
    "org.hibernate.proxy.pojo.javassist.JavassistProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)"
        ]
    },
    "org.hibernate.proxy.pojo.cglib.CGLIBProxyFactory:void postInstantiate(java.lang.String,java.lang.Class,java.util.Set,java.lang.reflect.Method,java.lang.reflect.Method,org.hibernate.type.AbstractComponentType)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)"
        ]
    },
    "org.hibernate.tool.hbm2ddl.DatabaseMetadata:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.engine.query.sql.NativeSQLQuerySpecification:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:boolean equals(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentBag:int occurrences(java.lang.Object)",
            "org.hibernate.util.PropertiesHelper:void resolvePlaceHolders(java.util.Properties)",
            "org.hibernate.util.EqualsHelper:boolean equals(java.lang.Object,java.lang.Object)",
            "org.hibernate.util.ArrayHelper:int indexOf(java.lang.Object[],java.lang.Object)",
            "org.hibernate.util.ArrayHelper:boolean isEquals(java.lang.Object[],java.lang.Object[])",
            "org.hibernate.util.FastHashMap:boolean equals(java.lang.Object)",
            "org.hibernate.event.def.ProxyVisitor:boolean isOwnerUnchanged(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SerializableType:boolean isEqual(java.lang.Object,java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter:boolean equals(java.lang.Object)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter$TransactionAdapter$1:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.engine.VersionValue:java.lang.Boolean isUnsaved(java.lang.Object)",
            "org.hibernate.engine.IdentifierValue:java.lang.Boolean isUnsaved(java.io.Serializable)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.util.Set keySet()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Set keySet()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getDefinedFilterNames()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getEntityKeys()",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getCollectionKeys()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getQueries()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getEntityNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getCollectionRoleNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getSecondLevelCacheRegionNames()",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.event.def.EventCache:java.util.Set keySet()",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:java.lang.String toString()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl$2:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Set keySet()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.ParameterMetadata:java.util.Set getNamedParameterNames()",
            "org.hibernate.engine.FilterDefinition:java.util.Set getParameterNames()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.String toString()",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:java.util.Set getDefinedFilterNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getEntityKeys()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getCollectionKeys()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.StatisticsImpl:java.lang.String[] getQueries()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.StatisticsImpl:java.lang.String[] getEntityNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.StatisticsImpl:java.lang.String[] getCollectionRoleNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.StatisticsImpl:java.lang.String[] getSecondLevelCacheRegionNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.event.def.EventCache:java.util.Set keySet()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void processExtendsQueue()",
            "org.hibernate.cfg.Configuration:org.dom4j.Document findPossibleExtends()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentSet:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentSet:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentMap:java.util.Set keySet()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.util.Set getDefinedFilterNames()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getEntityKeys()",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getCollectionKeys()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getQueries()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getEntityNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getCollectionRoleNames()",
            "org.hibernate.stat.StatisticsImpl:java.lang.String[] getSecondLevelCacheRegionNames()",
            "org.hibernate.loader.Loader:java.util.Map buildNamedParameterLocMap(org.hibernate.engine.QueryParameters)",
            "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator()",
            "org.hibernate.event.def.EventCache:java.util.Set keySet()",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.tool.hbm2ddl.DatabaseMetadata:java.lang.String toString()",
            "org.hibernate.tool.hbm2ddl.TableMetadata:void <init>(java.sql.ResultSet,java.sql.DatabaseMetaData,boolean)",
            "org.hibernate.hql.ast.tree.FromClause:boolean containsTableAlias(java.lang.String)",
            "org.hibernate.hql.ast.tree.FromClause:java.lang.String getDisplayText()",
            "org.hibernate.hql.ast.ParameterTranslationsImpl:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl$2:java.util.Set getNamedParameterNames()",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Set keySet()",
            "org.hibernate.engine.query.QueryPlanCache$FilterQueryPlanKey:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.HQLQueryPlan:void <init>(java.lang.String,java.lang.String,boolean,java.util.Map,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.engine.query.QueryPlanCache$HQLQueryPlanKey:void <init>(java.lang.String,boolean,java.util.Map)",
            "org.hibernate.engine.query.ParameterMetadata:java.util.Set getNamedParameterNames()",
            "org.hibernate.engine.FilterDefinition:java.util.Set getParameterNames()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.String toString()",
            "org.hibernate.engine.BatchFetchQueue:java.io.Serializable[] getEntityBatch(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,int,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.hql.ast.ParameterTranslationsImpl:java.util.Set getNamedParameterNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.QueryTranslatorImpl$2:java.util.Set getNamedParameterNames()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.engine.query.ParameterMetadata:java.util.Set getNamedParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String[] getNamedParameters()",
            "org.hibernate.impl.AbstractQueryImpl:boolean hasNamedParameters()",
            "org.hibernate.impl.AbstractQueryImpl:void verifyParameters(boolean)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)"
        ]
    },
    "org.hibernate.engine.FilterDefinition:java.util.Set getParameterNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FilterImpl:void validate()"
        ]
    },
    "org.hibernate.engine.StatefulPersistenceContext:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection values()",
            "org.hibernate.collection.PersistentSortedMap$SortedSubMap:java.util.Collection values()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentityMap:java.util.Collection values()",
            "org.hibernate.event.def.EventCache:java.util.Collection values()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Collection values()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection values()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentityMap:java.util.Collection values()",
            "org.hibernate.event.def.EventCache:java.util.Collection values()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Collection values()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()"
        ]
    },
    "org.hibernate.event.def.EventCache:java.util.Collection values()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateCollections()",
            "org.hibernate.cfg.Mappings:java.util.Iterator iterateTables()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getClassMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getCollectionMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator getTableMappings()",
            "org.hibernate.cfg.Configuration:java.util.Iterator iterateGenerators(org.hibernate.dialect.Dialect)",
            "org.hibernate.cfg.Configuration:void validate()",
            "org.hibernate.collection.PersistentIdentifierBag:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection getOrphans(java.io.Serializable,java.lang.String)",
            "org.hibernate.collection.PersistentMap:java.util.Collection values()",
            "org.hibernate.sql.Insert:java.lang.String toStatementString()",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void close()",
            "org.hibernate.impl.SessionImpl:java.sql.Connection close()",
            "org.hibernate.impl.SessionImpl:void managedFlush()",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.tuple.EntityModeToTuplizerMapping:java.util.Iterator iterateTuplizers()",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:java.util.Set getQuerySpaces()",
            "org.hibernate.cache.FilterKey:java.util.Set createFilterKeys(java.util.Map,org.hibernate.EntityMode)",
            "org.hibernate.util.LazyIterator:java.util.Iterator getIterator()",
            "org.hibernate.util.IdentityMap:java.util.Collection values()",
            "org.hibernate.event.def.EventCache:java.util.Collection values()",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.type.MapType:java.util.Iterator getElementsIterator(java.lang.Object)",
            "org.hibernate.tool.hbm2ddl.TableMetadata:org.hibernate.tool.hbm2ddl.ForeignKeyMetadata getForeignKeyMetadata(org.hibernate.mapping.ForeignKey)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:void renderSQL()",
            "org.hibernate.proxy.map.MapProxy:java.util.Collection values()",
            "org.hibernate.engine.loading.LoadContexts:void cleanup()",
            "org.hibernate.engine.StatefulPersistenceContext:void clear()",
            "org.hibernate.engine.StatefulPersistenceContext:void afterTransactionCompletion()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object removeEntity(org.hibernate.engine.EntityKey)",
            "org.hibernate.mapping.Table:org.hibernate.mapping.Column getColumn(int)",
            "org.hibernate.mapping.Table:java.util.Iterator getColumnIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getIndexIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getForeignKeyIterator()",
            "org.hibernate.mapping.Table:java.util.Iterator getUniqueKeyIterator()"
        ]
    },
    "org.hibernate.util.IdentityMap:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentMap:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet subSet(java.lang.Object,java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet headSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet headSet(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet headSet(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet tailSet(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.util.SortedSet tailSet(java.lang.Object)",
            "org.hibernate.collection.PersistentSortedSet:java.util.SortedSet tailSet(java.lang.Object)"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.lang.Object first()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.lang.Object first()",
            "org.hibernate.collection.PersistentSortedSet:java.lang.Object first()"
        ]
    },
    "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.lang.Object last()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentSortedSet$SubSetProxy:java.lang.Object last()",
            "org.hibernate.collection.PersistentSortedSet:java.lang.Object last()"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration configure()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cfg.Configuration:void parseMappingElement(org.dom4j.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)"
        ]
    },
    "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration addClass(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter:javax.transaction.Transaction getTransaction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.util.JTAHelper:boolean isTransactionInProgress(org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.jdbc.JDBCContext:boolean registerSynchronizationIfPossible()",
            "org.hibernate.transaction.CMTTransaction:javax.transaction.Transaction getTransaction()",
            "org.hibernate.transaction.JTATransaction:void registerSynchronization(javax.transaction.Synchronization)",
            "org.hibernate.transaction.CMTTransactionFactory:boolean isTransactionInProgress(org.hibernate.jdbc.JDBCContext,org.hibernate.transaction.TransactionFactory$Context,org.hibernate.Transaction)",
            "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter:int getStatus()",
            "org.hibernate.context.JTASessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.transaction.TransactionFactoryFactory:org.hibernate.transaction.TransactionFactory buildTransactionFactory(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.transaction.TransactionFactory createTransactionFactory(java.util.Properties)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:boolean setRowNumber(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.SelectClause:void initializeColumnNames()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.SelectClause:void finishInitialization(java.util.ArrayList)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.engine.JoinSequence createJoinSequence(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createCollection(org.hibernate.persister.collection.QueryableCollection,java.lang.String,int,boolean,boolean)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createEntityAssociation(java.lang.String,java.lang.String,int)",
            "org.hibernate.hql.ast.tree.FromElementFactory:org.hibernate.hql.ast.tree.FromElement createManyToMany(java.lang.String,java.lang.String,java.lang.String,org.hibernate.persister.entity.Queryable,org.hibernate.type.EntityType,int)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean wrapCollections(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,org.hibernate.type.Type[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean hasDirtyCollections(org.hibernate.event.FlushEntityEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.Status)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean isUpdateNecessary(org.hibernate.event.FlushEntityEvent,boolean)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean isUpdateNecessary(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultReplicateEventListener:boolean visitCollectionsBeforeSave(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.type.Type[],org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:boolean visitCollectionsBeforeSave(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.type.Type[],org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultReplicateEventListener:boolean visitCollectionsBeforeSave(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.type.Type[],org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:boolean invokeSaveLifecycle(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.event.def.DefaultDeleteEventListener:boolean invokeDeleteLifecycle(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)"
        ]
    },
    "org.hibernate.event.def.DefaultPostLoadEventListener:void onPostLoad(org.hibernate.event.PostLoadEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:boolean invokeUpdateLifecycle(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:void validate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.Status,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:void validate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:boolean[] getPropertyUpdateability(java.lang.Object,org.hibernate.EntityMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.loader.Loader:java.sql.ResultSet getResultSet(java.sql.PreparedStatement,boolean,boolean,org.hibernate.engine.RowSelection,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.hql.QueryLoader:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:org.hibernate.ScrollableResults scroll(org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.hql.HolderInstantiator,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.classic.QueryTranslatorImpl:java.util.Iterator iterate(org.hibernate.engine.QueryParameters,org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTPrinter:void showAst(antlr.collections.AST,java.io.PrintStream)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String showAsString(antlr.collections.AST,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.HqlParser:void showAst(antlr.collections.AST,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlParser:void showAst(antlr.collections.AST,java.io.PrintStream)"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String)",
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumns(java.lang.String,java.lang.String[])"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumns(java.lang.String,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.sql.SelectFragment generateSelectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String manyToManySelectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String identifierSelectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,org.hibernate.persister.entity.AbstractEntityPersister$InclusionChecker)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void appendElementColumns(org.hibernate.sql.SelectFragment,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void appendIndexColumns(org.hibernate.sql.SelectFragment,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String manyToManySelectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:void appendIdentifierColumns(org.hibernate.sql.SelectFragment,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String manyToManySelectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.persister.entity.UnionSubclassEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.persister.entity.SingleTableEntityPersister:void addDiscriminatorToSelect(org.hibernate.sql.SelectFragment,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String propertySelectFragment(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.SelectFragment createSelect(int[],int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String renderSelect(int[],int[],int[])"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addFormulas(java.lang.String,java.lang.String[],java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String concretePropertySelectFragment(java.lang.String,org.hibernate.persister.entity.AbstractEntityPersister$InclusionChecker)"
        ]
    },
    "org.hibernate.sql.SimpleSelect:org.hibernate.sql.SimpleSelect addColumns(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSelectString(org.hibernate.LockMode)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSelectVersionString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String getSelectByUniqueKeyString(java.lang.String)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria add(org.hibernate.criterion.Criterion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria add(org.hibernate.criterion.Criterion)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria add(org.hibernate.criterion.Criterion)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria addOrder(org.hibernate.criterion.Order)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SQLQueryImpl:org.hibernate.SQLQuery addEntity(java.lang.String,java.lang.Class,org.hibernate.LockMode)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,int,org.hibernate.impl.CriteriaImpl$1)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createAlias(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,java.lang.String,int,org.hibernate.impl.CriteriaImpl$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String,int)",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.util.XMLHelper$ErrorLogger:void fatalError(org.xml.sax.SAXParseException)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.util.NodeTraverser:void visitDepthFirst(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.NodeTraverser:void traverseDepthFirst(antlr.collections.AST)",
            "org.hibernate.hql.ast.util.NodeTraverser:void visitDepthFirst(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.tree.FromElement:void setOrigin(org.hibernate.hql.ast.tree.FromElement,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.SqlGenerator:void reportError(antlr.RecognitionException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.SqlGeneratorBase:void statement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void 'from'(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void groupExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void fromTable(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void setClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void comparisonExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void whereClauseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void conditionList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void orderDirection(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void filters(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void thetaJoins(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void sqlToken(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void distinctOrAll(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectColumn(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void selectAtom(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void count(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void methodCall(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void aggregate(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void constant(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void countExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void tableJoin(antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void booleanOp(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void binaryComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void exoticComparisonExpression(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void likeEscape(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void inList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void quantified(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parenSelect(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void simpleExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void addrExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void parameter(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void additiveExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void multiplicativeExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void caseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExprAfterMinusDiv(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void nestedExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.SqlGeneratorBase:void arguments(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlParser:void reportError(antlr.RecognitionException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void statement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void updateStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void deleteStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void selectStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void insertStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void optionalFromTokenFromClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void setClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void whereClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void assignment()",
            "org.hibernate.hql.antlr.HqlBaseParser:void stateField()",
            "org.hibernate.hql.antlr.HqlBaseParser:void newValue()",
            "org.hibernate.hql.antlr.HqlBaseParser:void path()",
            "org.hibernate.hql.antlr.HqlBaseParser:void concatenation()",
            "org.hibernate.hql.antlr.HqlBaseParser:void asAlias()",
            "org.hibernate.hql.antlr.HqlBaseParser:void queryRule()",
            "org.hibernate.hql.antlr.HqlBaseParser:void intoClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void insertablePropertySpec()",
            "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void union()",
            "org.hibernate.hql.antlr.HqlBaseParser:void selectFrom()",
            "org.hibernate.hql.antlr.HqlBaseParser:void groupByClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void orderByClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void selectClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void selectedPropertiesList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void newExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void selectObject()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromRange()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromJoin()",
            "org.hibernate.hql.antlr.HqlBaseParser:void propertyFetch()",
            "org.hibernate.hql.antlr.HqlBaseParser:void withClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void logicalExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClassOrOuterQueryPath()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inClassDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionElementsDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void alias()",
            "org.hibernate.hql.antlr.HqlBaseParser:void expression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void havingClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void orderElement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void ascendingOrDescending()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aliasedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void logicalOrExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void logicalAndExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void negatedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void equalityExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void additiveExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void betweenList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void likeEscape()",
            "org.hibernate.hql.antlr.HqlBaseParser:void compoundExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void multiplyExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void unaryExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void caseExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void quantifiedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void atom()",
            "org.hibernate.hql.antlr.HqlBaseParser:void whenClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void elseClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void altWhenClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void collectionExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void subQuery()",
            "org.hibernate.hql.antlr.HqlBaseParser:void exprList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void identPrimary()",
            "org.hibernate.hql.antlr.HqlBaseParser:void constant()",
            "org.hibernate.hql.antlr.HqlBaseParser:void expressionOrVector()",
            "org.hibernate.hql.antlr.HqlBaseParser:void vectorExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aggregate()"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void reportError(antlr.RecognitionException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void statement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void updateStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void deleteStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertStatement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void query(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void setClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void whereClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void intoClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:java.lang.String path(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void insertablePropertySpec(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void assignment(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void newValue(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void expr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void groupClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void orderExprs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void logicalExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExprList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void selectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasedSelectExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void identifier(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aliasRef(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constructor(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void functionCall(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void count(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunction(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void literal(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void arithmeticExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void aggregateExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElementList(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void fromElement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void joinElement(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:int joinType(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void pathAsIdent(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void withClause(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void comparisonExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void exprOrSubquery(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void inRhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void collectionFunctionOrSubselect(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExpr(antlr.collections.AST,boolean)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void constant(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void parameter(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void caseExpr(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void addrExprLhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyName(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void propertyRefLhs(antlr.collections.AST)",
            "org.hibernate.hql.antlr.HqlSqlBaseWalker:void numericInteger(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.SqlGenerator:void reportError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlParser:void reportError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void reportError(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.SqlGenerator:void reportWarning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.HqlParser:void reportWarning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlParser:antlr.collections.AST handleIdentifierError(antlr.Token,antlr.RecognitionException)"
        ]
    },
    "org.hibernate.hql.ast.HqlSqlWalker:void reportWarning(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.classic.WhereParser:void appendToken(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.hql.classic.WhereParser:void openExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:boolean continuePathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.hql.classic.HavingParser:void appendToken(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void end(org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.hql.classic.WhereParser:void openExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:boolean continuePathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription:void access$000(org.hibernate.engine.query.ParamLocationRecognizer$NamedParameterDescription,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.query.ParamLocationRecognizer:void namedParameter(java.lang.String,int)",
            "org.hibernate.engine.query.ParamLocationRecognizer:void jpaPositionalParameter(java.lang.String,int)"
        ]
    },
    "org.hibernate.criterion.ProjectionList:org.hibernate.criterion.ProjectionList add(org.hibernate.criterion.Projection,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.NaturalIdentifier:org.hibernate.criterion.NaturalIdentifier set(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Collection:org.hibernate.type.Type getType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void <init>(org.hibernate.mapping.Collection,org.hibernate.cache.access.CollectionRegionAccessStrategy,org.hibernate.cfg.Configuration,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.StandardProperty buildStandardProperty(org.hibernate.mapping.Property,boolean)",
            "org.hibernate.mapping.Property:org.hibernate.type.Type getType()",
            "org.hibernate.mapping.Property:org.hibernate.engine.CascadeStyle getCascadeStyle()",
            "org.hibernate.mapping.Column:int getSqlTypeCode(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.IndexedCollection:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.QName getQName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.QName getQName(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setQName(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setQName(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setQName(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespace()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespace()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForURI(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List getNamespacesForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List getNamespacesForURI(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List getNamespacesForURI(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespacePrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getNamespacePrefix()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespacePrefix()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespaceURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getNamespaceURI()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespaceURI()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getQualifiedName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getQualifiedName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getQualifiedName()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List additionalNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List additionalNamespaces()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List additionalNamespaces()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List declaredNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List declaredNamespaces()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List declaredNamespaces()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:void setIndex(org.dom4j.Element,java.lang.String,java.lang.String)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addComment(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addComment(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addCDATA(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addCDATA(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addCDATA(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addEntity(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addEntity(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addText(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Attribute)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Attribute)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.CDATA)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.CDATA)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Entity)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Entity)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Text)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Text)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Namespace)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Namespace)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Attribute)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Attribute)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.CDATA)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.CDATA)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Entity)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Entity)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Namespace)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Namespace)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Text)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Text)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean supportsParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean supportsParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean supportsParent()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element getParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element getParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element getParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setParent(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setParent(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setParent(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Document getDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Document getDocument()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Document getDocument()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setDocument(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setDocument(org.dom4j.Document)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setDocument(org.dom4j.Document)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean isReadOnly()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isReadOnly()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean hasContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasContent()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void initOuterJoinFetchSetting(org.dom4j.Element,org.hibernate.mapping.Fetchable)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String extractNodeName(org.dom4j.Element)",
            "org.hibernate.tuple.Dom4jInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String getName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getName()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setName(java.lang.String)",
            "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setName(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String getText()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getText()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setText(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getTextTrim()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComment(org.hibernate.mapping.Table,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String getTextTrim()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getTextTrim()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getStringValue()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getStringValue()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getPath()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getPath(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getUniquePath()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String asXML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String asXML()",
            "org.hibernate.util.XMLHelper:void dump(org.dom4j.Element)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String asXML()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void write(java.io.Writer)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void write(java.io.Writer)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:short getNodeType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:short getNodeType()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:short getNodeType()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNodeTypeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getNodeTypeName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNodeTypeName()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node detach()",
            "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object selectObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.Object selectObject(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object selectObject(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node selectSingleNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node selectSingleNode(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node selectSingleNode(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String valueOf(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String valueOf(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String valueOf(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Number numberValueOf(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.Number numberValueOf(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Number numberValueOf(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean matches(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean matches(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean matches(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.XPath createXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.XPath createXPath(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.XPath createXPath(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node asXPathResult(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node asXPathResult(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node asXPathResult(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void accept(org.dom4j.Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void accept(org.dom4j.Visitor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void accept(org.dom4j.Visitor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object clone()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.javassist.BulkAccessor:java.lang.Class[] getPropertyTypes()",
            "org.hibernate.bytecode.javassist.BulkAccessor:java.lang.String[] getGetters()",
            "org.hibernate.bytecode.javassist.BulkAccessor:java.lang.String[] getSetters()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object getData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.Object getData()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object getData()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setData(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setData(java.lang.Object)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setData(java.lang.Object)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List attributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List attributes()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List attributes()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributes(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setAttributes(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributes(java.util.List)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:int attributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:int attributeCount()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int attributeCount()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator attributeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator attributeIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator attributeIterator()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(int)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindImport(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void extractRootAttributes(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:boolean isCallable(org.dom4j.Element,boolean)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.engine.ExecuteUpdateResultCheckStyle getResultCheckStyle(org.dom4j.Element,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getClassTableName(org.hibernate.mapping.PersistentClass,org.dom4j.Element,java.lang.String,java.lang.String,org.hibernate.mapping.Table,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValue(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.Fetchable,org.hibernate.cfg.Mappings,java.lang.String,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindColumnsOrFormula(org.dom4j.Element,org.hibernate.mapping.SimpleValue,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindArray(org.dom4j.Element,org.hibernate.mapping.Array,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.Component,org.hibernate.mapping.PersistentClass,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getTypeFromXML(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:void initOuterJoinFetchSetting(org.dom4j.Element,org.hibernate.mapping.Fetchable)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void makeVersion(org.dom4j.Element,org.hibernate.mapping.SimpleValue)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getEntityName(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseMappingElement(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$AttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindVersioningProperty(org.hibernate.mapping.Table,org.dom4j.Element,org.hibernate.cfg.Mappings,java.lang.String,org.hibernate.mapping.RootClass,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDiscriminatorProperty(org.hibernate.mapping.Table,org.hibernate.mapping.RootClass,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDom4jRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.ToOne,org.hibernate.cfg.Mappings,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void validateCascade(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToMany(org.dom4j.Element,org.hibernate.mapping.OneToMany,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.Component,org.hibernate.mapping.PersistentClass,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getPropertyName(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.PersistentClass getSuperclass(org.hibernate.cfg.Mappings,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getEntityName(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn bindReturnJoin(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn bindLoadCollection(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseListener(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.String getIndex(org.dom4j.Element,java.lang.String,int)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setAttributeValue(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setAttributeValue(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComment(org.hibernate.mapping.Table,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindIdentifierCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.IdentifierCollection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)",
            "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element element(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element element(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.tuple.ElementWrapper:java.util.List elements()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.tuple.ElementWrapper:java.util.List elements(java.lang.String)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List elements(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isRootElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean isRootElement()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isRootElement()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasMixedContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean hasMixedContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasMixedContent()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isTextOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean isTextOnly()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isTextOnly()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void appendAttributes(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void appendAttributes(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void appendAttributes(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementText(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementTextTrim(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementTextTrim(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node getXPathResult(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node getXPathResult(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node getXPathResult(int)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node node(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node node(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node node(int)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:int indexOf(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:int indexOf(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int indexOf(org.dom4j.Node)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:int nodeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:int nodeCount()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int nodeCount()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element elementByID(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element elementByID(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element elementByID(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List content()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List content()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List content()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator nodeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator nodeIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator nodeIterator()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setContent(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setContent(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setContent(java.util.List)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void appendContent(org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void appendContent(org.dom4j.Branch)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void appendContent(org.dom4j.Branch)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void clearContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void clearContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void clearContent()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List processingInstructions()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions()"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List processingInstructions(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void setProcessingInstructions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setProcessingInstructions(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setProcessingInstructions(java.util.List)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(org.dom4j.QName)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean removeProcessingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean removeProcessingInstruction(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean removeProcessingInstruction(java.lang.String)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Node)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Comment)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Comment)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Element)",
            "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.ProcessingInstruction)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Comment)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Comment)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node detach()",
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Element)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.hibernate.proxy.dom4j.Dom4jProxy:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void normalize()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void normalize()"
        ]
    },
    "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:org.hibernate.bytecode.ClassTransformer getClassTransformer(org.hibernate.bytecode.util.ClassDescriptor,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$2:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processClassFile(java.io.File,java.util.Set)"
        ]
    },
    "org.hibernate.bytecode.buildtime.CGLIBInstrumenter$CustomClassDescriptor:void <init>(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:org.hibernate.bytecode.util.ClassDescriptor getClassDescriptor(byte[])"
        ]
    },
    "org.hibernate.tool.instrument.cglib.InstrumentTask:org.hibernate.bytecode.buildtime.Instrumenter buildInstrumenter(org.hibernate.bytecode.buildtime.Logger,org.hibernate.bytecode.buildtime.Instrumenter$Options)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.bytecode.buildtime.JavassistInstrumenter$CustomClassDescriptor:boolean isInstrumented()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:org.hibernate.bytecode.ClassTransformer getClassTransformer(org.hibernate.bytecode.util.ClassDescriptor,java.util.Set)",
            "org.hibernate.bytecode.buildtime.JavassistInstrumenter:org.hibernate.bytecode.ClassTransformer getClassTransformer(org.hibernate.bytecode.util.ClassDescriptor,java.util.Set)"
        ]
    },
    "org.hibernate.bytecode.buildtime.JavassistInstrumenter:org.hibernate.bytecode.ClassTransformer getClassTransformer(org.hibernate.bytecode.util.ClassDescriptor,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$2:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processClassFile(java.io.File,java.util.Set)"
        ]
    },
    "org.hibernate.tool.instrument.javassist.InstrumentTask:org.hibernate.bytecode.buildtime.Instrumenter buildInstrumenter(org.hibernate.bytecode.buildtime.Logger,org.hibernate.bytecode.buildtime.Instrumenter$Options)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.stat.SecondLevelCacheStatistics:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.cache.UpdateTimestampsCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.StandardQueryCache:void clear()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries()",
            "org.hibernate.impl.SessionFactoryImpl:void evictQueries(java.lang.String)"
        ]
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void removeAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.impl.bridge.CollectionAccessStrategyAdapter:void evictAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void evictCollection(java.lang.String)"
        ]
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void unlockRegion(org.hibernate.cache.access.SoftLock)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void removeAll()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.cache.impl.bridge.EntityAccessStrategyAdapter:void evictAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void evictEntity(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:void evict(java.lang.Class)"
        ]
    },
    "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.sql.JoinFragment createJoin(int[],java.lang.String)"
        ]
    },
    "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.QueryJoinFragment:void addJoin(java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String[],int,java.lang.String)",
            "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.engine.JoinSequence:org.hibernate.sql.JoinFragment toJoinFragment(java.util.Map,boolean,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.id.enhanced.OptimizerFactory$PooledOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.enhanced.SequenceStyleGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.id.enhanced.OptimizerFactory$NoopOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.enhanced.SequenceStyleGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.id.enhanced.OptimizerFactory$HiLoOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.enhanced.SequenceStyleGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.id.IncrementGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.impl.ScrollableResultsImpl:void afterLast()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:void beforeFirst()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean isFirst()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:boolean isLast()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.ScrollableResultsImpl:int getRowNumber()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.FetchingScrollableResultsImpl:void beforeFirst()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FetchingScrollableResultsImpl:boolean first()"
        ]
    },
    "org.hibernate.impl.SessionImpl:void doWork(org.hibernate.jdbc.Work)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.Connection openConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.transaction.Isolater$JtaDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)",
            "org.hibernate.engine.transaction.Isolater$JdbcDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void closeConnection(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.transaction.Isolater$JtaDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)",
            "org.hibernate.engine.transaction.Isolater$JdbcDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void cancelLastQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void cancelQuery()"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:void openConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:java.sql.Connection getConnection()"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:void closeConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:java.sql.Connection cleanup()",
            "org.hibernate.jdbc.ConnectionManager:void aggressiveRelease()"
        ]
    },
    "org.hibernate.engine.transaction.Isolater$JdbcDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.transaction.Isolater:void doIsolatedWork(org.hibernate.engine.transaction.IsolatedWork,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.transaction.Isolater:void doNonTransactedWork(org.hibernate.engine.transaction.IsolatedWork,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void managedFlush()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.CMTTransaction:void commit()",
            "org.hibernate.transaction.CacheSynchronization:void beforeCompletion()",
            "org.hibernate.transaction.JDBCTransaction:void commit()",
            "org.hibernate.transaction.JTATransaction:void commit()"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareBatchCallableStatement(java.lang.String)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp useCallableStatement(java.lang.String,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.SequenceIdentityGenerator$Delegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.DbTimestampType:java.sql.Timestamp getCurrentTimestamp(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.DbTimestampType:java.lang.Object seed(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.transaction.Isolater$JtaDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.transaction.Isolater:void doIsolatedWork(org.hibernate.engine.transaction.IsolatedWork,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.transaction.Isolater:void doNonTransactedWork(org.hibernate.engine.transaction.IsolatedWork,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processFile(java.io.File,java.util.Set)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void execute(java.util.Set)"
        ]
    },
    "org.hibernate.util.ReflectHelper:java.lang.Class classForName(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.ReflectHelper:java.lang.Class classForName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.Configuration:void setListeners(java.lang.String,java.lang.String[])",
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cache.QueryCacheFactory createQueryCacheFactory(java.util.Properties)",
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cache.RegionFactory createRegionFactory(java.util.Properties,boolean)",
            "org.hibernate.cfg.SettingsFactory:org.hibernate.hql.QueryTranslatorFactory createQueryTranslatorFactory(java.util.Properties)",
            "org.hibernate.cfg.SettingsFactory:org.hibernate.jdbc.BatcherFactory createBatcherFactory(java.util.Properties,int)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String[] getImplementors(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:java.lang.String getImportedClassName(java.lang.String)",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.context.CurrentSessionContext buildCurrentSessionContext()",
            "org.hibernate.id.enhanced.OptimizerFactory:org.hibernate.id.enhanced.Optimizer buildOptimizer(java.lang.String,java.lang.Class,int)",
            "org.hibernate.id.IdentifierGeneratorFactory:java.lang.Class getIdentifierGeneratorClass(java.lang.String,org.hibernate.dialect.Dialect)",
            "org.hibernate.dialect.resolver.DialectFactory:void registerDialectResolver(java.lang.String)",
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect constructDialect(java.lang.String)",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect instantiateDialect(java.lang.String)",
            "org.hibernate.dialect.Oracle9Dialect:int registerResultSetOutParameter(java.sql.CallableStatement,int)",
            "org.hibernate.dialect.Oracle8iDialect:int extractOracleCursorTypeValue()",
            "org.hibernate.dialect.H2Dialect:void <init>()",
            "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructTuplizer(java.lang.String,org.hibernate.mapping.Component)",
            "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructTuplizer(java.lang.String,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge:void <init>(java.util.Properties)",
            "org.hibernate.util.ReflectHelper:java.lang.Class reflectedPropertyClass(java.lang.String,java.lang.String)",
            "org.hibernate.util.ReflectHelper:java.lang.Object getConstantValue(java.lang.String)",
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter constructConverter(java.lang.String,org.hibernate.exception.ViolatedConstraintNameExtracter)",
            "org.hibernate.connection.ConnectionProviderFactory:org.hibernate.connection.ConnectionProvider newConnectionProvider(java.util.Properties,java.util.Map)",
            "org.hibernate.connection.DriverManagerConnectionProvider:void configure(java.util.Properties)",
            "org.hibernate.type.ClassType:java.lang.Object get(java.sql.ResultSet,java.lang.String)",
            "org.hibernate.type.ClassType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.Type heuristicType(java.lang.String,java.util.Properties)",
            "org.hibernate.type.TypeFactory:org.hibernate.type.CollectionType customCollection(java.lang.String,java.util.Properties,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.type.EntityType:java.lang.Class determineAssociatedEntityClass()",
            "org.hibernate.transaction.TransactionManagerLookupFactory:org.hibernate.transaction.TransactionManagerLookup getTransactionManagerLookup(java.util.Properties)",
            "org.hibernate.transaction.TransactionFactoryFactory:org.hibernate.transaction.TransactionFactory buildTransactionFactory(java.util.Properties)",
            "org.hibernate.tool.hbm2ddl.SchemaValidatorTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExportTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaExport:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdateTask:org.hibernate.cfg.Configuration getConfiguration()",
            "org.hibernate.tool.hbm2ddl.SchemaValidator:void main(java.lang.String[])",
            "org.hibernate.tool.hbm2ddl.SchemaUpdate:void main(java.lang.String[])",
            "org.hibernate.hql.ast.tree.ConstructorNode:java.lang.reflect.Constructor resolveConstructor(java.lang.String)",
            "org.hibernate.hql.classic.SelectParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()",
            "org.hibernate.mapping.Collection:java.util.Comparator getComparator()",
            "org.hibernate.mapping.PersistentClass:java.lang.Class getMappedClass()",
            "org.hibernate.mapping.PersistentClass:java.lang.Class getProxyInterface()",
            "org.hibernate.mapping.Component:java.lang.Class getComponentClass()",
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor resolveCustomAccessor(java.lang.String)"
        ]
    },
    "org.hibernate.util.SerializationHelper$CustomObjectInputStream:java.lang.Class resolveClass(java.io.ObjectStreamClass)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String fromJoinFragment(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String fromJoinFragment(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateGeneratedValuesSelectString(org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSnapshotSelectString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)",
            "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)",
            "org.hibernate.engine.JoinSequence:void addExtraJoins(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.persister.entity.Joinable,boolean)"
        ]
    },
    "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String whereJoinFragment(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String whereJoinFragment(java.lang.String,boolean,boolean)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateGeneratedValuesSelectString(org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.String generateSnapshotSelectString()",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.collection.OneToManyJoinWalker:void initStatementString(org.hibernate.persister.entity.OuterJoinLoadable,java.lang.String,int,java.lang.String)",
            "org.hibernate.loader.AbstractEntityJoinWalker:java.lang.String getWhereFragment()",
            "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:java.lang.String generateIdInsertSelect(org.hibernate.persister.entity.Queryable,java.lang.String,antlr.collections.AST)",
            "org.hibernate.engine.JoinSequence:void addExtraJoins(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.persister.entity.Joinable,boolean)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareBatchStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement getCallableStatement(java.sql.Connection,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableStatement(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement getPreparedStatement(java.sql.Connection,java.lang.String,boolean,boolean,java.lang.String[],org.hibernate.ScrollMode,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,boolean)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareSelectStatement(java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableQueryStatement(java.lang.String,boolean,org.hibernate.ScrollMode)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement getPreparedStatement(java.sql.Connection,java.lang.String,boolean,org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getColumnIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.UnionSubclassEntityPersister:java.lang.String generateSubquery(org.hibernate.mapping.PersistentClass,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:void validateColumns(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlAlterStrings(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,org.hibernate.tool.hbm2ddl.TableMetadata,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.lang.String sqlTemporaryTableCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.Table:java.lang.String sqlCreateString(org.hibernate.dialect.Dialect,org.hibernate.engine.Mapping,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.Table:java.util.Iterator sqlCommentStrings(org.hibernate.dialect.Dialect,java.lang.String,java.lang.String)",
            "org.hibernate.mapping.DenormalizedTable:java.util.Iterator getColumnIterator()"
        ]
    },
    "org.hibernate.criterion.Property:org.hibernate.criterion.Criterion in(java.util.Collection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassPropertyClosureIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void initSubclassPropertyAliasesMap(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:java.util.Iterator getPropertyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.mapping.JoinedSubclass:java.util.Iterator getReferenceablePropertyIterator()",
            "org.hibernate.mapping.Subclass:java.util.Iterator getPropertyClosureIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getRecursiveProperty(java.lang.String)",
            "org.hibernate.mapping.PersistentClass:void validate(org.hibernate.engine.Mapping)",
            "org.hibernate.mapping.PersistentClass:void checkPropertyDuplication()",
            "org.hibernate.mapping.PersistentClass:boolean hasNaturalId()",
            "org.hibernate.mapping.RootClass:java.util.Iterator getPropertyClosureIterator()"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:java.lang.String[] getNamedParameters()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.NamedQueryCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.util.Map)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setProperties(java.lang.Object)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:org.hibernate.type.Type[] typeArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.engine.QueryParameters getQueryParameters(java.util.Map)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.Distinct:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.CriteriaImpl:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.Distinct:java.lang.String toString()",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.criterion.AliasedProjection:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.pretty.Printer:java.lang.String toString(java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.impl.CriteriaImpl:java.lang.String toString()",
            "org.hibernate.dialect.function.NvlFunction:java.lang.String render(java.util.List,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.cache.CacheKey:java.lang.String toString()",
            "org.hibernate.util.IdentityMap$IdentityKey:java.lang.String toString()",
            "org.hibernate.util.ArrayHelper:java.lang.String[] toStringArray(java.lang.Object[])",
            "org.hibernate.type.LongType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.IntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ByteType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigDecimalType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.FloatType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.ClobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.BigIntegerType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.BigIntegerType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.BlobType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CharacterType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.CharacterType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.LocaleType:void set(java.sql.PreparedStatement,java.lang.Object,int)",
            "org.hibernate.type.LocaleType:int compare(java.lang.Object,java.lang.Object,org.hibernate.EntityMode)",
            "org.hibernate.type.LocaleType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.type.LocaleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.DoubleType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.CompositeCustomType:java.lang.String toLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CustomType:java.lang.String toXMLString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ShortType:java.lang.String objectToSQLString(java.lang.Object,org.hibernate.dialect.Dialect)",
            "org.hibernate.type.PrimitiveType:java.lang.String toString(java.lang.Object)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void closeExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)",
            "org.hibernate.engine.TypedValue:java.lang.String toString()",
            "org.hibernate.criterion.Distinct:java.lang.String toString()",
            "org.hibernate.criterion.AliasedProjection:java.lang.String toString()",
            "org.hibernate.criterion.SimpleExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.IlikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)",
            "org.hibernate.criterion.LikeExpression:org.hibernate.engine.TypedValue[] getTypedValues(org.hibernate.Criteria,org.hibernate.criterion.CriteriaQuery)"
        ]
    },
    "org.hibernate.util.IdentityMap:java.util.Iterator keyIterator(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.CollectionEntry getCollectionEntryOrNull(java.lang.Object)"
        ]
    },
    "org.hibernate.util.JTAHelper:boolean isTransactionInProgress(org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.JDBCContext:boolean registerSynchronizationIfPossible()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void checkTransactionSynchStatus()",
            "org.hibernate.jdbc.JDBCContext:void <init>(org.hibernate.jdbc.JDBCContext$Context,java.sql.Connection,org.hibernate.Interceptor)",
            "org.hibernate.transaction.CMTTransaction:void begin()",
            "org.hibernate.transaction.JTATransaction:void begin()"
        ]
    },
    "org.hibernate.transaction.CMTTransaction:javax.transaction.Transaction getTransaction()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.CMTTransaction:void rollback()",
            "org.hibernate.transaction.CMTTransaction:boolean isActive()",
            "org.hibernate.transaction.CMTTransaction:boolean wasRolledBack()",
            "org.hibernate.transaction.CMTTransaction:boolean wasCommitted()",
            "org.hibernate.transaction.CMTTransaction:void registerSynchronization(javax.transaction.Synchronization)"
        ]
    },
    "org.hibernate.transaction.JTATransaction:void registerSynchronization(javax.transaction.Synchronization)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.transaction.CMTTransactionFactory:boolean isTransactionInProgress(org.hibernate.jdbc.JDBCContext,org.hibernate.transaction.TransactionFactory$Context,org.hibernate.Transaction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:boolean isTransactionInProgress()"
        ]
    },
    "org.hibernate.transaction.WebSphereExtendedJTATransactionLookup$TransactionManagerAdapter:int getStatus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JTATransactionFactory:boolean isTransactionInProgress(org.hibernate.jdbc.JDBCContext,org.hibernate.transaction.TransactionFactory$Context,org.hibernate.Transaction)"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.transaction.TransactionFactory createTransactionFactory(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.hql.ast.tree.SelectClause:void finishInitialization(java.util.ArrayList)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeDerivedSelectClause(org.hibernate.hql.ast.tree.FromClause)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean isUpdateNecessary(org.hibernate.event.FlushEntityEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean isUpdateNecessary(org.hibernate.event.FlushEntityEvent,boolean)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTPrinter:java.lang.String showAsString(antlr.collections.AST,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.SelectExpressionList:org.hibernate.hql.ast.tree.SelectExpression[] collectSelectExpressions()",
            "org.hibernate.hql.ast.tree.SelectClause:void initializeExplicitSelectClause(org.hibernate.hql.ast.tree.FromClause)",
            "org.hibernate.hql.ast.HqlSqlWalker:void createFromJoinElement(antlr.collections.AST,antlr.collections.AST,int,antlr.collections.AST,antlr.collections.AST,antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void handleWithFragment(org.hibernate.hql.ast.tree.FromElement,antlr.collections.AST)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlSqlWalker analyze(org.hibernate.hql.ast.HqlParser,java.lang.String)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:void showHqlAst(antlr.collections.AST)"
        ]
    },
    "org.hibernate.hql.ast.HqlParser:void showAst(antlr.collections.AST,java.io.PrintStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumns(java.lang.String[])"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumns(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.sql.SelectFragment generateSelectFragment(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.String selectFragment(java.lang.String,java.lang.String)",
            "org.hibernate.persister.collection.BasicCollectionPersister:java.lang.String manyToManySelectFragment(org.hibernate.persister.entity.Joinable,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria add(org.hibernate.criterion.Criterion)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:void <init>(org.hibernate.impl.CriteriaImpl,org.hibernate.Criteria,java.lang.String,int,org.hibernate.impl.CriteriaImpl$1)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String,int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createAlias(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createAlias(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createAlias(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.hibernate.hql.ast.util.NodeTraverser:void traverseDepthFirst(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:java.util.List collect(antlr.collections.AST)",
            "org.hibernate.hql.ast.HqlSqlWalker:void handleWithFragment(org.hibernate.hql.ast.tree.FromElement,antlr.collections.AST)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlParser parse(boolean)"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void statement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlParser parse(boolean)"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void updateStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void statement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void deleteStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void statement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void selectStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void statement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void insertStatement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void insertStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void statement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void optionalFromTokenFromClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void updateStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void deleteStatement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void setClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void updateStatement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void whereClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void updateStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void deleteStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void queryRule()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void assignment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void setClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void stateField()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void assignment()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void newValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void assignment()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void path()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void optionalFromTokenFromClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void stateField()",
            "org.hibernate.hql.antlr.HqlBaseParser:void intoClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void newExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromJoin()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClassOrOuterQueryPath()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inClassDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionElementsDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void compoundExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void collectionExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aggregate()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void concatenation()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void newValue()",
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void betweenList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void likeEscape()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void asAlias()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void optionalFromTokenFromClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromJoin()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClassOrOuterQueryPath()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void queryRule()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectStatement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void union()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void intoClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void insertStatement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void insertablePropertySpec()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void intoClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void insertablePropertySpec()",
            "org.hibernate.hql.antlr.HqlBaseParser:void atom()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void union()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void subQuery()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void selectFrom()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void queryRule()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void groupByClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void queryRule()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void orderByClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void queryRule()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void selectClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectFrom()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void fromClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectFrom()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void selectedPropertiesList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void newExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void newExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void selectObject()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void fromRange()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void fromJoin()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void propertyFetch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromJoin()",
            "org.hibernate.hql.antlr.HqlBaseParser:void fromClassOrOuterQueryPath()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void withClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromJoin()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void logicalExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void whereClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void withClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void havingClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void whenClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void fromClassOrOuterQueryPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromRange()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void inClassDeclaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromRange()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionDeclaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromRange()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionElementsDeclaration()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void fromRange()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void alias()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void asAlias()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inClassDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionDeclaration()",
            "org.hibernate.hql.antlr.HqlBaseParser:void inCollectionElementsDeclaration()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void expression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void groupByClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void logicalExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void orderElement()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aliasedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void compoundExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void atom()",
            "org.hibernate.hql.antlr.HqlBaseParser:void exprList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void expressionOrVector()",
            "org.hibernate.hql.antlr.HqlBaseParser:void vectorExpr()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void havingClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void groupByClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void orderElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void orderByClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void ascendingOrDescending()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void orderElement()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void aliasedExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void selectedPropertiesList()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void logicalOrExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void expression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void logicalAndExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void logicalOrExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void negatedExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void logicalAndExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void negatedExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void equalityExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void negatedExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void equalityExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void additiveExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void concatenation()",
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aggregate()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void inList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void betweenList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void likeEscape()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void relationalExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void compoundExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void inList()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void multiplyExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void additiveExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void unaryExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void multiplyExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void unaryExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void caseExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void whenClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void elseClause()",
            "org.hibernate.hql.antlr.HqlBaseParser:void altWhenClause()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void caseExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void unaryExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void quantifiedExpression()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void unaryExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void atom()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void unaryExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void whenClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void caseExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void elseClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void caseExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void altWhenClause()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void caseExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void collectionExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void compoundExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void quantifiedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aggregate()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void subQuery()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void compoundExpr()",
            "org.hibernate.hql.antlr.HqlBaseParser:void quantifiedExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void exprList()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void atom()",
            "org.hibernate.hql.antlr.HqlBaseParser:void identPrimary()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void identPrimary()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void constant()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void expressionOrVector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void vectorExpr()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void expressionOrVector()"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void aggregate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void identPrimary()"
        ]
    },
    "org.hibernate.hql.ast.HqlParser:antlr.collections.AST handleIdentifierError(antlr.Token,antlr.RecognitionException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void identifier()"
        ]
    },
    "org.hibernate.hql.classic.WhereParser:void openExpression(org.hibernate.hql.classic.QueryTranslatorImpl,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.classic.WhereParser:void token(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)",
            "org.hibernate.hql.classic.WhereParser:void doPathExpression(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.QName getQName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.QName getQName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.QName getQName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.QName getQName(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.QName getQName(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setQName(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setQName(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setQName(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespace()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespace()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespace()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForPrefix(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespaceForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Namespace getNamespaceForURI(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Namespace getNamespaceForURI(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List getNamespacesForURI(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List getNamespacesForURI(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List getNamespacesForURI(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getNamespacePrefix()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getNamespacePrefix()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespacePrefix()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getNamespaceURI()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getNamespaceURI()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNamespaceURI()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getQualifiedName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getQualifiedName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getQualifiedName()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List additionalNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List additionalNamespaces()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List additionalNamespaces()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List declaredNamespaces()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List declaredNamespaces()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List declaredNamespaces()"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:void setIndex(org.dom4j.Element,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:void setIndex(org.dom4j.Element,java.lang.String,java.lang.String)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(java.lang.String,java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addAttribute(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addComment(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addComment(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addComment(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addCDATA(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addCDATA(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addCDATA(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addEntity(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addEntity(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addEntity(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addNamespace(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addProcessingInstruction(java.lang.String,java.util.Map)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addText(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Attribute)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Attribute)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.CDATA)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.CDATA)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Entity)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Entity)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Text)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Text)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Namespace)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Namespace)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Attribute)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Attribute)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Attribute)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.CDATA)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.CDATA)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.CDATA)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Entity)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Entity)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Entity)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Namespace)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Namespace)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Namespace)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Text)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Text)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Text)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean supportsParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean supportsParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean supportsParent()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element getParent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element getParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element getParent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setParent(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setParent(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setParent(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Document getDocument()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Document getDocument()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Document getDocument()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setDocument(org.dom4j.Document)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setDocument(org.dom4j.Document)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setDocument(org.dom4j.Document)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean isReadOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean isReadOnly()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isReadOnly()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean hasContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean hasContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasContent()"
        ]
    },
    "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String extractNodeName(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer$BasicEntityNameResolver:java.lang.String resolveEntityName(java.lang.Object)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String determineConcreteSubclassEntityName(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.Dom4jInstantiator:boolean isInstance(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:boolean isInstance(java.lang.Object)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:boolean isInstance(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void initOuterJoinFetchSetting(org.dom4j.Element,org.hibernate.mapping.Fetchable)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:java.lang.String extractNodeName(org.dom4j.Element)",
            "org.hibernate.tuple.Dom4jInstantiator:boolean isInstance(java.lang.Object)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String getName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getName()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setName(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setName(java.lang.String)",
            "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setName(java.lang.String)"
        ]
    },
    "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.CollectionType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.CompositeCustomType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.ComponentType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String getText()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getText()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setText(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindComment(org.hibernate.mapping.Table,org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getTextTrim()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComment(org.hibernate.mapping.Table,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String getTextTrim()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getTextTrim()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getStringValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getStringValue()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getStringValue()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getPath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getPath()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getPath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getPath(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getPath(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getUniquePath()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getUniquePath()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getUniquePath(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getUniquePath(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getUniquePath(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String asXML()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String asXML()",
            "org.hibernate.util.XMLHelper:void dump(org.dom4j.Element)",
            "org.hibernate.type.CollectionType:java.lang.String renderLoggableString(java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String asXML()"
        ]
    },
    "org.hibernate.util.XMLHelper:void dump(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.ElementWrapper:void write(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void write(java.io.Writer)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void write(java.io.Writer)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:short getNodeType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:short getNodeType()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:short getNodeType()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String getNodeTypeName()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String getNodeTypeName()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String getNodeTypeName()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Node detach()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node detach()",
            "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.Object selectObject(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.Object selectObject(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object selectObject(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List selectNodes(java.lang.String,java.lang.String,boolean)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Node selectSingleNode(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node selectSingleNode(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node selectSingleNode(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String valueOf(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String valueOf(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String valueOf(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.Number numberValueOf(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.Number numberValueOf(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Number numberValueOf(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean matches(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean matches(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean matches(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.XPath createXPath(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.XPath createXPath(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.XPath createXPath(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Node asXPathResult(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node asXPathResult(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node asXPathResult(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void accept(org.dom4j.Visitor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void accept(org.dom4j.Visitor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void accept(org.dom4j.Visitor)"
        ]
    },
    "org.hibernate.bytecode.javassist.BulkAccessor:java.lang.Class[] getPropertyTypes()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.bytecode.javassist.BulkAccessor:java.lang.String[] getGetters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.bytecode.javassist.BulkAccessor:java.lang.String[] getSetters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.Object getData()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.Object getData()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.Object getData()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setData(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setData(java.lang.Object)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setData(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List attributes()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List attributes()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List attributes()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setAttributes(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setAttributes(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributes(java.util.List)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:int attributeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:int attributeCount()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int attributeCount()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.Iterator attributeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator attributeIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator attributeIterator()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(int)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void extractRootAttributes(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:boolean isCallable(org.dom4j.Element,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.HbmBinder:boolean isCallable(org.dom4j.Element)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:org.hibernate.engine.ExecuteUpdateResultCheckStyle getResultCheckStyle(org.dom4j.Element,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.Fetchable,org.hibernate.cfg.Mappings,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.ToOne,org.hibernate.cfg.Mappings,boolean)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.String getTypeFromXML(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void makeVersion(org.dom4j.Element,org.hibernate.mapping.SimpleValue)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindVersioningProperty(org.hibernate.mapping.Table,org.dom4j.Element,org.hibernate.cfg.Mappings,java.lang.String,org.hibernate.mapping.RootClass,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.String getEntityName(org.dom4j.Element,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToMany(org.dom4j.Element,org.hibernate.mapping.OneToMany,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindImport(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void extractRootAttributes(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:boolean isCallable(org.dom4j.Element,boolean)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.engine.ExecuteUpdateResultCheckStyle getResultCheckStyle(org.dom4j.Element,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindUnionSubclass(org.dom4j.Element,org.hibernate.mapping.UnionSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getClassTableName(org.hibernate.mapping.PersistentClass,org.dom4j.Element,java.lang.String,java.lang.String,org.hibernate.mapping.Table,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValue(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.Fetchable,org.hibernate.cfg.Mappings,java.lang.String,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindColumnsOrFormula(org.dom4j.Element,org.hibernate.mapping.SimpleValue,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindArray(org.dom4j.Element,org.hibernate.mapping.Array,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.Component,org.hibernate.mapping.PersistentClass,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getTypeFromXML(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:void initOuterJoinFetchSetting(org.dom4j.Element,org.hibernate.mapping.Fetchable)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void makeVersion(org.dom4j.Element,org.hibernate.mapping.SimpleValue)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getEntityName(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseMappingElement(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$AttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Attribute attribute(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Attribute attribute(org.dom4j.QName)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.ToOne,org.hibernate.cfg.Mappings,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void validateCascade(org.dom4j.Element,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:void bindOneToMany(org.dom4j.Element,org.hibernate.mapping.OneToMany,org.hibernate.cfg.Mappings)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.String getPropertyName(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.String getIndex(org.dom4j.Element,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindVersioningProperty(org.hibernate.mapping.Table,org.dom4j.Element,org.hibernate.cfg.Mappings,java.lang.String,org.hibernate.mapping.RootClass,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDiscriminatorProperty(org.hibernate.mapping.Table,org.hibernate.mapping.RootClass,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindClass(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindPojoRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindDom4jRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapRepresentation(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindProperty(org.dom4j.Element,org.hibernate.mapping.Property,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void initLaziness(org.dom4j.Element,org.hibernate.mapping.ToOne,org.hibernate.cfg.Mappings,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindManyToOne(org.dom4j.Element,org.hibernate.mapping.ManyToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void validateCascade(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToOne(org.dom4j.Element,org.hibernate.mapping.OneToOne,java.lang.String,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindOneToMany(org.dom4j.Element,org.hibernate.mapping.OneToMany,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindCompositeId(org.dom4j.Element,org.hibernate.mapping.Component,org.hibernate.mapping.PersistentClass,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindNamedQuery(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getPropertyName(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.PersistentClass getSuperclass(org.hibernate.cfg.Mappings,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getEntityName(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void parseFilter(org.dom4j.Element,org.hibernate.mapping.Filterable,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryRootReturn bindReturn(org.dom4j.Element,org.hibernate.cfg.Mappings,int)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryJoinReturn bindReturnJoin(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.query.sql.NativeSQLQueryCollectionReturn bindLoadCollection(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void parseListener(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.String getIndex(org.dom4j.Element,java.lang.String,int)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String attributeValue(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setAttributeValue(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setAttributeValue(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setAttributeValue(org.dom4j.QName,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setAttributeValue(org.dom4j.QName,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setAttributeValue(org.dom4j.QName,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element element(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Collection)",
            "org.hibernate.cfg.HbmBinder:void bindJoinedSubclass(org.dom4j.Element,org.hibernate.mapping.JoinedSubclass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindComment(org.hibernate.mapping.Table,org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:void bindColumn(org.dom4j.Element,org.hibernate.mapping.Column,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindListSecondPass(org.dom4j.Element,org.hibernate.mapping.List,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindIdentifierCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.IdentifierCollection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:java.lang.String getSubselect(org.dom4j.Element)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:org.hibernate.cfg.Configuration doConfigure(org.dom4j.Document)",
            "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element element(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element element(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element element(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element element(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List elements()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.Configuration:void parseEvent(org.dom4j.Element)",
            "org.hibernate.tuple.ElementWrapper:java.util.List elements()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List elements(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:org.dom4j.Element locateTuplizerDefinition(org.dom4j.Element,org.hibernate.EntityMode)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.tuple.ElementWrapper:java.util.List elements(java.lang.String)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List elements(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List elements(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List elements(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindRoot(org.dom4j.Document,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindRootPersistentClassCommonValues(org.dom4j.Element,java.util.Map,org.hibernate.cfg.Mappings,org.hibernate.mapping.RootClass)",
            "org.hibernate.cfg.HbmBinder:void bindJoin(org.dom4j.Element,org.hibernate.mapping.Join,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void createClassProperties(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map,org.hibernate.mapping.UniqueKey,boolean,boolean,boolean)",
            "org.hibernate.cfg.HbmBinder:void bindMapSecondPass(org.dom4j.Element,org.hibernate.mapping.Map,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindCollectionSecondPass(org.dom4j.Element,org.hibernate.mapping.Collection,java.util.Map,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.ResultSetMappingBinder:org.hibernate.engine.ResultSetMappingDefinition buildResultSetMappingDefinition(org.dom4j.Element,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.Configuration:void parseSessionFactory(org.dom4j.Element,java.lang.String)",
            "org.hibernate.cfg.Configuration:void parseSecurity(org.dom4j.Element)",
            "org.hibernate.collection.PersistentElementHolder:boolean empty()",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean empty()",
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindTypeDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindPersistentClassCommonValues(org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindColumns(org.dom4j.Element,org.hibernate.mapping.SimpleValue,boolean,boolean,java.lang.String,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindSimpleValueType(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindCollection(org.dom4j.Element,org.hibernate.mapping.Collection,java.lang.String,java.lang.String,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:void bindAny(org.dom4j.Element,org.hibernate.mapping.Any,boolean,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void makeIdentifier(org.dom4j.Element,org.hibernate.mapping.SimpleValue,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void bindManyToManySubelements(org.hibernate.mapping.Collection,org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getParameterTypes(org.dom4j.Element)",
            "org.hibernate.cfg.HbmBinder:java.util.Map getMetas(org.dom4j.Element,java.util.Map,boolean)",
            "org.hibernate.cfg.HbmBinder:void parseFilterDef(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:java.util.List getExtendsNeeded(org.dom4j.Document,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.HbmBinder:void recognizeEntities(org.hibernate.cfg.Mappings,org.dom4j.Element,org.hibernate.cfg.HbmBinder$EntityElementHandler)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.Map bindPropertyResults(java.lang.String,org.dom4j.Element,org.hibernate.mapping.PersistentClass,org.hibernate.cfg.Mappings)",
            "org.hibernate.cfg.ResultSetMappingBinder:java.util.ArrayList getResultColumns(org.dom4j.Element)",
            "org.hibernate.cfg.Configuration:void addProperties(org.dom4j.Element)",
            "org.hibernate.cfg.NamedSQLQuerySecondPass:void doSecondPass(java.util.Map)",
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator elementIterator(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator elementIterator(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean isRootElement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean isRootElement()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isRootElement()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean hasMixedContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean hasMixedContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean hasMixedContent()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean isTextOnly()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean isTextOnly()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean isTextOnly()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void appendAttributes(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void appendAttributes(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void appendAttributes(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element createCopy(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element createCopy(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String elementText(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementText(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String elementText(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementText(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementText(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String elementTextTrim(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindAuxiliaryDatabaseObject(org.dom4j.Element,org.hibernate.cfg.Mappings)",
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementTextTrim(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.lang.String elementTextTrim(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.lang.String elementTextTrim(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.lang.String elementTextTrim(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Node getXPathResult(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node getXPathResult(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node getXPathResult(int)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Node node(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node node(int)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node node(int)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:int indexOf(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:int indexOf(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int indexOf(org.dom4j.Node)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:int nodeCount()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:int nodeCount()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:int nodeCount()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element elementByID(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element elementByID(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element elementByID(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List content()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List content()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List content()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.Iterator nodeIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.Iterator nodeIterator()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.Iterator nodeIterator()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setContent(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setContent(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setContent(java.util.List)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void appendContent(org.dom4j.Branch)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void appendContent(org.dom4j.Branch)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void appendContent(org.dom4j.Branch)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void clearContent()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void clearContent()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void clearContent()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List processingInstructions()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List processingInstructions()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions()"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:java.util.List processingInstructions(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:java.util.List processingInstructions(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:java.util.List processingInstructions(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.ProcessingInstruction processingInstruction(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void setProcessingInstructions(java.util.List)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void setProcessingInstructions(java.util.List)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void setProcessingInstructions(java.util.List)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(org.dom4j.QName)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(org.dom4j.QName)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(org.dom4j.QName)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Element addElement(java.lang.String,java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Element addElement(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean removeProcessingInstruction(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean removeProcessingInstruction(java.lang.String)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean removeProcessingInstruction(java.lang.String)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Node)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Comment)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Comment)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.Element)",
            "org.hibernate.type.AbstractType:void replaceNode(org.dom4j.Node,org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void add(org.dom4j.ProcessingInstruction)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void add(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Node)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Node)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Node)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Comment)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Comment)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Comment)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:org.dom4j.Node detach()",
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.Element)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:org.dom4j.Node detach()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.Element)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.ProcessingInstruction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:boolean remove(org.dom4j.ProcessingInstruction)",
            "org.hibernate.proxy.dom4j.Dom4jProxy:boolean remove(org.dom4j.ProcessingInstruction)"
        ]
    },
    "org.hibernate.tuple.ElementWrapper:void normalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.ElementWrapper:void normalize()",
            "org.hibernate.proxy.dom4j.Dom4jProxy:void normalize()"
        ]
    },
    "org.hibernate.bytecode.buildtime.CGLIBInstrumenter:org.hibernate.bytecode.util.ClassDescriptor getClassDescriptor(byte[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$2:void handleEntry(java.util.zip.ZipEntry,byte[])",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void collectClassNames(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter:void processClassFile(java.io.File,java.util.Set)",
            "org.hibernate.bytecode.buildtime.AbstractInstrumenter$1:void handleEntry(java.util.zip.ZipEntry,byte[])"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:void evictQueries()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.id.enhanced.TableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.id.enhanced.SequenceStyleGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void cancelQuery()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ConnectionManager:java.sql.Connection getConnection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void doWork(org.hibernate.jdbc.Work)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableStatement(java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,boolean)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String,java.lang.String[])",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareSelectStatement(java.lang.String)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareQueryStatement(java.lang.String,boolean,org.hibernate.ScrollMode)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableQueryStatement(java.lang.String,boolean,org.hibernate.ScrollMode)",
            "org.hibernate.jdbc.JDBCContext:java.sql.Connection connection()",
            "org.hibernate.jdbc.BorrowedConnectionProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void createTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:void aggressiveRelease()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:void afterStatement()",
            "org.hibernate.jdbc.ConnectionManager:void afterTransaction()"
        ]
    },
    "org.hibernate.engine.transaction.Isolater:void doIsolatedWork(org.hibernate.engine.transaction.IsolatedWork,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void createTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TransactionHelper:java.io.Serializable doWorkInNewTransaction(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.transaction.Isolater:void doNonTransactedWork(org.hibernate.engine.transaction.IsolatedWork,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void createTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareBatchCallableStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])"
        ]
    },
    "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareBatchStatement(java.lang.String)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp usePreparedStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.id.SequenceIdentityGenerator$Delegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.type.DbTimestampType:java.lang.Object seed(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.param.VersionTypeSeedParameterSpecification:int bind(java.sql.PreparedStatement,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor,int)",
            "org.hibernate.type.TimestampType:java.lang.Object next(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.HqlSqlWalker:void postProcessInsert(antlr.collections.AST)",
            "org.hibernate.engine.UnsavedValueFactory:org.hibernate.engine.VersionValue getUnsavedVersionValue(java.lang.String,org.hibernate.property.Getter,org.hibernate.type.VersionType,java.lang.reflect.Constructor)",
            "org.hibernate.engine.Versioning:java.lang.Object seed(org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.cache.QueryCacheFactory createQueryCacheFactory(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.cache.RegionFactory createRegionFactory(java.util.Properties,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.hql.QueryTranslatorFactory createQueryTranslatorFactory(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.jdbc.BatcherFactory createBatcherFactory(java.util.Properties,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.context.CurrentSessionContext buildCurrentSessionContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)"
        ]
    },
    "org.hibernate.id.enhanced.OptimizerFactory:org.hibernate.id.enhanced.Optimizer buildOptimizer(java.lang.String,java.lang.Class,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.enhanced.SequenceStyleGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)"
        ]
    },
    "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect constructDialect(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties,java.sql.Connection)",
            "org.hibernate.dialect.resolver.DialectFactory:org.hibernate.dialect.Dialect buildDialect(java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect instantiateDialect(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect()",
            "org.hibernate.dialect.Dialect:org.hibernate.dialect.Dialect getDialect(java.util.Properties)"
        ]
    },
    "org.hibernate.dialect.Oracle9Dialect:int registerResultSetOutParameter(java.sql.CallableStatement,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:int extractOracleCursorTypeValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Oracle8iDialect:int getOracleCursorTypeSqlType()"
        ]
    },
    "org.hibernate.tuple.component.ComponentTuplizerFactory:org.hibernate.tuple.component.ComponentTuplizer constructTuplizer(java.lang.String,org.hibernate.mapping.Component)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.ComponentEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.entity.EntityTuplizerFactory:org.hibernate.tuple.entity.EntityTuplizer constructTuplizer(java.lang.String,org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.EntityEntityModeToTuplizerMapping:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.tuple.entity.EntityMetamodel)"
        ]
    },
    "org.hibernate.cache.impl.bridge.RegionFactoryCacheProviderBridge:void <init>(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.util.ReflectHelper:java.lang.Class reflectedPropertyClass(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:java.lang.Class reflectedPropertyClass(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.SimpleValue:void setTypeUsingReflection(java.lang.String,java.lang.String)",
            "org.hibernate.mapping.ToOne:void setTypeUsingReflection(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.util.ReflectHelper:java.lang.Object getConstantValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.LiteralProcessor:void lookupConstant(org.hibernate.hql.ast.tree.DotNode)",
            "org.hibernate.hql.ast.tree.JavaConstantNode:void setText(java.lang.String)",
            "org.hibernate.hql.ast.QueryTranslatorImpl$JavaConstantConverter:void handleDotStructure(antlr.collections.AST)",
            "org.hibernate.hql.classic.WhereParser:void doToken(java.lang.String,org.hibernate.hql.classic.QueryTranslatorImpl)"
        ]
    },
    "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter constructConverter(java.lang.String,org.hibernate.exception.ViolatedConstraintNameExtracter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.exception.SQLExceptionConverterFactory:org.hibernate.exception.SQLExceptionConverter buildSQLExceptionConverter(org.hibernate.dialect.Dialect,java.util.Properties)"
        ]
    },
    "org.hibernate.type.ClassType:java.lang.Object fromStringValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.type.NullableType:java.lang.Object fromXMLString(java.lang.String,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CalendarDateType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.CalendarType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object fromStringValue(java.lang.String)"
        ]
    },
    "org.hibernate.type.TypeFactory:org.hibernate.type.CollectionType customCollection(java.lang.String,java.util.Properties,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.TypeFactory:org.hibernate.type.CollectionType customCollection(java.lang.String,java.lang.String,java.lang.String,boolean)",
            "org.hibernate.mapping.Collection:org.hibernate.type.CollectionType getCollectionType()"
        ]
    },
    "org.hibernate.type.EntityType:java.lang.Class determineAssociatedEntityClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.type.EntityType:java.lang.Class getReturnedClass()"
        ]
    },
    "org.hibernate.transaction.TransactionManagerLookupFactory:org.hibernate.transaction.TransactionManagerLookup getTransactionManagerLookup(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.transaction.TransactionManagerLookup createTransactionManagerLookup(java.util.Properties)",
            "org.hibernate.transaction.TransactionManagerLookupFactory:javax.transaction.TransactionManager getTransactionManager(java.util.Properties)",
            "org.hibernate.transaction.JTATransactionFactory:java.lang.String resolveUserTransactionName(java.util.Properties)"
        ]
    },
    "org.hibernate.mapping.Collection:java.util.Comparator getComparator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Set:org.hibernate.type.CollectionType getDefaultCollectionType()",
            "org.hibernate.mapping.Map:org.hibernate.type.CollectionType getDefaultCollectionType()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:java.lang.Class getMappedClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PropertyFactory:java.lang.reflect.Constructor getConstructor(org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.property.Getter getGetter(org.hibernate.mapping.Property)",
            "org.hibernate.tuple.PojoInstantiator:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.bytecode.ReflectionOptimizer$InstantiationOptimizer)"
        ]
    },
    "org.hibernate.mapping.PersistentClass:java.lang.Class getProxyInterface()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.tuple.PojoInstantiator:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.bytecode.ReflectionOptimizer$InstantiationOptimizer)"
        ]
    },
    "org.hibernate.mapping.Component:java.lang.Class getComponentClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.property.Getter buildGetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.property.Setter buildSetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)",
            "org.hibernate.tuple.component.PojoComponentTuplizer$ProxiedInstantiator:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.tuple.PojoInstantiator:void <init>(org.hibernate.mapping.Component,org.hibernate.bytecode.ReflectionOptimizer$InstantiationOptimizer)",
            "org.hibernate.mapping.RootClass:void checkCompositeIdentifier()"
        ]
    },
    "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor resolveCustomAccessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPojoPropertyAccessor(java.lang.String)",
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(java.lang.String)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String fromJoinFragment(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String fromJoinFragment(java.lang.String,boolean,boolean)",
            "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.engine.JoinSequence:void addExtraJoins(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.persister.entity.Joinable,boolean)"
        ]
    },
    "org.hibernate.persister.collection.OneToManyPersister:java.lang.String whereJoinFragment(java.lang.String,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.OneToManyPersister:java.lang.String whereJoinFragment(java.lang.String,boolean,boolean)",
            "org.hibernate.loader.OuterJoinableAssociation:void addJoins(org.hibernate.sql.JoinFragment)",
            "org.hibernate.loader.OuterJoinableAssociation:void addManyToManyJoin(org.hibernate.sql.JoinFragment,org.hibernate.persister.collection.QueryableCollection)",
            "org.hibernate.engine.JoinSequence:void addExtraJoins(org.hibernate.sql.JoinFragment,java.lang.String,org.hibernate.persister.entity.Joinable,boolean)"
        ]
    },
    "org.hibernate.loader.AbstractEntityJoinWalker:java.lang.String getWhereFragment()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.criteria.CriteriaJoinWalker:java.lang.String getWhereFragment()",
            "org.hibernate.loader.AbstractEntityJoinWalker:void initStatementString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,org.hibernate.LockMode)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareSelectStatement(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.enhanced.SequenceStructure$1:long getNextValue()",
            "org.hibernate.id.IncrementGenerator:void getNext(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.GUIDGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SequenceGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.CallableStatement prepareCallableQueryStatement(java.lang.String,boolean,org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement getPreparedStatement(java.sql.Connection,java.lang.String,boolean,org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareQueryStatement(java.lang.String,boolean,org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.mapping.JoinedSubclass:java.util.Iterator getReferenceablePropertyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getReferencedProperty(java.lang.String)"
        ]
    },
    "org.hibernate.mapping.Subclass:java.util.Iterator getPropertyClosureIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.UnionSubclass:java.util.Iterator getNonDuplicatedPropertyIterator()",
            "org.hibernate.mapping.Subclass:java.util.Iterator getPropertyClosureIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassPropertyClosureIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getReferenceablePropertyIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String)"
        ]
    },
    "org.hibernate.mapping.RootClass:java.util.Iterator getPropertyClosureIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.SingleTableEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.persister.entity.JoinedSubclassEntityPersister:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.cache.access.EntityRegionAccessStrategy,org.hibernate.engine.SessionFactoryImplementor,org.hibernate.engine.Mapping)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.EntityMetamodel:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.mapping.Subclass:java.util.Iterator getPropertyClosureIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getSubclassPropertyClosureIterator()",
            "org.hibernate.mapping.PersistentClass:java.util.Iterator getReferenceablePropertyIterator()",
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getProperty(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void checkTransactionSynchStatus()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:org.hibernate.Session getSession(org.hibernate.EntityMode)",
            "org.hibernate.impl.SessionImpl:void clear()",
            "org.hibernate.impl.SessionImpl:org.hibernate.jdbc.Batcher getBatcher()",
            "org.hibernate.impl.SessionImpl:long getTimestamp()",
            "org.hibernate.impl.SessionImpl:org.hibernate.ConnectionReleaseMode getConnectionReleaseMode()",
            "org.hibernate.impl.SessionImpl:boolean isOpen()",
            "org.hibernate.impl.SessionImpl:boolean isConnected()",
            "org.hibernate.impl.SessionImpl:boolean isTransactionInProgress()",
            "org.hibernate.impl.SessionImpl:void reconnect()",
            "org.hibernate.impl.SessionImpl:void reconnect(java.sql.Connection)",
            "org.hibernate.impl.SessionImpl:org.hibernate.LockMode getCurrentLockMode(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:void fireSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.impl.SessionImpl:java.io.Serializable fireSave(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.impl.SessionImpl:void fireUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.impl.SessionImpl:void fireLock(org.hibernate.event.LockEvent)",
            "org.hibernate.impl.SessionImpl:void firePersist(java.util.Map,org.hibernate.event.PersistEvent)",
            "org.hibernate.impl.SessionImpl:void firePersist(org.hibernate.event.PersistEvent)",
            "org.hibernate.impl.SessionImpl:void firePersistOnFlush(java.util.Map,org.hibernate.event.PersistEvent)",
            "org.hibernate.impl.SessionImpl:void firePersistOnFlush(org.hibernate.event.PersistEvent)",
            "org.hibernate.impl.SessionImpl:java.lang.Object fireMerge(org.hibernate.event.MergeEvent)",
            "org.hibernate.impl.SessionImpl:void fireMerge(java.util.Map,org.hibernate.event.MergeEvent)",
            "org.hibernate.impl.SessionImpl:void fireSaveOrUpdateCopy(java.util.Map,org.hibernate.event.MergeEvent)",
            "org.hibernate.impl.SessionImpl:java.lang.Object fireSaveOrUpdateCopy(org.hibernate.event.MergeEvent)",
            "org.hibernate.impl.SessionImpl:void fireDelete(org.hibernate.event.DeleteEvent)",
            "org.hibernate.impl.SessionImpl:void fireDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.impl.SessionImpl:void fireLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.impl.SessionImpl:void fireRefresh(org.hibernate.event.RefreshEvent)",
            "org.hibernate.impl.SessionImpl:void fireRefresh(java.util.Map,org.hibernate.event.RefreshEvent)",
            "org.hibernate.impl.SessionImpl:void fireReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.impl.SessionImpl:void fireEvict(org.hibernate.event.EvictEvent)",
            "org.hibernate.impl.SessionImpl:boolean isDirty()",
            "org.hibernate.impl.SessionImpl:void flush()",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter getEnabledFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Filter enableFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:void disableFilter(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object getFilterParameterValue(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.type.Type getFilterParameterType(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.util.Map getEnabledFilters()",
            "org.hibernate.impl.SessionImpl:java.util.List list(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeUpdate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int executeNativeUpdate(org.hibernate.engine.query.sql.NativeSQLQuerySpecification,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterate(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:int delete(java.lang.String,java.lang.Object[],org.hibernate.type.Type[])",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createFilter(java.lang.Object,java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query getNamedQuery(java.lang.String)",
            "org.hibernate.impl.SessionImpl:java.lang.Object instantiate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.impl.SessionImpl:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.impl.SessionImpl:void setFlushMode(org.hibernate.FlushMode)",
            "org.hibernate.impl.SessionImpl:org.hibernate.FlushMode getFlushMode()",
            "org.hibernate.impl.SessionImpl:org.hibernate.CacheMode getCacheMode()",
            "org.hibernate.impl.SessionImpl:void setCacheMode(org.hibernate.CacheMode)",
            "org.hibernate.impl.SessionImpl:java.io.Serializable getIdentifier(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:java.util.List listFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.Iterator iterateFilter(java.lang.Object,java.lang.String,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.Class,java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.Class)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scroll(org.hibernate.impl.CriteriaImpl,org.hibernate.ScrollMode)",
            "org.hibernate.impl.SessionImpl:java.util.List list(org.hibernate.impl.CriteriaImpl)",
            "org.hibernate.impl.SessionImpl:boolean contains(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createQuery(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.SQLQuery createSQLQuery(java.lang.String)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String,java.lang.Class)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Query createSQLQuery(java.lang.String,java.lang.String[],java.lang.Class[])",
            "org.hibernate.impl.SessionImpl:org.hibernate.ScrollableResults scrollCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:java.util.List listCustomQuery(org.hibernate.loader.custom.CustomQuery,org.hibernate.engine.QueryParameters)",
            "org.hibernate.impl.SessionImpl:org.hibernate.SessionFactory getSessionFactory()",
            "org.hibernate.impl.SessionImpl:void initializeCollection(org.hibernate.collection.PersistentCollection,boolean)",
            "org.hibernate.impl.SessionImpl:java.lang.String getEntityName(java.lang.Object)",
            "org.hibernate.impl.SessionImpl:org.hibernate.Interceptor getInterceptor()",
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.ActionQueue getActionQueue()",
            "org.hibernate.impl.SessionImpl:org.hibernate.engine.PersistenceContext getPersistenceContext()",
            "org.hibernate.impl.SessionImpl:org.hibernate.stat.SessionStatistics getStatistics()",
            "org.hibernate.impl.SessionImpl:boolean isEventSource()",
            "org.hibernate.impl.SessionImpl:void setReadOnly(java.lang.Object,boolean)",
            "org.hibernate.impl.SessionImpl:java.lang.String getFetchProfile()",
            "org.hibernate.impl.SessionImpl:org.hibernate.jdbc.JDBCContext getJDBCContext()",
            "org.hibernate.impl.SessionImpl:void setFetchProfile(java.lang.String)"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:void <init>(org.hibernate.jdbc.JDBCContext$Context,java.sql.Connection,org.hibernate.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl)",
            "org.hibernate.impl.SessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl,boolean,long,org.hibernate.Interceptor,org.hibernate.EntityMode,boolean,boolean,org.hibernate.ConnectionReleaseMode)"
        ]
    },
    "org.hibernate.transaction.CMTTransaction:void begin()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.Transaction beginTransaction()",
            "org.hibernate.impl.SessionImpl:org.hibernate.Transaction beginTransaction()"
        ]
    },
    "org.hibernate.transaction.JTATransaction:void begin()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.Transaction beginTransaction()",
            "org.hibernate.impl.SessionImpl:org.hibernate.Transaction beginTransaction()"
        ]
    },
    "org.hibernate.transaction.CMTTransaction:void rollback()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.transaction.CMTTransaction:boolean isActive()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransactionFactory:boolean isTransactionInProgress(org.hibernate.jdbc.JDBCContext,org.hibernate.transaction.TransactionFactory$Context,org.hibernate.Transaction)",
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.context.ThreadLocalSessionContext:void cleanupAnyOrphanedSession(org.hibernate.SessionFactory)"
        ]
    },
    "org.hibernate.transaction.CMTTransaction:boolean wasRolledBack()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.CMTTransaction:boolean wasCommitted()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.CMTTransaction:void registerSynchronization(javax.transaction.Synchronization)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:void readObject(java.io.ObjectInputStream)",
            "org.hibernate.context.ThreadLocalSessionContext:org.hibernate.classic.Session currentSession()"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:boolean isTransactionInProgress()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:boolean isTransactionInProgress()",
            "org.hibernate.impl.StatelessSessionImpl:void afterOperation(boolean)",
            "org.hibernate.impl.SessionImpl:boolean isTransactionInProgress()",
            "org.hibernate.impl.SessionImpl:void afterOperation(boolean)",
            "org.hibernate.jdbc.JDBCContext:boolean registerSynchronizationIfPossible()",
            "org.hibernate.jdbc.ConnectionManager:boolean isAggressiveRelease()",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.transaction.JTATransactionFactory:boolean isTransactionInProgress(org.hibernate.jdbc.JDBCContext,org.hibernate.transaction.TransactionFactory$Context,org.hibernate.Transaction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:boolean isTransactionInProgress()"
        ]
    },
    "org.hibernate.hql.ast.tree.SelectExpressionList:org.hibernate.hql.ast.tree.SelectExpression[] collectSelectExpressions()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl:void showHqlAst(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.HqlSqlWalker:void prepareFromClauseInputTree(antlr.collections.AST)",
            "org.hibernate.hql.ast.QueryTranslatorImpl:org.hibernate.hql.ast.HqlParser parse(boolean)"
        ]
    },
    "org.hibernate.sql.SelectFragment:org.hibernate.sql.SelectFragment addColumns(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl$Subcriteria:org.hibernate.Criteria createCriteria(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String)",
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,int)"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createAlias(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createAlias(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String,java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTUtil$CollectingNodeVisitor:java.util.List collect(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.ASTUtil:java.util.List collectChildren(antlr.collections.AST,org.hibernate.hql.ast.util.ASTUtil$FilterPredicate)"
        ]
    },
    "org.hibernate.hql.antlr.HqlBaseParser:void identifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.antlr.HqlBaseParser:void path()",
            "org.hibernate.hql.antlr.HqlBaseParser:void primaryExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void selectObject()",
            "org.hibernate.hql.antlr.HqlBaseParser:void alias()",
            "org.hibernate.hql.antlr.HqlBaseParser:void aliasedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void quantifiedExpression()",
            "org.hibernate.hql.antlr.HqlBaseParser:void atom()",
            "org.hibernate.hql.antlr.HqlBaseParser:void exprList()",
            "org.hibernate.hql.antlr.HqlBaseParser:void identPrimary()"
        ]
    },
    "org.hibernate.type.CollectionType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.CompositeCustomType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.type.ComponentType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object readFrom(java.sql.ResultSet,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.lang.Object)",
            "org.hibernate.collection.PersistentMapElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.collection.PersistentListElementHolder:void initializeFromCache(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,java.lang.Object)",
            "org.hibernate.type.EntityType:void setToXMLNode(org.dom4j.Node,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$AttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)",
            "org.hibernate.property.Dom4jAccessor$TextSetter:void set(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionFactoryImplementor)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:boolean isCallable(org.dom4j.Element)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.cfg.HbmBinder:void handleCustomSQL(org.dom4j.Element,org.hibernate.mapping.Join)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:java.sql.PreparedStatement prepareQueryStatement(java.lang.String,boolean,org.hibernate.ScrollMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:java.sql.Connection connection()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void begin()",
            "org.hibernate.transaction.JDBCTransaction:void commitAndResetAutoCommit()",
            "org.hibernate.transaction.JDBCTransaction:void rollbackAndResetAutoCommit()",
            "org.hibernate.transaction.JDBCTransaction:void toggleAutoCommit()"
        ]
    },
    "org.hibernate.jdbc.BorrowedConnectionProxy:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void createTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:void afterStatement()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void doWork(org.hibernate.jdbc.Work)",
            "org.hibernate.jdbc.AbstractBatcher:void closePreparedStatement(java.sql.PreparedStatement)",
            "org.hibernate.jdbc.ConnectionManager:void flushEnding()",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void createTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.TransactionHelper:java.io.Serializable doWorkInNewTransaction(org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.TableGenerator$1:long getNextValue()",
            "org.hibernate.id.enhanced.TableStructure$1:long getNextValue()",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.TableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)"
        ]
    },
    "org.hibernate.type.TimestampType:java.lang.Object next(java.lang.Object,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Versioning:java.lang.Object increment(java.lang.Object,org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.engine.Versioning:java.lang.Object seed(org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.engine.Versioning:boolean seedVersion(java.lang.Object[],int,org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:int getOracleCursorTypeSqlType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.dialect.Oracle8iDialect:int registerResultSetOutParameter(java.sql.CallableStatement,int)"
        ]
    },
    "org.hibernate.cfg.HbmBinder:java.lang.Class reflectedPropertyClass(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindComponent(org.dom4j.Element,org.hibernate.mapping.Component,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,org.hibernate.cfg.Mappings,java.util.Map,boolean)"
        ]
    },
    "org.hibernate.mapping.SimpleValue:void setTypeUsingReflection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.mapping.ToOne:void setTypeUsingReflection(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.HbmBinder:void bindSimpleId(org.dom4j.Element,org.hibernate.mapping.RootClass,org.hibernate.cfg.Mappings,java.util.Map)",
            "org.hibernate.cfg.HbmBinder:org.hibernate.mapping.Property createProperty(org.hibernate.mapping.Value,java.lang.String,java.lang.String,org.dom4j.Element,org.hibernate.cfg.Mappings,java.util.Map)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl$JavaConstantConverter:void handleDotStructure(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.QueryTranslatorImpl$JavaConstantConverter:void visit(antlr.collections.AST)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.Object fromXMLString(java.lang.String,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object getIndex(java.lang.Object,int,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.type.NullableType:java.lang.Object fromXMLNode(org.dom4j.Node,org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.type.CalendarDateType:java.lang.Object fromStringValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.type.NullableType:java.lang.Object fromXMLString(java.lang.String,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CalendarDateType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.CalendarType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object fromStringValue(java.lang.String)"
        ]
    },
    "org.hibernate.type.AdaptedImmutableType:java.lang.Object fromStringValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.type.NullableType:java.lang.Object fromXMLString(java.lang.String,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CalendarDateType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.CalendarType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object fromStringValue(java.lang.String)"
        ]
    },
    "org.hibernate.type.CalendarType:java.lang.Object fromStringValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.type.NullableType:java.lang.Object fromXMLString(java.lang.String,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CalendarDateType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.CalendarType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object fromStringValue(java.lang.String)"
        ]
    },
    "org.hibernate.type.SerializableType:java.lang.Object fromStringValue(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.criteria.CriteriaQueryTranslator:org.hibernate.engine.TypedValue getTypedValue(org.hibernate.Criteria,java.lang.String,java.lang.Object)",
            "org.hibernate.type.NullableType:java.lang.Object fromXMLString(java.lang.String,org.hibernate.engine.Mapping)",
            "org.hibernate.type.CalendarDateType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.AdaptedImmutableType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.CalendarType:java.lang.Object fromStringValue(java.lang.String)",
            "org.hibernate.type.SerializableType:java.lang.Object fromStringValue(java.lang.String)"
        ]
    },
    "org.hibernate.type.TypeFactory:org.hibernate.type.CollectionType customCollection(java.lang.String,java.lang.String,java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.type.EntityType:java.lang.Class getReturnedClass()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameter(java.lang.String,java.lang.Object)",
            "org.hibernate.impl.FilterImpl:org.hibernate.Filter setParameterList(java.lang.String,java.util.Collection)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Object getFinal(int,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractScrollableResults:java.lang.Object getNonFinal(int,org.hibernate.type.Type)",
            "org.hibernate.id.enhanced.TableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.enhanced.SequenceStyleGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.IncrementGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.IdentifierGeneratorFactory:java.io.Serializable get(java.sql.ResultSet,org.hibernate.type.Type)",
            "org.hibernate.id.TableHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.MultipleHiLoPerTableGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.id.SequenceHiLoGenerator:void configure(org.hibernate.type.Type,java.util.Properties,org.hibernate.dialect.Dialect)",
            "org.hibernate.cache.QueryKey:boolean equals(java.lang.Object)",
            "org.hibernate.util.ReflectHelper:java.lang.reflect.Constructor getConstructor(java.lang.Class,org.hibernate.type.Type[])",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.tree.IntoClause:boolean areCompatible(org.hibernate.type.Type,org.hibernate.type.Type)",
            "org.hibernate.hql.ast.tree.BinaryArithmeticOperatorNode:boolean isDateTimeType(org.hibernate.type.Type)",
            "org.hibernate.hql.ast.HqlSqlWalker:boolean isIntegral(org.hibernate.type.Type)",
            "org.hibernate.engine.TypedValue:boolean equals(java.lang.Object)",
            "org.hibernate.mapping.Array:java.lang.Class getElementClass()"
        ]
    },
    "org.hibernate.cfg.SettingsFactory:org.hibernate.transaction.TransactionManagerLookup createTransactionManagerLookup(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cfg.SettingsFactory:org.hibernate.cfg.Settings buildSettings(java.util.Properties)"
        ]
    },
    "org.hibernate.transaction.JTATransactionFactory:java.lang.String resolveUserTransactionName(java.util.Properties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JTATransactionFactory:void configure(java.util.Properties)"
        ]
    },
    "org.hibernate.mapping.Set:org.hibernate.type.CollectionType getDefaultCollectionType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:org.hibernate.type.CollectionType getCollectionType()"
        ]
    },
    "org.hibernate.mapping.Map:org.hibernate.type.CollectionType getDefaultCollectionType()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.Collection:org.hibernate.type.CollectionType getCollectionType()"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.PropertyFactory:java.lang.reflect.Constructor getConstructor(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.IdentifierProperty buildIdentifierProperty(org.hibernate.mapping.PersistentClass,org.hibernate.id.IdentifierGenerator)",
            "org.hibernate.tuple.PropertyFactory:org.hibernate.tuple.VersionProperty buildVersionProperty(org.hibernate.mapping.Property,boolean)"
        ]
    },
    "org.hibernate.tuple.PojoInstantiator:void <init>(org.hibernate.mapping.PersistentClass,org.hibernate.bytecode.ReflectionOptimizer$InstantiationOptimizer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.property.Getter buildGetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.property.Setter buildSetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.AbstractComponentTuplizer:void <init>(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.tuple.PojoInstantiator:void <init>(org.hibernate.mapping.Component,org.hibernate.bytecode.ReflectionOptimizer$InstantiationOptimizer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.Component)"
        ]
    },
    "org.hibernate.mapping.RootClass:void checkCompositeIdentifier()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.RootClass:void validate(org.hibernate.engine.Mapping)"
        ]
    },
    "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPojoPropertyAccessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(org.hibernate.mapping.Property,org.hibernate.EntityMode)"
        ]
    },
    "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:void <init>(java.lang.Class)",
            "org.hibernate.tuple.component.PojoComponentTuplizer:void <init>(org.hibernate.mapping.Component)",
            "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(java.lang.Class,java.lang.String)"
        ]
    },
    "org.hibernate.mapping.UnionSubclass:java.util.Iterator getNonDuplicatedPropertyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:void checkColumnDuplication()"
        ]
    },
    "org.hibernate.mapping.PersistentClass:java.util.Iterator getReferenceablePropertyIterator()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.mapping.PersistentClass:org.hibernate.mapping.Property getReferencedProperty(java.lang.String)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.jdbc.Batcher getBatcher()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractScrollableResults:void close()",
            "org.hibernate.impl.SessionImpl:void cancelQuery()",
            "org.hibernate.impl.IteratorImpl:void close()",
            "org.hibernate.id.enhanced.SequenceStructure$1:long getNextValue()",
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.id.insert.AbstractReturningDelegate:void releaseStatement(java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.IncrementGenerator:void getNext(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.GUIDGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SequenceGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.IdentityGenerator$InsertSelectDelegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.IdentityGenerator$GetGeneratedKeysDelegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.SequenceIdentityGenerator$Delegate:java.sql.PreparedStatement prepare(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.sql.ResultSet getResultSet(java.sql.PreparedStatement,boolean,boolean,org.hibernate.engine.RowSelection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp usePreparedStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp useCallableStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.transaction.Isolater$JtaDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)",
            "org.hibernate.engine.transaction.Isolater$JdbcDelegate:void delegateWork(org.hibernate.engine.transaction.IsolatedWork,boolean)",
            "org.hibernate.engine.ActionQueue:void executeActions(java.util.List)"
        ]
    },
    "org.hibernate.impl.SessionImpl:long getTimestamp()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.cache.StandardQueryCache:boolean put(org.hibernate.cache.QueryKey,org.hibernate.type.Type[],java.util.List,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.BatchFetchQueue:boolean isCached(org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,org.hibernate.EntityMode)",
            "org.hibernate.engine.BatchFetchQueue:boolean isCached(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.EntityMode)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.ConnectionReleaseMode getConnectionReleaseMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:void <init>(org.hibernate.jdbc.JDBCContext$Context,java.sql.Connection,org.hibernate.Interceptor)",
            "org.hibernate.jdbc.JDBCContext:org.hibernate.jdbc.JDBCContext deserialize(java.io.ObjectInputStream,org.hibernate.jdbc.JDBCContext$Context,org.hibernate.Interceptor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean isOpen()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:boolean isConnectedToSession()",
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:void initialize()",
            "org.hibernate.proxy.AbstractLazyInitializer:boolean isConnectedToSession()",
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean isConnected()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.AbstractPersistentCollection:void throwLazyInitializationExceptionIfNotConnected()",
            "org.hibernate.collection.AbstractPersistentCollection:void forceInitialization()",
            "org.hibernate.intercept.AbstractFieldInterceptor:java.lang.Object intercept(java.lang.Object,java.lang.String,java.lang.Object)",
            "org.hibernate.proxy.AbstractLazyInitializer:void initialize()"
        ]
    },
    "org.hibernate.impl.SessionImpl:boolean isTransactionInProgress()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:boolean autoFlushIfRequired(java.util.Set)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void reconnect()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:void reconnect(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.EntityMode getEntityMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentArrayHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.AbstractPersistentCollection:java.util.Collection getOrphans(java.util.Collection,java.util.Collection,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:void identityRemove(java.util.Collection,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.PersistentList:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIdentifierBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentSet:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMap:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentBag:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentBag:boolean needsInserting(java.lang.Object,int,org.hibernate.type.Type)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object[],int,java.lang.Object)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void update(java.io.Serializable,java.lang.Object[],int[],boolean,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findDirty(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:int[] findModified(java.lang.Object[],java.lang.Object[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.tuple.entity.EntityTuplizer getTuplizer(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Boolean isTransient(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object createProxy(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getPropertyValuesToInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameter(java.lang.String,java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:org.hibernate.Query setParameterList(java.lang.String,java.util.Collection,org.hibernate.type.Type)",
            "org.hibernate.impl.AbstractQueryImpl:java.lang.String expandParameterList(java.lang.String,java.lang.String,org.hibernate.engine.TypedValue,java.util.Map)",
            "org.hibernate.id.ForeignGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SelectGenerator$SelectGeneratorDelegate:void bindParameters(org.hibernate.engine.SessionImplementor,java.sql.PreparedStatement,java.lang.Object)",
            "org.hibernate.id.Assigned:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object getObjectFromList(java.util.List,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getOptionalObjectKey(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:org.hibernate.engine.EntityKey getKeyFromResultSet(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.List listUsingQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[])",
            "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.io.Serializable[],java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)",
            "org.hibernate.cache.QueryKey:org.hibernate.cache.QueryKey generateQueryKey(java.lang.String,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.EntityIdentityInsertAction:void execute()",
            "org.hibernate.action.EntityIdentityInsertAction:org.hibernate.engine.EntityKey generateDelayedEntityKey()",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityUpdateAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.CollectionAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.action.CollectionAction:void beforeExecutions()",
            "org.hibernate.action.CollectionAction:void evict()",
            "org.hibernate.action.CollectionAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityAction:int compareTo(java.lang.Object)",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.action.EntityDeleteAction:void afterTransactionCompletion(boolean)",
            "org.hibernate.event.def.DefaultLoadEventListener:void onLoad(org.hibernate.event.LoadEvent,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void onFlushEntity(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean isVersionChanged(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void copyValues(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractLockUpgradeEventListener:void upgradeLock(java.lang.Object,org.hibernate.engine.EntityEntry,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processComponent(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.event.def.WrapVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.AbstractSaveEventListener:boolean invokeSaveLifecycle(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:void validate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.FlushVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:boolean invokeDeleteLifecycle(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultPostLoadEventListener:void onPostLoad(org.hibernate.event.PostLoadEvent)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.ReattachVisitor:java.io.Serializable extractCollectionKeyFromOwner(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsPersistent(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:boolean invokeUpdateLifecycle(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractVisitor:void process(java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.BagType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.MutableType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedMapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.SortedSetType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.TypeFactory:void deepCopy(java.lang.Object[],org.hibernate.type.Type[],boolean[],java.lang.Object[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.io.Serializable getIdOfOwnerOrNull(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.CompositeCustomType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.AbstractType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.AbstractType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.ListType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:void nullSafeSet(java.sql.PreparedStatement,java.lang.Object,int,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object getPropertyValue(java.lang.Object,int,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object[] getPropertyValues(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.ComponentType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map,org.hibernate.type.ForeignKeyDirection)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ComponentType:java.io.Serializable disassemble(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object assemble(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object resolve(java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection instantiate(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.type.MapType:org.hibernate.collection.PersistentCollection wrap(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:boolean isDirty(java.lang.Object,java.lang.Object,boolean[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object replace(java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object,java.util.Map)",
            "org.hibernate.type.EntityType:java.lang.Object getIdentifier(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:boolean isNotEmbedded(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object resolveIdentifier(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:org.hibernate.collection.PersistentCollection getLoadingCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.LoadContexts:org.hibernate.EntityMode getEntityMode()",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:org.hibernate.engine.EntityEntry addEntry(java.lang.Object,org.hibernate.engine.Status,java.lang.Object[],java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.persister.entity.EntityPersister,boolean,boolean)",
            "org.hibernate.engine.StatefulPersistenceContext:void reassociateProxy(org.hibernate.proxy.LazyInitializer,org.hibernate.proxy.HibernateProxy)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object narrowProxy(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object proxyFor(java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getCollectionOwner(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.StatefulPersistenceContext:void addCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.CollectionEntry,java.io.Serializable)",
            "org.hibernate.engine.StatefulPersistenceContext:boolean isFoundInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:java.lang.Object getIndexInParent(java.lang.String,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.persister.collection.CollectionPersister,java.lang.Object)",
            "org.hibernate.engine.StatefulPersistenceContext:void replaceDelayedEntityIdentityInsertKeys(org.hibernate.engine.EntityKey,java.io.Serializable)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:java.io.Serializable getEntityIdentifierIfNotUnsaved(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys$Nullifier:java.lang.Object nullifyTransientReferences(java.lang.Object,org.hibernate.type.Type)",
            "org.hibernate.engine.Cascade:void cascade(org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.engine.Cascade:boolean cascadeAssociationNow(org.hibernate.type.AssociationType)",
            "org.hibernate.engine.Cascade:void cascadeCollectionElements(java.lang.Object,org.hibernate.type.CollectionType,org.hibernate.engine.CascadeStyle,org.hibernate.type.Type,java.lang.Object,boolean)",
            "org.hibernate.engine.Nullability:java.lang.String checkComponentNullability(java.lang.Object,org.hibernate.type.AbstractComponentType)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void setFlushMode(org.hibernate.FlushMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:void before()",
            "org.hibernate.impl.CriteriaImpl:void after()",
            "org.hibernate.impl.AbstractQueryImpl:void before()",
            "org.hibernate.impl.AbstractQueryImpl:void after()"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.FlushMode getFlushMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:void before()",
            "org.hibernate.impl.AbstractQueryImpl:void before()",
            "org.hibernate.impl.SessionImpl:boolean isFlushModeNever()",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushIsReallyNeeded(org.hibernate.event.AutoFlushEvent,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushMightBeNeeded(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.CacheMode getCacheMode()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:void before()",
            "org.hibernate.impl.AbstractQueryImpl:void before()",
            "org.hibernate.loader.Loader:java.util.List getResultFromQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,java.util.Set,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey)",
            "org.hibernate.loader.Loader:void putResultInQueryCache(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.type.Type[],org.hibernate.cache.QueryCache,org.hibernate.cache.QueryKey,java.util.List)",
            "org.hibernate.action.EntityInsertAction:boolean isCachePutEnabled(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSecondLevelCache(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeBeforeDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.EntityEntry,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeAfterDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Set)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollection(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.loading.CollectionLoadContext:void addCollectionToCache(org.hibernate.engine.loading.LoadingCollectionEntry,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)",
            "org.hibernate.engine.TwoPhaseLoad:boolean useMinimalPuts(org.hibernate.engine.SessionImplementor,org.hibernate.engine.EntityEntry)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void setCacheMode(org.hibernate.CacheMode)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:void before()",
            "org.hibernate.impl.CriteriaImpl:void after()",
            "org.hibernate.impl.AbstractQueryImpl:void before()",
            "org.hibernate.impl.AbstractQueryImpl:void after()",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeBeforeDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.EntityEntry,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeAfterDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Set)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Criteria createCriteria(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.SessionFactory getSessionFactory()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.context.ThreadLocalSessionContext$TransactionProtectionWrapper:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[])",
            "org.hibernate.context.ThreadLocalSessionContext:void bind(org.hibernate.Session)",
            "org.hibernate.context.ManagedSessionContext:org.hibernate.classic.Session bind(org.hibernate.classic.Session)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Interceptor getInterceptor()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultPreLoadEventListener:void onPreLoad(org.hibernate.event.PreLoadEvent)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean invokeInterceptor(org.hibernate.engine.SessionImplementor,java.lang.Object,org.hibernate.engine.EntityEntry,java.lang.Object[],org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void dirtyCheck(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.AbstractSaveEventListener:boolean substituteValuesIfNecessary(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.engine.ActionQueue getActionQueue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultDirtyCheckEventListener:void onDirtyCheck(org.hibernate.event.DirtyCheckEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean scheduleUpdate(org.hibernate.event.FlushEntityEvent)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:void onAutoFlush(org.hibernate.event.AutoFlushEvent)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushIsReallyNeeded(org.hibernate.event.AutoFlushEvent,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.ReattachVisitor:void removeCollection(org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEntities(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void performExecutions(org.hibernate.event.EventSource)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.engine.PersistenceContext getPersistenceContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.collection.AbstractPersistentCollection:boolean readSize()",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readIndexExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Boolean readElementExistence(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:java.lang.Object readElementByIndex(java.lang.Object)",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isConnectedToSession()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseCollection()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseCollectionNoOrphanDelete()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean isInverseOneToManyOrNoOrphanDelete()",
            "org.hibernate.collection.AbstractPersistentCollection:boolean setCurrentSession(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.collection.AbstractPersistentCollection:java.io.Serializable getSnapshot()",
            "org.hibernate.collection.PersistentIndexedElementHolder:void <init>(org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:org.hibernate.loader.collection.CollectionInitializer getSubselectInitializer(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.NamedQueryLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyProperty(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.impl.AbstractScrollableResults:void close()",
            "org.hibernate.impl.IteratorImpl:void close()",
            "org.hibernate.stat.SessionStatisticsImpl:int getEntityCount()",
            "org.hibernate.stat.SessionStatisticsImpl:int getCollectionCount()",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getEntityKeys()",
            "org.hibernate.stat.SessionStatisticsImpl:java.util.Set getCollectionKeys()",
            "org.hibernate.loader.collection.BatchingCollectionInitializer:void initialize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.entity.BatchingEntityLoader:java.lang.Object load(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.util.List doQueryAndInitializeNonLazyCollections(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object loadSingleRow(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.lang.Object sequentialLoad(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.EntityKey)",
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)",
            "org.hibernate.loader.Loader:void createSubselects(java.util.List,org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void endCollectionLoad(java.lang.Object,org.hibernate.engine.SessionImplementor,org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.loader.Loader:void registerNonExists(org.hibernate.engine.EntityKey[],org.hibernate.persister.entity.Loadable[],org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void readCollectionElement(java.lang.Object,java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.loader.CollectionAliases,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void handleEmptyCollections(java.io.Serializable[],java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void checkVersion(int,org.hibernate.persister.entity.Loadable,java.io.Serializable,java.lang.Object,java.sql.ResultSet,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void instanceAlreadyLoaded(java.sql.ResultSet,int,org.hibernate.persister.entity.Loadable,org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:void loadFromResultSet(java.sql.ResultSet,int,java.lang.Object,java.lang.String,org.hibernate.engine.EntityKey,java.lang.String,org.hibernate.LockMode,org.hibernate.persister.entity.Loadable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.EntityIdentityInsertAction:void postInsert()",
            "org.hibernate.action.CollectionUpdateAction:void execute()",
            "org.hibernate.action.CollectionRecreateAction:void execute()",
            "org.hibernate.action.EntityUpdateAction:void execute()",
            "org.hibernate.action.EntityInsertAction:void execute()",
            "org.hibernate.action.CollectionAction:java.io.Serializable getKey()",
            "org.hibernate.action.EntityAction:java.io.Serializable getId()",
            "org.hibernate.action.EntityDeleteAction:void execute()",
            "org.hibernate.action.CollectionRemoveAction:void <init>(org.hibernate.collection.PersistentCollection,org.hibernate.persister.collection.CollectionPersister,java.io.Serializable,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.action.CollectionRemoveAction:void execute()",
            "org.hibernate.event.def.DefaultPersistEventListener:void onPersist(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsPersistent(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultPersistEventListener:void entityIsTransient(org.hibernate.event.PersistEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object load(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object proxyOrLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object lockAndLoad(org.hibernate.event.LoadEvent,org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object loadFromSessionCache(org.hibernate.event.LoadEvent,org.hibernate.engine.EntityKey,org.hibernate.event.LoadEventListener$LoadType)",
            "org.hibernate.event.def.DefaultLoadEventListener:java.lang.Object assembleCacheEntry(org.hibernate.cache.entry.CacheEntry,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.event.LoadEvent)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultSaveEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultFlushEventListener:void onFlush(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:void checkNaturalId(org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.EntityEntry,java.lang.Object[],java.lang.Object[],org.hibernate.EntityMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultFlushEntityEventListener:java.lang.Object[] getDatabaseSnapshot(org.hibernate.engine.SessionImplementor,org.hibernate.persister.entity.EntityPersister,java.io.Serializable)",
            "org.hibernate.event.def.DirtyCollectionSearchVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.DefaultMergeEventListener:org.hibernate.event.def.EventCache getTransientCopyCache(org.hibernate.event.MergeEvent,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void retryMergeTransientEntities(org.hibernate.event.MergeEvent,java.util.Map,org.hibernate.event.def.EventCache)",
            "org.hibernate.event.def.DefaultMergeEventListener:void onMerge(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:java.lang.Object mergeTransientEntity(java.lang.Object,java.lang.String,java.io.Serializable,org.hibernate.event.EventSource,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:boolean existsInDatabase(java.lang.Object,org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultMergeEventListener:void cascadeOnMerge(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Map)",
            "org.hibernate.event.def.DefaultLockEventListener:void onLock(org.hibernate.event.LockEvent)",
            "org.hibernate.event.def.DefaultLockEventListener:void cascadeOnLock(org.hibernate.event.LockEvent,org.hibernate.persister.entity.EntityPersister,java.lang.Object)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void onReplicate(org.hibernate.event.ReplicateEvent)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void performReplication(java.lang.Object,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.DefaultReplicateEventListener:void cascadeAfterReplicate(java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.ReplicationMode,org.hibernate.event.EventSource)",
            "org.hibernate.event.def.ProxyVisitor:java.lang.Object processEntity(java.lang.Object,org.hibernate.type.EntityType)",
            "org.hibernate.event.def.ProxyVisitor:void reattachCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.DefaultAutoFlushEventListener:boolean flushMightBeNeeded(org.hibernate.event.EventSource)",
            "org.hibernate.event.def.WrapVisitor:java.lang.Object processArrayOrNewCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSave(java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.AbstractSaveEventListener:void cascadeBeforeSave(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:void cascadeAfterSave(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:void onInitializeCollection(org.hibernate.event.InitializeCollectionEvent)",
            "org.hibernate.event.def.DefaultInitializeCollectionEventListener:boolean initializeCollectionFromCache(java.io.Serializable,org.hibernate.persister.collection.CollectionPersister,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.FlushVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.DefaultEvictEventListener:void onEvict(org.hibernate.event.EvictEvent)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void onDelete(org.hibernate.event.DeleteEvent,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void deleteEntity(org.hibernate.event.EventSource,java.lang.Object,org.hibernate.engine.EntityEntry,boolean,org.hibernate.persister.entity.EntityPersister,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeBeforeDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,org.hibernate.engine.EntityEntry,java.util.Set)",
            "org.hibernate.event.def.DefaultDeleteEventListener:void cascadeAfterDelete(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.util.Set)",
            "org.hibernate.event.def.OnReplicateVisitor:java.lang.Object processCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.AbstractReassociateEventListener:org.hibernate.engine.EntityEntry reassociate(org.hibernate.event.AbstractEvent,java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEverythingToExecutions(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareEntityFlushes(org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void cascadeOnFlush(org.hibernate.event.EventSource,org.hibernate.persister.entity.EntityPersister,java.lang.Object,java.lang.Object)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void prepareCollectionFlushes(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushEntities(org.hibernate.event.FlushEvent)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void flushCollections(org.hibernate.event.EventSource)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void postFlush(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultUpdateEventListener:java.io.Serializable performSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(java.lang.Object,org.hibernate.type.CollectionType)",
            "org.hibernate.event.def.EvictVisitor:void evictCollection(org.hibernate.collection.PersistentCollection)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void onSaveOrUpdate(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:boolean reassociateIfUninitializedProxy(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:java.io.Serializable entityIsTransient(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void entityIsDetached(org.hibernate.event.SaveOrUpdateEvent)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void performUpdate(org.hibernate.event.SaveOrUpdateEvent,java.lang.Object,org.hibernate.persister.entity.EntityPersister)",
            "org.hibernate.event.def.DefaultSaveOrUpdateEventListener:void cascadeOnUpdate(org.hibernate.event.SaveOrUpdateEvent,org.hibernate.persister.entity.EntityPersister,java.lang.Object)",
            "org.hibernate.event.AbstractCollectionEvent:org.hibernate.persister.collection.CollectionPersister getLoadedCollectionPersister(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.AbstractCollectionEvent:java.lang.Object getLoadedOwnerOrNull(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.AbstractCollectionEvent:java.io.Serializable getLoadedOwnerIdOrNull(org.hibernate.collection.PersistentCollection,org.hibernate.event.EventSource)",
            "org.hibernate.event.AbstractCollectionEvent:java.io.Serializable getOwnerIdOrNull(java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.event.AbstractCollectionEvent:java.lang.String getAffectedOwnerEntityName(org.hibernate.persister.collection.CollectionPersister,java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.type.CollectionType:java.io.Serializable getKeyOfOwner(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.CollectionType:java.lang.Object getCollection(java.io.Serializable,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.type.ComponentType:java.lang.Object instantiate(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.OneToOneType:boolean isNull(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.ManyToOneType:void scheduleBatchLoadIfNeeded(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object loadByUniqueKey(java.lang.String,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.proxy.pojo.BasicLazyInitializer:java.lang.Object getReplacement()",
            "org.hibernate.proxy.AbstractLazyInitializer:boolean isConnectedToSession()",
            "org.hibernate.proxy.AbstractLazyInitializer:java.lang.Object getImplementation(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.loading.CollectionLoadContext:void endLoadingCollections(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.engine.ForeignKeys:boolean isNotTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.ForeignKeys:boolean isTransient(java.lang.String,java.lang.Object,java.lang.Boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.EntityEntry:boolean isNullifiable(boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.CascadingAction$9:boolean isInManagedState(java.lang.Object,org.hibernate.event.EventSource)",
            "org.hibernate.engine.ForeignKeys$Nullifier:boolean isNullifiable(java.lang.String,java.lang.Object)",
            "org.hibernate.engine.Cascade:void deleteOrphans(java.lang.String,org.hibernate.collection.PersistentCollection)",
            "org.hibernate.engine.Collections:void processDereferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processNeverReferencedCollection(org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.Collections:void processReachableCollection(org.hibernate.collection.PersistentCollection,org.hibernate.type.CollectionType,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void postHydrate(org.hibernate.persister.entity.EntityPersister,java.io.Serializable,java.lang.Object[],java.lang.Object,java.lang.Object,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)",
            "org.hibernate.engine.TwoPhaseLoad:void addUninitializedEntity(org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.LockMode,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void addUninitializedCachedEntity(org.hibernate.engine.EntityKey,java.lang.Object,org.hibernate.persister.entity.EntityPersister,org.hibernate.LockMode,boolean,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.property.IndexPropertyAccessor$IndexGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.property.BackrefPropertyAccessor$BackrefGetter:java.lang.Object getForInsert(java.lang.Object,java.util.Map,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.stat.SessionStatistics getStatistics()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:boolean isEventSource()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:void initializeEntitiesAndCollections(java.util.List,java.lang.Object,org.hibernate.engine.SessionImplementor,boolean)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:void coordinateSharedCacheCleanup(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.impl.SessionImpl:java.lang.String getFetchProfile()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.entity.AbstractEntityPersister:org.hibernate.loader.entity.UniqueEntityLoader getAppropriateLoader(org.hibernate.LockMode,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.jdbc.JDBCContext getJDBCContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)",
            "org.hibernate.event.def.AbstractFlushingEventListener:void performExecutions(org.hibernate.event.EventSource)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void createTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.impl.SessionImpl:void setFetchProfile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultRefreshEventListener:void onRefresh(org.hibernate.event.RefreshEvent,java.util.Map)",
            "org.hibernate.event.def.DefaultMergeEventListener:void entityIsDetached(org.hibernate.event.MergeEvent,java.util.Map)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:void <init>(java.sql.Connection,org.hibernate.impl.SessionFactoryImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.StatelessSession openStatelessSession()",
            "org.hibernate.impl.SessionFactoryImpl:org.hibernate.StatelessSession openStatelessSession(java.sql.Connection)"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:org.hibernate.Transaction beginTransaction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionImpl:org.hibernate.Transaction beginTransaction()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.transaction.JDBCTransactionFactory:boolean isTransactionInProgress(org.hibernate.jdbc.JDBCContext,org.hibernate.transaction.TransactionFactory$Context,org.hibernate.Transaction)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.JDBCContext:boolean isTransactionInProgress()"
        ]
    },
    "org.hibernate.impl.StatelessSessionImpl:boolean isTransactionInProgress()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.ConnectionManager:boolean isAggressiveRelease()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.ConnectionManager:void afterStatement()"
        ]
    },
    "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.CriteriaImpl:org.hibernate.Criteria createCriteria(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.criterion.DetachedCriteria:org.hibernate.criterion.DetachedCriteria createCriteria(java.lang.String)"
        ]
    },
    "org.hibernate.hql.ast.util.ASTUtil:java.util.List collectChildren(antlr.collections.AST,org.hibernate.hql.ast.util.ASTUtil$FilterPredicate)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.tree.FromClause:java.util.List getFromElements()",
            "org.hibernate.hql.ast.tree.FromClause:java.util.List getProjectionList()",
            "org.hibernate.hql.ast.tree.FromClause:java.util.List getCollectionFetches()",
            "org.hibernate.hql.ast.tree.FromClause:java.util.List getExplicitFromElements()",
            "org.hibernate.hql.ast.tree.AssignmentSpecification:void <init>(antlr.collections.AST,org.hibernate.persister.entity.Queryable)"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void begin()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:org.hibernate.Transaction beginTransaction()",
            "org.hibernate.impl.SessionImpl:org.hibernate.Transaction beginTransaction()"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void commitAndResetAutoCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void commit()"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void rollbackAndResetAutoCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void rollback()"
        ]
    },
    "org.hibernate.transaction.JDBCTransaction:void toggleAutoCommit()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transaction.JDBCTransaction:void commitAndResetAutoCommit()",
            "org.hibernate.transaction.JDBCTransaction:void rollbackAndResetAutoCommit()"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void closePreparedStatement(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.AbstractBatcher:void closeStatement(java.sql.PreparedStatement)"
        ]
    },
    "org.hibernate.jdbc.ConnectionManager:void flushEnding()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractFlushingEventListener:void performExecutions(org.hibernate.event.EventSource)"
        ]
    },
    "org.hibernate.id.enhanced.TableGenerator$1:long getNextValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.OptimizerFactory$PooledOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)",
            "org.hibernate.id.enhanced.OptimizerFactory$NoopOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)",
            "org.hibernate.id.enhanced.OptimizerFactory$HiLoOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"
        ]
    },
    "org.hibernate.id.enhanced.TableStructure$1:long getNextValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.enhanced.OptimizerFactory$PooledOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)",
            "org.hibernate.id.enhanced.OptimizerFactory$NoopOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)",
            "org.hibernate.id.enhanced.OptimizerFactory$HiLoOptimizer:java.io.Serializable generate(org.hibernate.id.enhanced.AccessCallback)"
        ]
    },
    "org.hibernate.id.MultipleHiLoPerTableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.id.TableGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.id.TableHiLoGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.engine.Versioning:boolean seedVersion(java.lang.Object[],int,org.hibernate.type.VersionType,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:boolean substituteValuesIfNecessary(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.dialect.Oracle8iDialect:int registerResultSetOutParameter(java.sql.CallableStatement,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.hql.ast.QueryTranslatorImpl$JavaConstantConverter:void visit(antlr.collections.AST)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.hql.ast.util.NodeTraverser:void visitDepthFirst(antlr.collections.AST)"
        ]
    },
    "org.hibernate.collection.PersistentIndexedElementHolder:java.lang.Object getIndex(java.lang.Object,int,org.hibernate.persister.collection.CollectionPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.type.NullableType:java.lang.Object fromXMLNode(org.dom4j.Node,org.hibernate.engine.Mapping)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentElementHolder:java.util.Iterator getDeletes(org.hibernate.persister.collection.CollectionPersister,boolean)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.io.Serializable getSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:boolean equalsSnapshot(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentIndexedElementHolder:java.util.Iterator entries(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentMapElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.collection.PersistentListElementHolder:java.io.Serializable disassemble(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.type.CollectionType:java.util.Iterator getElementsIterator(java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.EntityType:java.lang.Object fromXMLNode(org.dom4j.Node,org.hibernate.engine.Mapping)",
            "org.hibernate.property.Dom4jAccessor$TextGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$AttributeGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementGetter:java.lang.Object get(java.lang.Object)",
            "org.hibernate.property.Dom4jAccessor$ElementAttributeGetter:java.lang.Object get(java.lang.Object)"
        ]
    },
    "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.tuple.Instantiator buildInstantiator(org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.transform.AliasToBeanResultTransformer:void <init>(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.Transformers:org.hibernate.transform.ResultTransformer aliasToBean(java.lang.Class)"
        ]
    },
    "org.hibernate.property.PropertyAccessorFactory:org.hibernate.property.PropertyAccessor getPropertyAccessor(java.lang.Class,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.transform.AliasToBeanResultTransformer:void <init>(java.lang.Class)",
            "org.hibernate.mapping.Property:org.hibernate.property.PropertyAccessor getPropertyAccessor(java.lang.Class)"
        ]
    },
    "org.hibernate.id.insert.AbstractReturningDelegate:void releaseStatement(java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.id.insert.AbstractReturningDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)"
        ]
    },
    "org.hibernate.jdbc.JDBCContext:org.hibernate.jdbc.JDBCContext deserialize(java.io.ObjectInputStream,org.hibernate.jdbc.JDBCContext$Context,org.hibernate.Interceptor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SessionImpl:void readObject(java.io.ObjectInputStream)"
        ]
    },
    "org.hibernate.impl.CriteriaImpl:void after()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.CriteriaImpl:java.util.List list()",
            "org.hibernate.impl.CriteriaImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)"
        ]
    },
    "org.hibernate.impl.AbstractQueryImpl:void after()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.SQLQueryImpl:java.util.List list()",
            "org.hibernate.impl.SQLQueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.SQLQueryImpl:int executeUpdate()",
            "org.hibernate.impl.QueryImpl:java.util.Iterator iterate()",
            "org.hibernate.impl.QueryImpl:org.hibernate.ScrollableResults scroll(org.hibernate.ScrollMode)",
            "org.hibernate.impl.QueryImpl:java.util.List list()",
            "org.hibernate.impl.QueryImpl:int executeUpdate()"
        ]
    },
    "org.hibernate.event.def.DefaultPreLoadEventListener:void onPreLoad(org.hibernate.event.PreLoadEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.cache.entry.CacheEntry:java.lang.Object[] assemble(java.io.Serializable[],java.lang.Object,java.io.Serializable,org.hibernate.persister.entity.EntityPersister,org.hibernate.Interceptor,org.hibernate.event.EventSource)",
            "org.hibernate.engine.TwoPhaseLoad:void initializeEntity(java.lang.Object,boolean,org.hibernate.engine.SessionImplementor,org.hibernate.event.PreLoadEvent,org.hibernate.event.PostLoadEvent)"
        ]
    },
    "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean invokeInterceptor(org.hibernate.engine.SessionImplementor,java.lang.Object,org.hibernate.engine.EntityEntry,java.lang.Object[],org.hibernate.persister.entity.EntityPersister)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.DefaultFlushEntityEventListener:boolean handleInterception(org.hibernate.event.FlushEntityEvent)"
        ]
    },
    "org.hibernate.event.def.AbstractSaveEventListener:boolean substituteValuesIfNecessary(java.lang.Object,java.io.Serializable,java.lang.Object[],org.hibernate.persister.entity.EntityPersister,org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable performSaveOrReplicate(java.lang.Object,org.hibernate.engine.EntityKey,org.hibernate.persister.entity.EntityPersister,boolean,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.loader.Loader:void registerNonExists(org.hibernate.engine.EntityKey[],org.hibernate.persister.entity.Loadable[],org.hibernate.engine.SessionImplementor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.loader.Loader:java.lang.Object getRowFromResultSet(java.sql.ResultSet,org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,org.hibernate.LockMode[],org.hibernate.engine.EntityKey,java.util.List,org.hibernate.engine.EntityKey[],boolean)"
        ]
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.StatelessSession openStatelessSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.impl.SessionFactoryImpl:org.hibernate.StatelessSession openStatelessSession(java.sql.Connection)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:java.util.List getFromElements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:java.util.List getProjectionList()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:java.util.List getCollectionFetches()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.hql.ast.tree.FromClause:java.util.List getExplicitFromElements()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.jdbc.AbstractBatcher:void closeStatement(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:int getSize(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:boolean exists(java.io.Serializable,java.lang.Object,org.hibernate.type.Type,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:java.lang.Object getElementByIndex(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object initializeLazyPropertiesFromDatastore(java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor,java.io.Serializable,org.hibernate.engine.EntityEntry)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getDatabaseSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object forceVersionIncrement(java.io.Serializable,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object getCurrentVersion(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] hydrate(java.sql.ResultSet,java.io.Serializable,java.lang.Object,org.hibernate.persister.entity.Loadable,java.lang.String[][],boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:void processGeneratedProperties(java.io.Serializable,java.lang.Object,java.lang.Object[],org.hibernate.engine.SessionImplementor,java.lang.String,org.hibernate.engine.ValueInclusion[])",
            "org.hibernate.persister.entity.AbstractEntityPersister:java.lang.Object[] getNaturalIdentifierSnapshot(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.enhanced.SequenceStructure$1:long getNextValue()",
            "org.hibernate.id.insert.AbstractSelectingDelegate:java.io.Serializable performInsert(java.lang.String,org.hibernate.engine.SessionImplementor,org.hibernate.id.insert.Binder)",
            "org.hibernate.id.insert.AbstractReturningDelegate:void releaseStatement(java.sql.PreparedStatement,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.IncrementGenerator:void getNext(org.hibernate.engine.SessionImplementor)",
            "org.hibernate.id.GUIDGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.id.SequenceGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)",
            "org.hibernate.dialect.lock.UpdateLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.dialect.lock.SelectLockingStrategy:void lock(java.io.Serializable,java.lang.Object,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.jdbc.AbstractBatcher:void abortBatch(java.sql.SQLException)",
            "org.hibernate.jdbc.AbstractBatcher:void executeBatch()",
            "org.hibernate.jdbc.AbstractBatcher:void closeQueryStatement(java.sql.PreparedStatement)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp usePreparedStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.type.DbTimestampType:java.sql.Timestamp useCallableStatement(java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableDeleteExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.BasicExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.AbstractStatementExecutor:void dropTemporaryTableIfNecessary(org.hibernate.persister.entity.Queryable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.hql.ast.exec.MultiTableUpdateExecutor:int execute(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.engine.query.NativeSQLQueryPlan:int performExecuteUpdate(org.hibernate.engine.QueryParameters,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.id.TableHiLoGenerator:java.io.Serializable generate(org.hibernate.engine.SessionImplementor,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.collection.PersistentIdentifierBag:void preInsert(org.hibernate.persister.collection.CollectionPersister)",
            "org.hibernate.impl.SessionFactoryImpl:void <init>(org.hibernate.cfg.Configuration,org.hibernate.engine.Mapping,org.hibernate.cfg.Settings,org.hibernate.event.EventListeners,org.hibernate.SessionFactoryObserver)",
            "org.hibernate.impl.StatelessSessionImpl:java.io.Serializable insert(java.lang.String,java.lang.Object)",
            "org.hibernate.event.def.AbstractSaveEventListener:java.io.Serializable saveWithGeneratedId(java.lang.Object,java.lang.String,java.lang.Object,org.hibernate.event.EventSource,boolean)"
        ]
    },
    "org.hibernate.transform.Transformers:org.hibernate.transform.ResultTransformer aliasToBean(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.hibernate.mapping.Property:org.hibernate.property.PropertyAccessor getPropertyAccessor(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)",
            "org.hibernate.tuple.entity.Dom4jEntityTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)",
            "org.hibernate.mapping.Property:org.hibernate.property.Getter getGetter(java.lang.Class)",
            "org.hibernate.mapping.Property:org.hibernate.property.Setter getSetter(java.lang.Class)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void abortBatch(java.sql.SQLException)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.persister.collection.AbstractCollectionPersister:void remove(java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void recreate(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void deleteRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.AbstractCollectionPersister:void insertRows(org.hibernate.collection.PersistentCollection,java.io.Serializable,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.BasicCollectionPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.collection.OneToManyPersister:int doUpdateRows(java.io.Serializable,org.hibernate.collection.PersistentCollection,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void insert(java.io.Serializable,java.lang.Object[],boolean[],int,java.lang.String,java.lang.Object,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:boolean update(java.io.Serializable,java.lang.Object[],java.lang.Object[],java.lang.Object,boolean[],int,java.lang.Object,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.persister.entity.AbstractEntityPersister:void delete(java.io.Serializable,java.lang.Object,int,java.lang.Object,java.lang.String,org.hibernate.engine.SessionImplementor,java.lang.Object[])"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void closeQueryStatement(java.sql.PreparedStatement)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.jdbc.AbstractBatcher:void closeQueryStatement(java.sql.PreparedStatement,java.sql.ResultSet)",
            "org.hibernate.jdbc.AbstractBatcher:void closeStatements()"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.property.PropertyAccessor buildPropertyAccessor(org.hibernate.mapping.Property)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.mapping.Property:org.hibernate.property.Getter getGetter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.property.Getter buildGetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)",
            "org.hibernate.mapping.Property:boolean isPrimitive(java.lang.Class)"
        ]
    },
    "org.hibernate.mapping.Property:org.hibernate.property.Setter getSetter(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.component.PojoComponentTuplizer:org.hibernate.property.Setter buildSetter(org.hibernate.mapping.Component,org.hibernate.mapping.Property)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.proxy.ProxyFactory buildProxyFactory(org.hibernate.mapping.PersistentClass,org.hibernate.property.Getter,org.hibernate.property.Setter)",
            "org.hibernate.tuple.entity.PojoEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.jdbc.AbstractBatcher:void closeQueryStatement(java.sql.PreparedStatement,java.sql.ResultSet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.impl.AbstractScrollableResults:void close()",
            "org.hibernate.impl.IteratorImpl:void close()",
            "org.hibernate.loader.Loader:java.util.List doQuery(org.hibernate.engine.SessionImplementor,org.hibernate.engine.QueryParameters,boolean)",
            "org.hibernate.loader.Loader:java.sql.PreparedStatement prepareQueryStatement(org.hibernate.engine.QueryParameters,boolean,org.hibernate.engine.SessionImplementor)",
            "org.hibernate.loader.Loader:java.sql.ResultSet getResultSet(java.sql.PreparedStatement,boolean,boolean,org.hibernate.engine.RowSelection,org.hibernate.engine.SessionImplementor)"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.property.Getter buildPropertyGetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.tuple.entity.DynamicMapEntityTuplizer:org.hibernate.property.Setter buildPropertySetter(org.hibernate.mapping.Property,org.hibernate.mapping.PersistentClass)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.hibernate.tuple.entity.AbstractEntityTuplizer:void <init>(org.hibernate.tuple.entity.EntityMetamodel,org.hibernate.mapping.PersistentClass)"
        ]
    },
    "org.hibernate.mapping.Property:boolean isPrimitive(java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
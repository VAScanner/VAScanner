{
    "org.springframework.integration.xml.transformer.support.XPathExpressionEvaluatingHeaderValueMessageProcessor:java.lang.Object processMessage(org.springframework.messaging.Message)": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.springframework.integration.xml.config.XPathHeaderEnricherParser:void processHeaders(org.w3c.dom.Element,org.springframework.beans.factory.support.ManagedMap,org.springframework.beans.factory.xml.ParserContext)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.integration.xml.config.XPathHeaderEnricherParser:void parseTransformer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)"
        ]
    },
    "org.springframework.integration.xml.transformer.XsltPayloadTransformer:void onInit()": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.springframework.integration.xml.DefaultXmlPayloadConverter:org.w3c.dom.Node convertToNode(java.lang.Object)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.integration.xml.xpath.XPathUtils:java.lang.Object evaluate(java.lang.Object,java.lang.String,java.lang.Object[])",
            "org.springframework.integration.xml.router.XPathRouter:java.util.List getChannelKeys(org.springframework.messaging.Message)",
            "org.springframework.integration.xml.selector.BooleanTestXPathMessageSelector:boolean accept(org.springframework.messaging.Message)",
            "org.springframework.integration.xml.selector.RegexTestXPathMessageSelector:boolean accept(org.springframework.messaging.Message)",
            "org.springframework.integration.xml.selector.StringValueTestXPathMessageSelector:boolean accept(org.springframework.messaging.Message)",
            "org.springframework.integration.xml.transformer.support.XPathExpressionEvaluatingHeaderValueMessageProcessor:java.lang.Object processMessage(org.springframework.messaging.Message)",
            "org.springframework.integration.xml.transformer.XPathTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.integration.xml.selector.XmlValidatingMessageSelector:boolean accept(org.springframework.messaging.Message)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.integration.xml.selector.XmlValidatingMessageSelector:boolean accept(java.lang.Object)"
        ]
    },
    "org.springframework.integration.xml.transformer.ResultToDocumentTransformer:java.lang.Object transformResult(javax.xml.transform.Result)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object transformSource(javax.xml.transform.Source,java.lang.Object,javax.xml.transform.Transformer)",
            "org.springframework.integration.xml.transformer.MarshallingTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)"
        ]
    },
    "org.springframework.integration.xml.config.XPathHeaderEnricherParser:void parseTransformer(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.xpath.XPathUtils:java.lang.Object evaluate(java.lang.Object,java.lang.String,java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.router.XPathRouter:java.util.List getChannelKeys(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.selector.BooleanTestXPathMessageSelector:boolean accept(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.integration.xml.selector.BooleanTestXPathMessageSelector:boolean accept(java.lang.Object)"
        ]
    },
    "org.springframework.integration.xml.selector.RegexTestXPathMessageSelector:boolean accept(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.integration.xml.selector.RegexTestXPathMessageSelector:boolean accept(java.lang.Object)"
        ]
    },
    "org.springframework.integration.xml.selector.StringValueTestXPathMessageSelector:boolean accept(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.integration.xml.selector.StringValueTestXPathMessageSelector:boolean accept(java.lang.Object)"
        ]
    },
    "org.springframework.integration.xml.transformer.XPathTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.selector.XmlValidatingMessageSelector:boolean accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object transformSource(javax.xml.transform.Source,java.lang.Object,javax.xml.transform.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)",
            "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object transformUsingResultFactory(java.lang.Object,javax.xml.transform.Transformer)"
        ]
    },
    "org.springframework.integration.xml.transformer.MarshallingTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.selector.BooleanTestXPathMessageSelector:boolean accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.selector.RegexTestXPathMessageSelector:boolean accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.selector.StringValueTestXPathMessageSelector:boolean accept(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object transformUsingResultFactory(java.lang.Object,javax.xml.transform.Transformer)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.integration.xml.transformer.XsltPayloadTransformer:java.lang.Object doTransform(org.springframework.messaging.Message)"
        ]
    }
}
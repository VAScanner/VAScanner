{
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:byte[] _finishBytes(int)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _decodeNonStringName(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _readAndWriteBytes(java.io.OutputStream,int)": {
        "isVulRoot": true,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean loadMore()": {
        "isVulRoot": true,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsEndArray()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void loadMoreGuaranteed()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void loadMoreGuaranteed()": {
        "isVulRoot": true,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _readAndWriteBytes(java.io.OutputStream,int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishChunkedText()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextByte()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextChunkedByte2()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:byte[] _finishBytes(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipBytes(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkLength(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decode8Bits()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _slow16()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _slow32()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeSimpleValue(int,int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _handleTaggedBinary(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void finishToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:char[] getTextCharacters()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int getTextLength()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int getText(java.io.Writer)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.Object getEmbeddedObject()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _decodeNonStringName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeFieldName()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsEndArray()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean nextFieldName(com.fasterxml.jackson.core.SerializableString)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int nextIntValue(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:long nextLongValue(long)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.Boolean nextBooleanValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _handleTaggedArray(int,int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsEndArray()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _handleTaggedArray(int,int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishChunkedText()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _finishTextToken(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _decodeChunkedName()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishLongText(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeUTF8_3(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeUTF8_4(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextChunkedByte2()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextChunkedByte()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeFieldName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipBytes(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipBytesL(long)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishChunkedText()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextChunkedByte2()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decode8Bits()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _numberToName(int,boolean)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeTag(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeExplicitLength(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _slow16()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decode16Bits()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _slow32()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decode32Bits()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeSimpleValue(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _handleTaggedBinary(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void finishToken()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:char[] getTextCharacters()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int getTextLength()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int getText(java.io.Writer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.Object getEmbeddedObject()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean nextFieldName(com.fasterxml.jackson.core.SerializableString)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int nextIntValue(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:long nextLongValue(long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.Boolean nextBooleanValue()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _handleTaggedArray(int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _finishTextToken(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getText()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getValueAsString()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _decodeChunkedName()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeFieldName()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishLongText(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _finishTextToken(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _decodeLongerName(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeUTF8_3(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishLongText(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeUTF8_4(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishLongText(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _nextChunkedByte()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishChunkedText()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkedUTF8_3(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkedUTF8_4(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean nextFieldName(com.fasterxml.jackson.core.SerializableString)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipBytesL(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _numberToName(int,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _decodeNonStringName(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeTag(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsEndArray()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeExplicitLength(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int readBinaryValue(com.fasterxml.jackson.core.Base64Variant,java.io.OutputStream)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _finishTextToken(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:byte[] _finishBytes(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _decodeNonStringName(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkLength(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decode16Bits()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _numberToName(int,boolean)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeTag(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeExplicitLength(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:float _decodeHalfSizeFloat()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decode32Bits()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _numberToName(int,boolean)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeTag(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeExplicitLength(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:long _slow64()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getText()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getValueAsString()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getValueAsString(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void convertNumberToInt()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void convertNumberToBigDecimal()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getValueAsString()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _decodeLongerName(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextFieldName()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _decodeFieldName()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkedUTF8_3(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishChunkedText()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeChunkedUTF8_4(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _finishChunkedText()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:float _decodeHalfSizeFloat()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:long _slow64()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:long _decode64Bits()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String getValueAsString(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void convertNumberToInt()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int getIntValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:void convertNumberToBigDecimal()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.math.BigDecimal getDecimalValue()"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:long _decode64Bits()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken nextToken()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String _numberToName(int,boolean)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:boolean _checkNextIsIntInArray(java.lang.String)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.lang.String nextTextValue()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipIncomplete()",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:void _skipChunked(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeTag(int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int _decodeExplicitLength(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:int getIntValue()": {
        "isVulRoot": false,
        "vulCaller": [
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:com.fasterxml.jackson.core.JsonToken _handleTaggedArray(int,int)",
            "com.fasterxml.jackson.dataformat.cbor.CBORParser:int nextIntValue(int)"
        ]
    },
    "com.fasterxml.jackson.dataformat.cbor.CBORParser:java.math.BigDecimal getDecimalValue()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
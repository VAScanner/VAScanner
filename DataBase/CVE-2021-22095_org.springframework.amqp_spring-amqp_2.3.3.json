{
    "org.springframework.amqp.core.Message:java.lang.String getBodyContentAsString()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.springframework.amqp.core.Message:java.lang.String toString()"
        ]
    },
    "org.springframework.amqp.core.Message:java.lang.String toString()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.SimpleAmqpHeaderMapper:java.lang.String extractContentTypeAsString(java.util.Map)",
            "org.springframework.amqp.support.converter.AbstractJavaTypeMapper:java.lang.String retrieveHeaderAsString(org.springframework.amqp.core.MessageProperties,java.lang.String)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.DefaultClassMapper:java.lang.Class toClass(org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.core.Message:java.lang.String getBodyContentAsString()"
        ]
    },
    "org.springframework.amqp.support.SimpleAmqpHeaderMapper:java.lang.String extractContentTypeAsString(java.util.Map)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.SimpleAmqpHeaderMapper:void fromHeaders(org.springframework.messaging.MessageHeaders,org.springframework.amqp.core.MessageProperties)"
        ]
    },
    "org.springframework.amqp.support.converter.AbstractJavaTypeMapper:java.lang.String retrieveHeaderAsString(org.springframework.amqp.core.MessageProperties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:com.fasterxml.jackson.databind.JavaType toJavaType(org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.AbstractJavaTypeMapper:java.lang.String retrieveHeader(org.springframework.amqp.core.MessageProperties,java.lang.String)"
        ]
    },
    "org.springframework.amqp.support.converter.MessagingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.MessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.reflect.Type)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void send(java.lang.Object,org.springframework.amqp.core.Address,org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.DefaultClassMapper:java.lang.Class toClass(org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object convertContent(org.springframework.amqp.core.Message,java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.String)"
        ]
    },
    "org.springframework.amqp.support.SimpleAmqpHeaderMapper:void fromHeaders(org.springframework.messaging.MessageHeaders,org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.SimpleAmqpHeaderMapper:void fromHeaders(org.springframework.messaging.MessageHeaders,java.lang.Object)"
        ]
    },
    "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:com.fasterxml.jackson.databind.JavaType toJavaType(org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:java.lang.Class toClass(org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object convertContent(org.springframework.amqp.core.Message,java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.String)"
        ]
    },
    "org.springframework.amqp.support.converter.AbstractJavaTypeMapper:java.lang.String retrieveHeader(org.springframework.amqp.core.MessageProperties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:com.fasterxml.jackson.databind.JavaType fromTypeHeader(org.springframework.amqp.core.MessageProperties,java.lang.String)"
        ]
    },
    "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.MessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.reflect.Type)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void send(java.lang.Object,org.springframework.amqp.core.Address,org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)",
            "org.springframework.amqp.support.converter.MessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.reflect.Type)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void send(java.lang.Object,org.springframework.amqp.core.Address,org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.MessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.reflect.Type)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void send(java.lang.Object,org.springframework.amqp.core.Address,org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void onMessage(org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object convertContent(org.springframework.amqp.core.Message,java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object doFromMessage(org.springframework.amqp.core.Message,java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.String)"
        ]
    },
    "org.springframework.amqp.support.SimpleAmqpHeaderMapper:void fromHeaders(org.springframework.messaging.MessageHeaders,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.MessagingMessageConverter:org.springframework.amqp.core.Message toMessage(java.lang.Object,org.springframework.amqp.core.MessageProperties)"
        ]
    },
    "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:java.lang.Class toClass(org.springframework.amqp.core.MessageProperties)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object convertContent(org.springframework.amqp.core.Message,java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.String)"
        ]
    },
    "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:com.fasterxml.jackson.databind.JavaType fromTypeHeader(org.springframework.amqp.core.MessageProperties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.DefaultJackson2JavaTypeMapper:com.fasterxml.jackson.databind.JavaType toJavaType(org.springframework.amqp.core.MessageProperties)"
        ]
    },
    "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void onMessage(org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object doFromMessage(org.springframework.amqp.core.Message,java.lang.Object,org.springframework.amqp.core.MessageProperties,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message,java.lang.Object)"
        ]
    },
    "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.AbstractJackson2MessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object extractPayload(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void onMessage(org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object extractPayload(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void onMessage(org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object extractPayload(org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object extractPayload(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void onMessage(org.springframework.amqp.core.Message)"
        ]
    },
    "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.springframework.amqp.support.converter.RemoteInvocationAwareMessageConverterAdapter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.MessagingMessageConverter:java.lang.Object extractPayload(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.support.converter.ContentTypeDelegatingMessageConverter:java.lang.Object fromMessage(org.springframework.amqp.core.Message)",
            "org.springframework.amqp.remoting.service.AmqpInvokerServiceExporter:void onMessage(org.springframework.amqp.core.Message)"
        ]
    }
}
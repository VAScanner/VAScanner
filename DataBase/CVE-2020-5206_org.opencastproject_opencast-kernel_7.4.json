{
    "org.opencastproject.kernel.security.SecurityServiceSpringImpl:org.opencastproject.security.api.User getUser()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.opencastproject.kernel.security.AuthenticationSuccessHandler:void onAuthenticationSuccess(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.Authentication)",
            "org.opencastproject.kernel.security.RemoteUserAndOrganizationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.opencastproject.kernel.security.TrustedHttpClientImpl:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,int,int)"
        ]
    },
    "org.opencastproject.kernel.security.AuthenticationSuccessHandler:void onAuthenticationSuccess(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.springframework.security.core.Authentication)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.opencastproject.kernel.security.RemoteUserAndOrganizationFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.security.SecurityFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.opencastproject.kernel.security.TrustedHttpClientImpl:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.security.TrustedHttpClientImpl:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)",
            "org.opencastproject.kernel.security.TrustedHttpClientImpl:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,int,int)"
        ]
    },
    "org.opencastproject.kernel.security.SecurityFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.security.SecurityFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.opencastproject.kernel.security.TrustedHttpClientImpl:org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.pingback.PingBackService:java.lang.String getRuntimeInfo(java.lang.String)"
        ]
    },
    "org.opencastproject.kernel.security.TrustedHttpClientImpl:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler,int,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.security.TrustedHttpClientImpl:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)"
        ]
    },
    "org.opencastproject.kernel.pingback.PingBackService:java.lang.String getRuntimeInfo(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.pingback.PingBackService:java.lang.String access$000(org.opencastproject.kernel.pingback.PingBackService,java.lang.String)"
        ]
    },
    "org.opencastproject.kernel.security.TrustedHttpClientImpl:java.lang.Object execute(org.apache.http.client.methods.HttpUriRequest,org.apache.http.client.ResponseHandler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.opencastproject.kernel.pingback.PingBackService:java.lang.String access$000(org.opencastproject.kernel.pingback.PingBackService,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.opencastproject.kernel.pingback.PingBackService$1:void run()"
        ]
    },
    "org.opencastproject.kernel.pingback.PingBackService$1:void run()": {
        "isVulRoot": false,
        "vulCaller": []
    }
}
{
    "org.apache.catalina.core.StandardWrapper:void processServletSecurityAnnotation(java.lang.Class)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()",
            "org.apache.catalina.core.StandardWrapper:void servletSecurityAnnotationScan()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:void load()"
        ]
    },
    "org.apache.catalina.core.ApplicationServletRegistration:java.util.Set addMapping(java.lang.String[])": {
        "isVulRoot": true,
        "vulCaller": []
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": true,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void servletSecurityAnnotationScan()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:java.lang.String[] getServletMethods()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean loadOnStartup(org.apache.catalina.Container[])"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void applicationAnnotationsConfig()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void configureStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:boolean isSingleThreadModel()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean loadOnStartup(org.apache.catalina.Container[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void applicationAnnotationsConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationContextFacade:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void processRequest(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doInclude(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doDispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$200(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.core.StandardContextValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardEngineValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.ValveBase:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.valves.RemoteAddrValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.RemoteHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.core.ContainerBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardContextValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardEngineValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.AccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ErrorReportValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.JDBCAccessLogValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RemoteIpValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void process(java.lang.String,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.RequestFilterValve:void denyRequest(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SSLValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.SemaphoreValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.StuckThreadDetectionValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void doForward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$100(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$1:void run()"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$200(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void start()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void startInternal()",
            "org.apache.catalina.core.ContainerBase$StartChild:java.lang.Void call()",
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void reload()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void startRecursive()",
            "org.apache.catalina.core.StandardPipeline:void startInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void addService(org.apache.catalina.Service)",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.core.StandardService:void addExecutor(org.apache.catalina.Executor)",
            "org.apache.catalina.core.StandardService:void startInternal()",
            "org.apache.catalina.manager.ManagerServlet:void start(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void start(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.realm.CombinedRealm:void startInternal()",
            "org.apache.catalina.session.ManagerBase:void startInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.startup.Catalina:void start()",
            "org.apache.catalina.startup.Embedded:void addEngine(org.apache.catalina.Engine)",
            "org.apache.catalina.startup.Embedded:void startInternal()",
            "org.apache.catalina.startup.HostConfig:void reload(org.apache.catalina.startup.HostConfig$DeployedApplication,java.io.File,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void fireLifecycleEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.deploy.NamingResources:void startInternal()",
            "org.apache.catalina.deploy.NamingResources:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()",
            "org.apache.catalina.util.LifecycleBase:void setStateInternal(org.apache.catalina.LifecycleState,java.lang.Object,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher:void access$000(org.apache.catalina.core.ApplicationDispatcher,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:boolean custom(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.deploy.ErrorPage)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionsListPage(org.apache.catalina.util.ContextName,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.ssi.SSIServletExternalResolver:java.lang.String getFileText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIMediator:java.lang.String getFileText(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.Connector:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.ContainerBase$StartChild:java.lang.Void call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$StartChild:java.lang.Object call()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardManager(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeManager(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createDataSourceRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJDBCRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJNDIRealm(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createMemoryRealm(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createUserDatabaseRealm(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeRealm(java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addChildInternal(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void access$000(org.apache.catalina.core.ContainerBase,org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardEngine:void startInternal()",
            "org.apache.catalina.core.StandardHost:void startInternal()",
            "org.apache.catalina.core.StandardWrapper:void startInternal()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:org.apache.catalina.deploy.NamingResources getNamingResources()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void reload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.WebappLoader:void backgroundProcess()",
            "org.apache.catalina.manager.ManagerServlet:void reload(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.startup.HostConfig:void reload(org.apache.catalina.startup.HostConfig$DeployedApplication,java.io.File,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void startRecursive()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardPipeline:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void <init>()",
            "org.apache.catalina.core.StandardEngine:void <init>()",
            "org.apache.catalina.core.StandardHost:void <init>()",
            "org.apache.catalina.core.StandardWrapper:void <init>()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void addValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardHost:void startInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAccessLoggerValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteAddrValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteHostValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createSingleSignOn(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createValve(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()",
            "org.apache.catalina.startup.Tomcat$FixContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.core.StandardServer:void addService(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.StandardService:void addConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:void addConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()"
        ]
    },
    "org.apache.catalina.core.StandardService:void addExecutor(org.apache.catalina.Executor)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ServiceMBean:void addExecutor(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardService:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void start(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String start(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void start(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String start(java.lang.String,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.LockOutRealm:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.session.StandardManager:void startInternal()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void addEngine(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void reload(org.apache.catalina.startup.HostConfig$DeployedApplication,java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void start()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)",
            "org.apache.catalina.core.StandardWrapper:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.deploy.NamingResources:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void stopInternal()",
            "org.apache.catalina.core.ContainerBase$StopChild:java.lang.Void call()",
            "org.apache.catalina.core.ContainerBase:void setLoader(org.apache.catalina.Loader)",
            "org.apache.catalina.core.ContainerBase:void setManager(org.apache.catalina.Manager)",
            "org.apache.catalina.core.ContainerBase:void setCluster(org.apache.catalina.Cluster)",
            "org.apache.catalina.core.ContainerBase:void setRealm(org.apache.catalina.Realm)",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void reload()",
            "org.apache.catalina.core.StandardContext:boolean resourcesStop()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void setBasic(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void removeService(org.apache.catalina.Service)",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.core.StandardService:void setContainer(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)",
            "org.apache.catalina.core.StandardService:void removeExecutor(org.apache.catalina.Executor)",
            "org.apache.catalina.core.StandardService:void stopInternal()",
            "org.apache.catalina.manager.ManagerServlet:void stop(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.ManagerServlet:void undeploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.host.HostManagerServlet:void stop(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.session.ManagerBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])",
            "org.apache.catalina.startup.Catalina:void stop()",
            "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.startup.Tomcat:void stop()",
            "org.apache.catalina.util.LifecycleBase:void start()",
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setStateInternal(org.apache.catalina.LifecycleState,java.lang.Object,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()",
            "org.apache.catalina.util.LifecycleBase:void start()",
            "org.apache.catalina.util.LifecycleBase:void stop()",
            "org.apache.catalina.util.LifecycleBase:void destroy()",
            "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)",
            "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState,java.lang.Object)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:void forwardToErrorPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void status(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)"
        ]
    },
    "org.apache.catalina.core.StandardHostValve:void throwable(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable,boolean)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.ssi.SSIMediator:java.lang.String getFileText(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedInclude:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void include(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedDispatch:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void dispatch(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$StartChild:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createWebappLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeLoader(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeManager(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.core.StandardEngine:void initInternal()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createDataSourceRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJDBCRealm(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createJNDIRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createMemoryRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createUserDatabaseRealm(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeRealm(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardEngine:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void access$000(org.apache.catalina.core.ContainerBase,org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardContext:org.apache.catalina.deploy.NamingResources getNamingResources()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.SetNextNamingRule:void end(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource,java.lang.String,java.lang.Class)"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void reload(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String reload(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Context createContext(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Engine createEngine()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Embedded:org.apache.catalina.Host createHost(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()",
            "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:void <init>(javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void addValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContainerMBean:java.lang.String addValve(java.lang.String)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAccessLoggerValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteAddrValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createRemoteHostValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createSingleSignOn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createValve(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat$FixContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardServiceEngine(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Server getServer()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()",
            "org.apache.catalina.startup.Tomcat:void stop()",
            "org.apache.catalina.startup.Tomcat:void destroy()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Engine getEngine()",
            "org.apache.catalina.startup.Tomcat:void enableNaming()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)"
        ]
    },
    "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void addConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createConnector(java.lang.String,java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.mbeans.ServiceMBean:void addConnector(java.lang.String,int,boolean,boolean)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.connector.Connector getConnector()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.startup.Tomcat:void start()"
        ]
    },
    "org.apache.catalina.mbeans.ServiceMBean:void addExecutor(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String start(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String start(java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.realm.LockOutRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check()",
            "org.apache.catalina.startup.HostConfig:void check(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void run()",
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void processChildren(org.apache.catalina.Container,java.lang.ClassLoader)"
        ]
    },
    "org.apache.catalina.connector.Connector:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.ContainerBase$StopChild:java.lang.Void call()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$StopChild:java.lang.Object call()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.ContainerMBean:void removeChild(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)",
            "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)",
            "org.apache.catalina.startup.HostConfig:void undeploy(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.HostConfig:void unmanageApp(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean resourcesStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardPipeline:void destroyInternal()",
            "org.apache.catalina.mbeans.ContainerMBean:void removeValve(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeValve(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardServer:void removeService(org.apache.catalina.Service)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:void removeService(java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardService:void removeConnector(org.apache.catalina.connector.Connector)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void destroyInternal()",
            "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)",
            "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)"
        ]
    },
    "org.apache.catalina.core.StandardService:void removeExecutor(org.apache.catalina.Executor)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardService:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void stop(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String stop(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void undeploy(java.io.PrintWriter,org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String undeploy(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void stop(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String stop(java.lang.String,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void stopInternal()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stopServer(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void stopServer()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()",
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.startup.Embedded:void removeEngine(org.apache.catalina.Engine)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.util.LifecycleBase:void destroy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void destroyInternal()",
            "org.apache.catalina.core.ContainerBase:void removeChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void destroyInternal()",
            "org.apache.catalina.core.StandardPipeline:void removeValve(org.apache.catalina.Valve)",
            "org.apache.catalina.core.StandardServer:void destroyInternal()",
            "org.apache.catalina.core.StandardService:void destroyInternal()",
            "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)",
            "org.apache.catalina.realm.CombinedRealm:void destroyInternal()",
            "org.apache.catalina.startup.Catalina:void start()",
            "org.apache.catalina.startup.Catalina:void stop()",
            "org.apache.catalina.startup.Tomcat:void destroy()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void init()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void initInternal()",
            "org.apache.catalina.core.StandardContext:void setNamingResources(org.apache.catalina.deploy.NamingResources)",
            "org.apache.catalina.core.StandardContext:void initInternal()",
            "org.apache.catalina.core.StandardServer:void initInternal()",
            "org.apache.catalina.core.StandardService:void initInternal()",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Catalina:void load()",
            "org.apache.catalina.startup.Tomcat:void init()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Connector:void startInternal()",
            "org.apache.catalina.connector.Connector:void stopInternal()",
            "org.apache.catalina.connector.MapperListener:void startInternal()",
            "org.apache.catalina.connector.MapperListener:void stopInternal()",
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.ContainerBase:void stopInternal()",
            "org.apache.catalina.core.StandardContext:void startInternal()",
            "org.apache.catalina.core.StandardContext:void stopInternal()",
            "org.apache.catalina.core.StandardPipeline:void startInternal()",
            "org.apache.catalina.core.StandardPipeline:void stopInternal()",
            "org.apache.catalina.core.StandardServer:void startInternal()",
            "org.apache.catalina.core.StandardServer:void stopInternal()",
            "org.apache.catalina.core.StandardService:void startInternal()",
            "org.apache.catalina.core.StandardService:void stopInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void startInternal()",
            "org.apache.catalina.core.StandardThreadExecutor:void stopInternal()",
            "org.apache.catalina.deploy.NamingResources:void startInternal()",
            "org.apache.catalina.deploy.NamingResources:void stopInternal()",
            "org.apache.catalina.loader.WebappLoader:void startInternal()",
            "org.apache.catalina.loader.WebappLoader:void stopInternal()",
            "org.apache.catalina.realm.RealmBase:void startInternal()",
            "org.apache.catalina.realm.RealmBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void startInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void startInternal()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.session.StoreBase:void startInternal()",
            "org.apache.catalina.session.StoreBase:void stopInternal()",
            "org.apache.catalina.startup.Embedded:void startInternal()",
            "org.apache.catalina.startup.Embedded:void stopInternal()",
            "org.apache.catalina.util.SessionIdGeneratorBase:void startInternal()",
            "org.apache.catalina.util.SessionIdGeneratorBase:void stopInternal()",
            "org.apache.catalina.valves.AccessLogValve:void startInternal()",
            "org.apache.catalina.valves.AccessLogValve:void stopInternal()",
            "org.apache.catalina.valves.CometConnectionManagerValve:void startInternal()",
            "org.apache.catalina.valves.CometConnectionManagerValve:void stopInternal()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void startInternal()",
            "org.apache.catalina.valves.JDBCAccessLogValve:void stopInternal()",
            "org.apache.catalina.valves.SemaphoreValve:void startInternal()",
            "org.apache.catalina.valves.SemaphoreValve:void stopInternal()",
            "org.apache.catalina.valves.ValveBase:void startInternal()",
            "org.apache.catalina.valves.ValveBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.util.LifecycleBase:void setState(org.apache.catalina.LifecycleState,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationDispatcher$PrivilegedForward:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void forward(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void setErrorState(java.lang.Throwable,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)"
        ]
    },
    "org.apache.catalina.ssi.SSIInclude:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)",
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean checkForCachedAuthentication(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,boolean)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean checkForCachedAuthentication(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SpnegoAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.CoyoteAdapter:void doConnectorAuthenticationAuthorization(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.Request:boolean isUserInRole(java.lang.String)",
            "org.apache.catalina.core.ContainerBase:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.core.StandardEngine:org.apache.catalina.Realm getRealm()",
            "org.apache.catalina.startup.ContextConfig:void authenticatorConfig()"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:java.lang.String getLoggerName(org.apache.catalina.Host,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context createContext(org.apache.catalina.Host,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)",
            "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFileFromDirectory(java.io.File,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFileFromJar(java.io.File,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Host getHost()"
        ]
    },
    "org.apache.catalina.core.StandardHost:void addChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)",
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)",
            "org.apache.catalina.startup.HostConfig:void deployDescriptor(org.apache.catalina.util.ContextName,java.io.File)",
            "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File)",
            "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File)",
            "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.UserConfig:void deploy(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.NamingContextListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void webConfig()"
        ]
    },
    "org.apache.catalina.startup.SetNextNamingRule:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource,java.lang.String,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadFieldsAnnotation(org.apache.catalina.Context,java.lang.Class)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadMethodsAnnotation(org.apache.catalina.Context,java.lang.Class)",
            "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String reload(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Context createContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void add(java.io.PrintWriter,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean,boolean,boolean,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardHost(java.lang.String,java.lang.String,java.lang.String,boolean,boolean,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:org.apache.catalina.Host createHost(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardContext:org.apache.catalina.Wrapper createWrapper()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationContext:javax.servlet.ServletRegistration$Dynamic addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.deploy.WebXml:void configureContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat$ExistingStandardWrapper:void <init>(javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:java.lang.String addValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void init()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void destroy()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Service getService()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:void enableNaming()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createAjpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createHttpsConnector(java.lang.String,java.lang.String,int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void check()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void check(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase$ContainerBackgroundProcessor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$StopChild:java.lang.Object call()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ContainerBase:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void destroyInternal()",
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void removeChild(org.apache.catalina.Container)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void destroyInternal()",
            "org.apache.catalina.core.StandardContext:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardContext:void resetContext()",
            "org.apache.catalina.mbeans.ContainerMBean:void removeChild(java.lang.String)",
            "org.apache.catalina.startup.ContextConfig:void configureStop()",
            "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)",
            "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)"
        ]
    },
    "org.apache.catalina.manager.host.HostManagerServlet:void remove(java.io.PrintWriter,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String remove(java.lang.String,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:void removeChild(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeContext(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeHost(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void removeContext(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Embedded:void removeHost(org.apache.catalina.Host)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void undeploy(org.apache.catalina.startup.HostConfig$DeployedApplication)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void checkResources(org.apache.catalina.startup.HostConfig$DeployedApplication)",
            "org.apache.catalina.startup.HostConfig:void checkUndeploy()"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void unmanageApp(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.StandardWrapper:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardPipeline:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:void removeValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeValve(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeService(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Connector:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:void removeConnector(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String stop(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String undeploy(org.apache.catalina.util.ContextName,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String stop(java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardManager:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void stopServer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Catalina$CatalinaShutdownHook:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.ContainerBase:void threadStart()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.core.StandardService:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.realm.CombinedRealm:void destroyInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void destroy()"
        ]
    },
    "org.apache.catalina.connector.Connector:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardContext:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardServer:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.core.StandardService:void initInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void init()"
        ]
    },
    "org.apache.catalina.mbeans.ContainerMBean:void addChild(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Catalina:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Catalina:void load(java.lang.String[])",
            "org.apache.catalina.startup.Catalina:void start()"
        ]
    },
    "org.apache.catalina.connector.MapperListener:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.connector.MapperListener:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.core.StandardThreadExecutor:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.loader.WebappLoader:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.CombinedRealm:void startInternal()",
            "org.apache.catalina.realm.DataSourceRealm:void startInternal()",
            "org.apache.catalina.realm.JAASRealm:void startInternal()",
            "org.apache.catalina.realm.JDBCRealm:void startInternal()",
            "org.apache.catalina.realm.JNDIRealm:void startInternal()",
            "org.apache.catalina.realm.MemoryRealm:void startInternal()",
            "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.RealmBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.realm.CombinedRealm:void stopInternal()",
            "org.apache.catalina.realm.JDBCRealm:void stopInternal()",
            "org.apache.catalina.realm.JNDIRealm:void stopInternal()",
            "org.apache.catalina.realm.UserDatabaseRealm:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.JDBCStore:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.JDBCStore:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.util.SessionIdGeneratorBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.util.SessionIdGeneratorBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.CometConnectionManagerValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.JDBCAccessLogValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.SemaphoreValve:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void startInternal()",
            "org.apache.catalina.authenticator.SingleSignOn:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()",
            "org.apache.catalina.valves.RequestFilterValve:void startInternal()"
        ]
    },
    "org.apache.catalina.valves.ValveBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void stopInternal()",
            "org.apache.catalina.authenticator.SingleSignOn:void stopInternal()",
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIExec:long process(org.apache.catalina.ssi.SSIMediator,java.lang.String,java.lang.String[],java.lang.String[],java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)"
        ]
    },
    "org.apache.catalina.ssi.SSIProcessor:long process(java.io.Reader,long,java.io.PrintWriter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:boolean checkForCachedAuthentication(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.NonLoginAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SpnegoAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:java.security.Principal doLogin(org.apache.catalina.connector.Request,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)"
        ]
    },
    "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.SpnegoAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void doConnectorAuthenticationAuthorization(org.apache.coyote.Request,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean isUserInRole(java.lang.String)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:java.lang.String getLoggerName(org.apache.catalina.Host,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:void silence(org.apache.catalina.Host,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFileFromDirectory(java.io.File,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFileFromJar(java.io.File,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context createContext(org.apache.catalina.Host,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFileFromDirectory(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFile(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFileFromJar(java.io.File,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFile(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(org.apache.catalina.Context,java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Wrapper addServlet(java.lang.String,java.lang.String,javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDescriptor(org.apache.catalina.util.ContextName,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig$DeployDescriptor:void run()",
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployWAR(org.apache.catalina.util.ContextName,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig$DeployWar:void run()",
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployDirectory(org.apache.catalina.util.ContextName,java.io.File)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig$DeployDirectory:void run()",
            "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void manageApp(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.UserConfig:void deploy(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig:void access$000(org.apache.catalina.startup.UserConfig,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.core.ContainerBase$PrivilegedAddChild:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void fireOnComplete()",
            "org.apache.catalina.core.ContainerBase:void addChild(org.apache.catalina.Container)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,javax.xml.transform.Source)",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.valves.PersistentValve:void bind(org.apache.catalina.Context)",
            "org.apache.catalina.valves.PersistentValve:void unbind()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void webConfig()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void configureStart()"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadFieldsAnnotation(org.apache.catalina.Context,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadMethodsAnnotation(org.apache.catalina.Context,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void addResource(org.apache.catalina.Context,javax.'annotation'.Resource)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.Class)"
        ]
    },
    "org.apache.catalina.mbeans.MBeanFactory:java.lang.String createStandardContext(java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.core.StandardContext:void resetContext()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.startup.ContextConfig:void configureStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.ContextConfig:void lifecycleEvent(org.apache.catalina.LifecycleEvent)"
        ]
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:java.lang.String remove(java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.startup.HostConfig:void checkUndeploy()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check()"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void threadStart()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void startInternal()",
            "org.apache.catalina.core.StandardContext:void startInternal()"
        ]
    },
    "org.apache.catalina.startup.Catalina:void load(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.loader.VirtualWebappLoader:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.DataSourceRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JAASRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JDBCRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.MemoryRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.UserDatabaseRealm:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.realm.JDBCRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.JNDIRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.realm.UserDatabaseRealm:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.session.JDBCStore:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.DigestAuthenticator:void startInternal()",
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.valves.RequestFilterValve:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void stopInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void stop()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:boolean authenticate(javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.ssi.SSIServlet:void processSSI(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.NonLoginAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isUserInRole(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isUserInRole(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void silence(org.apache.catalina.Host,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addContext(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:java.net.URL getWebappConfigFile(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat:org.apache.catalina.Context addWebapp(org.apache.catalina.Host,java.lang.String,java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat:void initWebappDefaults(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.startup.Tomcat:void initWebappDefaults(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig$DeployDescriptor:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.startup.HostConfig:void deployApps(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.HostConfig:void check(java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.HostConfig$DeployWar:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.startup.HostConfig$DeployDirectory:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.startup.UserConfig:void access$000(org.apache.catalina.startup.UserConfig,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.UserConfig$DeployUserDirectory:void run()"
        ]
    },
    "org.apache.catalina.core.AsyncContextImpl:void fireOnComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()"
        ]
    },
    "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,javax.xml.transform.Source)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSession:void expire(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void doUnload()",
            "org.apache.catalina.session.StandardSession:boolean isValid()",
            "org.apache.catalina.session.StandardSession:void expire()"
        ]
    },
    "org.apache.catalina.valves.PersistentValve:void bind(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.valves.PersistentValve:void unbind()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.startup.WebAnnotationSet:void loadClassAnnotation(org.apache.catalina.Context,java.lang.Class)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationListenerAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationFilterAnnotations(org.apache.catalina.Context)",
            "org.apache.catalina.startup.WebAnnotationSet:void loadApplicationServletAnnotations(org.apache.catalina.Context)"
        ]
    },
    "org.apache.catalina.authenticator.DigestAuthenticator:void startInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleBase:void start()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean authenticate(javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean authenticate(javax.servlet.http.HttpServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:void login(java.lang.String,java.lang.String)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.startup.Tomcat$DefaultWebXmlListener:void lifecycleEvent(org.apache.catalina.LifecycleEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.util.LifecycleSupport:void fireLifecycleEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.startup.UserConfig$DeployUserDirectory:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void doInternalDispatch()",
            "org.apache.catalina.core.StandardThreadExecutor:void execute(java.lang.Runnable)"
        ]
    },
    "org.apache.catalina.session.StandardManager:void doUnload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Void run()",
            "org.apache.catalina.session.StandardManager:void unload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:boolean isValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)",
            "org.apache.catalina.session.ManagerBase:void processExpires()",
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void expire()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void expire(org.apache.catalina.authenticator.SingleSignOnSessionKey)",
            "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.ManagerBase:void expireSession(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()",
            "org.apache.catalina.session.StandardManager:void doLoad()",
            "org.apache.catalina.session.StandardManager:void stopInternal()",
            "org.apache.catalina.session.StandardSession:void invalidate()",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationDispatcher:void invoke(javax.servlet.ServletRequest,javax.servlet.ServletResponse,org.apache.catalina.core.ApplicationDispatcher$State)",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.filters.AddDefaultCharsetFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.CorsFilter:void handleSimpleCORS(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.CorsFilter:void handleNonCORS(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.ExpiresFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.FailedRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.HttpHeaderSecurityFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.SetCharacterEncodingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.ssi.SSIFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void access$000(org.apache.catalina.core.ApplicationFilterChain,javax.servlet.ServletRequest,javax.servlet.ServletResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void login(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void login(java.lang.String,java.lang.String)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void stopInternal()"
        ]
    },
    "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.RequestFacade:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isRequestedSessionIdValid()"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal(boolean)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession()"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.JDBCStore:void save(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()",
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session findSession(java.lang.String)",
            "org.apache.catalina.session.PersistentManagerBase:void load()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void unload()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxActiveSwaps()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleSwaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxIdleBackups()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void expire(org.apache.catalina.authenticator.SingleSignOnSessionKey)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void deregister(java.lang.String)"
        ]
    },
    "org.apache.catalina.manager.ManagerServlet:void sessions(java.io.PrintWriter,org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String sessions(org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void expireSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardManager:void doLoad()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Void run()",
            "org.apache.catalina.session.StandardManager:void load()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void invalidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StandardSessionFacade:void invalidate()"
        ]
    },
    "org.apache.catalina.session.StoreBase:void processExpires()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()"
        ]
    },
    "org.apache.catalina.filters.AddDefaultCharsetFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.CorsFilter:void handleSimpleCORS(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CorsFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.CorsFilter:void handleNonCORS(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CorsFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.ExpiresFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.FailedRequestFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.HttpHeaderSecurityFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.RemoteIpFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RequestDumperFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void process(java.lang.String,javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)"
        ]
    },
    "org.apache.catalina.filters.SetCharacterEncodingFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.WebdavFixFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoUnload:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void unload()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void parseSessionCookiesId(org.apache.coyote.Request,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isRequestedSessionIdValid()"
        ]
    },
    "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$8:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isRequestedSessionIdValid()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:boolean isRequestedSessionIdValid()"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession()"
        ]
    },
    "org.apache.catalina.connector.Request:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)",
            "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:javax.servlet.http.HttpSession run()",
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardHostValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void lifecycleEvent(org.apache.catalina.LifecycleEvent)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.CometConnectionManagerValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.valves.CrawlerSessionManagerValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Request:org.apache.catalina.Session getSessionInternal(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean checkForCachedAuthentication(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean matchRequest(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.NonLoginAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)",
            "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void backgroundProcess()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ContainerBase:void backgroundProcess()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session findSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void expire(org.apache.catalina.authenticator.SingleSignOnSessionKey)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:boolean isRequestedSessionIdValid()",
            "org.apache.catalina.session.StoreBase:void processExpires()",
            "org.apache.catalina.valves.PersistentValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void load()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.PersistentManagerBase:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void stopInternal()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processMaxActiveSwaps()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase:void processPersistenceChecks()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void processExpires()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void deregister(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.SingleSignOn:void sessionDestroyed(java.lang.String,org.apache.catalina.Session)",
            "org.apache.catalina.authenticator.SingleSignOn:void removeSession(java.lang.String,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:java.lang.String sessions(org.apache.catalina.util.ContextName,int,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.session.StandardManager:void load()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void startInternal()"
        ]
    },
    "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.session.StandardSessionFacade:void invalidate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:int invalidateSessions(org.apache.catalina.util.ContextName,java.lang.String[],org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.session.StandardSessionFacade:void invalidate()"
        ]
    },
    "org.apache.catalina.filters.CorsFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteAddrFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.filters.RemoteHostFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$1:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AccessLogAdapter:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)",
            "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession()"
        ]
    },
    "org.apache.catalina.connector.Request:void setUserPrincipal(java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)",
            "org.apache.catalina.connector.CoyoteAdapter:void doConnectorAuthenticationAuthorization(org.apache.coyote.Request,org.apache.catalina.connector.Request)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:javax.servlet.http.HttpSession run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()",
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.valves.ExtendedAccessLogValve$SessionAttributeElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.CsrfPreventionFilter:void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)",
            "org.apache.catalina.security.SecurityUtil:void execute(java.lang.reflect.Method,java.lang.Object,java.lang.Object[],java.security.Principal)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectUrl(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectUrl(java.lang.String)"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeUrl(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeURL(java.lang.String)",
            "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeUrl(java.lang.String)",
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean checkForCachedAuthentication(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void login(java.lang.String,java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.AuthenticatorBase:void logout(org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.BasicAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.DigestAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SSLAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SpnegoAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.authenticator.FormAuthenticator:boolean matchRequest(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.Response:boolean isEncodeable(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Response:java.lang.String encodeRedirectURL(java.lang.String)",
            "org.apache.catalina.connector.Response:java.lang.String encodeURL(java.lang.String)"
        ]
    },
    "org.apache.catalina.valves.AccessLogValve$SessionIdElement:void addElement(java.lang.StringBuilder,java.util.Date,org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.valves.AccessLogValve:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)"
        ]
    },
    "org.apache.catalina.session.PersistentManagerBase$PrivilegedStoreSave:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void writeSession(org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void sessionDestroyed(java.lang.String,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOnListener:void sessionEvent(org.apache.catalina.SessionEvent)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:void removeSession(java.lang.String,org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.SingleSignOn:void sessionDestroyed(java.lang.String,org.apache.catalina.Session)"
        ]
    },
    "org.apache.catalina.session.StandardManager$PrivilegedDoLoad:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardManager:void load()"
        ]
    },
    "org.apache.catalina.core.AccessLogAdapter:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.AccessLogAdapter:void log(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)",
            "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:boolean event(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean asyncDispatch(org.apache.coyote.Request,org.apache.coyote.Response,org.apache.tomcat.util.net.SocketStatus)",
            "org.apache.catalina.connector.CoyoteAdapter:void service(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void errorDispatch(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.core.StandardEngine:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)",
            "org.apache.catalina.connector.CoyoteAdapter:boolean postParseRequest(org.apache.coyote.Request,org.apache.catalina.connector.Request,org.apache.coyote.Response,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.ContainerBase:void logAccess(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,long,boolean)"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOn:boolean reauthenticate(java.lang.String,org.apache.catalina.Realm,org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)"
        ]
    },
    "org.apache.catalina.connector.RequestFacade$GetSessionPrivilegedAction:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession(boolean)",
            "org.apache.catalina.core.AsyncContextImpl$RunnableWrapper:void run()",
            "org.apache.catalina.core.AsyncContextImpl:void fireOnComplete()",
            "org.apache.catalina.core.StandardHostValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.servlets.DefaultServlet:java.io.InputStream renderXml(java.lang.String,org.apache.naming.resources.CacheEntry,javax.xml.transform.Source)",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.valves.PersistentValve:void bind(org.apache.catalina.Context)",
            "org.apache.catalina.valves.PersistentValve:void unbind()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:javax.servlet.http.HttpSession getSession()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:javax.servlet.http.HttpSession getSession()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[],java.security.Principal)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[])"
        ]
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeRedirectUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.FormAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeRedirectUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.Response:java.lang.String encodeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeURL(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.HTMLManagerServlet:void displaySessionDetailPage(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,org.apache.catalina.util.ContextName,java.lang.String,org.apache.tomcat.util.res.StringManager)",
            "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)"
        ]
    },
    "org.apache.catalina.connector.ResponseFacade:java.lang.String encodeUrl(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.HTMLManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.StatusManagerServlet:void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.manager.host.HTMLHostManagerServlet:void list(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String,org.apache.tomcat.util.res.StringManager)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.authenticator.AuthenticatorBase:void logout(org.apache.catalina.connector.Request)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:void logout()"
        ]
    },
    "org.apache.catalina.authenticator.SingleSignOnListener:void sessionEvent(org.apache.catalina.SessionEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void fireSessionEvent(java.lang.String,java.lang.Object)"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void errorDispatch(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.connector.CoyoteAdapter:void log(org.apache.coyote.Request,org.apache.coyote.Response,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.CoyoteAdapter:void errorDispatch(org.apache.coyote.Request,org.apache.coyote.Response)",
            "org.apache.catalina.connector.CoyoteAdapter:void checkRecycled(org.apache.coyote.Request,org.apache.coyote.Response)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.core.ApplicationFilterChain:void access$100(org.apache.catalina.core.ApplicationFilterChain,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void unload()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Servlet,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter,java.lang.Class[],java.lang.Object[])": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter)"
        ]
    },
    "org.apache.catalina.connector.Request:void logout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:java.security.Principal getUserPrincipal()",
            "org.apache.catalina.connector.RequestFacade:void logout()",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void logout()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void fireSessionEvent(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.StandardSession:void tellNew()",
            "org.apache.catalina.session.StandardSession:void expire(boolean)",
            "org.apache.catalina.session.StandardSession:void passivate()",
            "org.apache.catalina.session.StandardSession:void activate()"
        ]
    },
    "org.apache.catalina.connector.CoyoteAdapter:void checkRecycled(org.apache.coyote.Request,org.apache.coyote.Response)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.filters.FailedRequestFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain:void access$100(org.apache.catalina.core.ApplicationFilterChain,org.apache.catalina.comet.CometEvent)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Void run()"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void unload()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:void stopInternal()",
            "org.apache.catalina.core.StandardWrapperValve:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.core.StandardWrapperValve:void event(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response,org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardWrapper:void initServlet(javax.servlet.Servlet)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet allocate()",
            "org.apache.catalina.core.StandardWrapper:void load()",
            "org.apache.catalina.core.StandardWrapper:javax.servlet.Servlet loadServlet()"
        ]
    },
    "org.apache.catalina.security.SecurityUtil:void doAsPrivilege(java.lang.String,javax.servlet.Filter)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterConfig:void release()"
        ]
    },
    "org.apache.catalina.connector.Request:java.security.Principal getUserPrincipal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean checkForCachedAuthentication(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,boolean)",
            "org.apache.catalina.authenticator.AuthenticatorBase:boolean reauthenticateFromSSO(java.lang.String,org.apache.catalina.connector.Request)",
            "org.apache.catalina.authenticator.NonLoginAuthenticator:boolean authenticate(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)",
            "org.apache.catalina.authenticator.SingleSignOn:void invoke(org.apache.catalina.connector.Request,org.apache.catalina.connector.Response)",
            "org.apache.catalina.connector.Request:void login(java.lang.String,java.lang.String)",
            "org.apache.catalina.connector.RequestFacade:java.security.Principal getUserPrincipal()",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:java.security.Principal getUserPrincipal()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:void logout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void logout()"
        ]
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void logout()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:void logout()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void tellNew()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StandardSession:void setId(java.lang.String,boolean)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void passivate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:void swapOut(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardManager:void doUnload()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void activate()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.PersistentManagerBase:org.apache.catalina.Session swapIn(java.lang.String)",
            "org.apache.catalina.session.StandardManager:void doLoad()"
        ]
    },
    "org.apache.catalina.filters.FailedRequestFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.filters.RequestFilter:void processCometEvent(java.lang.String,org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)",
            "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Object run()"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterConfig:void release()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:boolean filterStop()"
        ]
    },
    "org.apache.catalina.connector.RequestFacade:java.security.Principal getUserPrincipal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:java.security.Principal getUserPrincipal()"
        ]
    },
    "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "org.apache.catalina.websocket.WsHttpServletRequestWrapper:java.security.Principal getUserPrincipal()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)",
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)",
            "org.apache.catalina.servlets.CGIServlet:void printServletEnvironment(javax.servlet.ServletOutputStream,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.servlets.WebdavServlet:void doLock(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)",
            "org.apache.catalina.websocket.WsHttpServletRequestWrapper:java.security.Principal getUserPrincipal()"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setId(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:void changeSessionId(org.apache.catalina.Session)",
            "org.apache.catalina.session.StandardSession:void setId(java.lang.String)"
        ]
    },
    "org.apache.catalina.filters.RemoteAddrFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.filters.RemoteHostFilter:void doFilterEvent(org.apache.catalina.comet.CometEvent,org.apache.catalina.comet.CometFilterChain)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void internalDoFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.ApplicationFilterChain$2:java.lang.Object run()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.ApplicationFilterChain:void doFilterEvent(org.apache.catalina.comet.CometEvent)"
        ]
    },
    "org.apache.catalina.core.StandardContext:boolean filterStop()": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.core.StandardContext:void stopInternal()"
        ]
    },
    "org.apache.catalina.session.ManagerBase:void changeSessionId(org.apache.catalina.Session)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.authenticator.AuthenticatorBase:void register(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,java.security.Principal,java.lang.String,java.lang.String,java.lang.String)",
            "org.apache.catalina.authenticator.FormAuthenticator:void forwardToLoginPage(org.apache.catalina.connector.Request,javax.servlet.http.HttpServletResponse,org.apache.catalina.deploy.LoginConfig)"
        ]
    },
    "org.apache.catalina.session.StandardSession:void setId(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)"
        ]
    },
    "org.apache.catalina.session.ManagerBase:org.apache.catalina.Session createSession(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "org.apache.catalina.connector.Request:org.apache.catalina.Session doGetSession(boolean)",
            "org.apache.catalina.core.ApplicationHttpRequest:javax.servlet.http.HttpSession getSession(boolean)"
        ]
    }
}
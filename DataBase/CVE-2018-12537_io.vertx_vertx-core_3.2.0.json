{
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.MultiMap headers()": {
        "isVulRoot": true,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest doRequest(io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.String,io.vertx.core.MultiMap)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.Iterable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.CharSequence)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.Iterable)"
        ]
    },
    "io.vertx.core.http.HttpHeaders:java.lang.CharSequence createOptimized(java.lang.String)": {
        "isVulRoot": true,
        "vulCaller": [
            "io.vertx.core.http.HttpHeaders:void <clinit>()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest doRequest(io.vertx.core.http.HttpMethod,java.lang.String,int,java.lang.String,io.vertx.core.MultiMap)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.String,java.lang.Iterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void end(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(java.lang.Object)",
            "io.vertx.core.http.HttpClientRequest:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.CharSequence)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest putHeader(java.lang.CharSequence,java.lang.Iterable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.HttpHeaders:void <clinit>()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:boolean contentLengthSet()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpClientResponseImpl:java.util.List cookies()",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.http.impl.ServerConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.HttpServerImpl:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker createHandshaker(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest)",
            "io.vertx.core.http.impl.HttpServerImpl:void sendError(java.lang.CharSequence,io.netty.handler.codec.http.HttpResponseStatus,io.netty.channel.Channel)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.ServerConnection,io.netty.handler.codec.http.HttpRequest)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:boolean contentLengthSet()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:boolean contentTypeSet()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.HttpHeaders:void <clinit>()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void end(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void end(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.HttpClientRequest:void end(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:boolean contentLengthSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void write(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void prepareHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void writeHead()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void writeHeadWithContent(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:java.util.List cookies()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:java.util.List cookies()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.http.impl.ServerConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker createHandshaker(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void handshake(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.http.impl.ServerConnection:io.vertx.core.http.ServerWebSocket upgrade(io.vertx.core.http.HttpServerRequest,io.netty.handler.codec.http.HttpRequest)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void sendError(java.lang.CharSequence,io.netty.handler.codec.http.HttpResponseStatus,io.netty.channel.Channel)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker createHandshaker(io.netty.channel.Channel,io.netty.handler.codec.http.HttpRequest)",
            "io.vertx.core.http.impl.HttpServerImpl:void access$900(io.vertx.core.http.impl.HttpServerImpl,java.lang.CharSequence,io.netty.handler.codec.http.HttpResponseStatus,io.netty.channel.Channel)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.ServerConnection,io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.String)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.Object)",
            "io.vertx.core.http.HttpServerResponse:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl sendFile(java.lang.String,long,long)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:boolean contentLengthSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:boolean contentTypeSet()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(io.netty.buffer.ByteBuf)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest requestAbs(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void write(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void end()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void writeHead()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl sendHead()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void connected(io.vertx.core.http.impl.ClientConnection)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void writeHeadWithContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void connected(io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void write(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$1:java.util.List cookies()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:java.util.List cookies()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.VertxHttpHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.VertxHttpHandler:void lambda$channelRead$18(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void handshake(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.http.impl.ServerConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:io.vertx.core.http.ServerWebSocket upgrade(io.vertx.core.http.HttpServerRequest,io.netty.handler.codec.http.HttpRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.ServerWebSocket upgrade()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void access$900(io.vertx.core.http.impl.HttpServerImpl,java.lang.CharSequence,io.netty.handler.codec.http.HttpResponseStatus,io.netty.channel.Channel)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.http.impl.ServerConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleMessage(java.lang.Object)",
            "io.vertx.core.http.impl.ServerConnection:void access$700(io.vertx.core.http.impl.ServerConnection,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void end(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.HttpServerResponse:void end(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl sendFile(java.lang.String,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.HttpServerResponse:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest getAbs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest postAbs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest headAbs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest optionsAbs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest putAbs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest deleteAbs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest request(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String,java.lang.String)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl sendHead()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest sendHead()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void connected(io.vertx.core.http.impl.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connect$82(io.vertx.core.http.impl.ClientConnection)"
        ]
    },
    "io.vertx.core.http.impl.VertxHttpHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.VertxHttpHandler:void lambda$channelRead$18(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.VertxHttpHandler$lambda_channelRead_18__185:void run()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.ServerWebSocket upgrade()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerConnection:void handleMessage(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.http.impl.ServerConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$createConnAndHandle$25(io.vertx.core.http.impl.ServerConnection,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void access$700(io.vertx.core.http.impl.ServerConnection,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection$3:void handle()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.HttpServerResponse:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long)"
        ]
    },
    "io.vertx.core.http.HttpServerResponse:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse write(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.impl.HttpServerResponseImpl write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse write(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:void sendNotImplementedAndClose()",
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest get(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest post(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest head(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest options(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest put(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClientRequest delete(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl write(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(java.lang.String,java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.HttpClientRequest:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)",
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.streams.WriteStream:void end(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest sendHead()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connect$82(io.vertx.core.http.impl.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_connect_82__168:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$1:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.ServerConnection$1:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.VertxHttpHandler$lambda_channelRead_18__185:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$createConnAndHandle$25(io.vertx.core.http.impl.ServerConnection,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler$lambda_createConnAndHandle_25__202:void run()"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection$3:void handle()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.VoidHandler:void handle(java.lang.Void)"
        ]
    },
    "io.vertx.core.http.HttpServerResponse:io.vertx.core.http.HttpServerResponse sendFile(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.HttpServerResponse:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)",
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse write(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:void sendNotImplementedAndClose()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.HttpVersion version()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.HttpMethod method()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient getNow(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient headNow(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient optionsNow(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest write(java.lang.String,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.HttpClientRequest:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl$lambda_new_207__261:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_connect_82__168:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$1:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerConnection$1:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl$lambda_wrapTask_16__24:void run()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler$lambda_createConnAndHandle_25__202:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.VoidHandler:void handle(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.VoidHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.HttpServerResponse:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.HttpVersion version()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.HttpMethod method()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.streams.impl.PumpImpl$lambda_new_207__261:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void lambda$operationComplete$166(io.netty.channel.ChannelFuture)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramServerHandler:void lambda$channelRead$237(io.vertx.core.datagram.impl.DatagramSocketImpl,java.lang.Object)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl$lambda_notifyException_12__54:void run()"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl$lambda_listen_11__53:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$lambda_reverseLookup_350__60:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$lambda_reverseLookup_349__59:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_removeSub_134__68:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_close_128__63:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_null_127__70:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_start_126__62:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_null_125__71:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream$lambda_handler_196__118:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendReply(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.FilteringInterceptor:void handle(io.vertx.core.eventbus.SendContext)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.FilteringInterceptor:void handle(io.vertx.core.eventbus.SendContext)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void createAndStartEventBus(io.vertx.core.VertxOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$lambda_callCompletionHandlerAsync_122__75:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$lambda_convertHandler_121__74:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$lambda_close_120__72:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void deliverMessageLocally(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$new$143(io.vertx.core.spi.metrics.EventBusMetrics,java.lang.String,java.lang.Long)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$deliverToHandler$123(io.vertx.core.eventbus.impl.HandlerHolder,io.vertx.core.eventbus.Message,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$checkNextTick$150(java.lang.Void)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_null_148__99:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_setResult_147__96:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_callCompletionHandlerAsync_146__95:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_doUnregister_145__94:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_completionHandler_144__93:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl$lambda_doReceiveCredit_354__101:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$1$lambda_failed_223__144:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$1$lambda_completed_222__143:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$2$lambda_failed_225__152:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$2$lambda_done_224__151:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.file.AsyncFile drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doRead$220(io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doRead$220(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doRead$220(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$lambda_doClose_226__149:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_219__146:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_218__145:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler$lambda_handshakeComplete_63__174:void run()"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler$lambda_handleException_62__173:void run()"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_createNewConnection_67__184:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_responseEnded_66__183:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_requestEnded_65__182:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_getConnection_64__181:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl)",
            "io.vertx.core.http.impl.HttpClientImpl:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl$lambda_handler_75__176:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connected$72(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$lambda_connectionFailed_74__159:void run()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$lambda_new_68__154:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleInterestedOpsChanged()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleClosed()",
            "io.vertx.core.http.impl.ClientConnection:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void timeout(long)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleResponse(io.netty.handler.codec.http.HttpResponse)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_connectHandler_81__166:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_exceptionHandler_78__164:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientResponseImpl:void lambda$bodyHandler$84(io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler,io.vertx.core.Handler,java.lang.Void)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleResponseChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void lambda$doResume$85(io.vertx.core.buffer.Buffer,java.lang.Void)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleResponseEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void lambda$doResume$86(io.netty.handler.codec.http.LastHttpContent,java.lang.Void)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleClosed()",
            "io.vertx.core.http.impl.ClientConnection:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.http.HttpServerFileUpload resume()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void receiveData(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void handleComplete()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$handleComplete$165(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$handleComplete$165(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$streamToFileSystem$164(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$lambda_executeCloseDone_24__194:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$lambda_null_21__195:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$lambda_listen_20__192:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleChunk(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleEnd()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.ServerConnection:void handleException(java.lang.Throwable)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl$lambda_bodyHandler_52__189:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleInterestedOpsChanged()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleException(java.lang.Throwable)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleClosed()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_null_56__201:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_doSendFile_55__199:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_doSendFile_54__198:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$handshake$27(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleWsFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.ServerConnection:void handleWsFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void writable()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleInterestedOpsChanged()",
            "io.vertx.core.http.impl.ServerConnection:void handleInterestedOpsChanged()"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleException(java.lang.Throwable)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void handleClosed()",
            "io.vertx.core.http.impl.WebSocketImpl:void handleClosed()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand$stopBackgroundApplication__210:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand$startAsBackgroundApplication__209:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer$lambda_createHandler_348__222:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer$lambda_undeploy_347__221:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void initializeRedeployment()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void shutdownRedeployment()",
            "io.vertx.core.impl.launcher.commands.Watcher:void run()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:void trigger()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.Watcher:void run()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$trigger$201(java.lang.Void)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.Watcher$lambda_null_200__214:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$null$162(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl$lambda_executeBlocking_15__23:void run()"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl$lambda_runCloseHooks_13__22:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_reportResult_157__106:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_undeployAll_155__103:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_undeployAll_154__104:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FileResolver:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.FileResolver:void lambda$setupCacheDir$236()"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void checkCallHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FutureImpl:void setHandler(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void complete(java.lang.Object)",
            "io.vertx.core.impl.FutureImpl:void fail(java.lang.Throwable)"
        ]
    },
    "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager$lambda_doDeployVerticle_137__80:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$1$1$lambda_operationComplete_276__249:void run()"
        ]
    },
    "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.BareCommand$1:void run()",
            "io.vertx.core.impl.VertxImpl:void close()",
            "io.vertx.core.Starter$1:void run()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_closeClusterManager_270__228:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_null_268__236:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_createAndStartEventBus_267__227:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.ServerConnection:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.VertxHandler:void lambda$exceptionCaught$17(io.netty.channel.Channel,io.vertx.core.net.impl.ConnectionBase,java.lang.Throwable)"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handleClosed()",
            "io.vertx.core.http.impl.ClientConnection:void handleClosed()",
            "io.vertx.core.http.impl.ServerConnection:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.ConnectionBase$lambda_null_8__58:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl:void lambda$failed$113(io.vertx.core.Handler,java.lang.Throwable)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl$lambda_connected_112__113:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl$lambda_new_107__111:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler$lambda_connected_37__248:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$lambda_executeCloseDone_35__242:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$lambda_null_32__243:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$lambda_listen_31__240:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler$handleClosed__50:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$resume$40(java.lang.Void)",
            "io.vertx.core.net.impl.VertxNetHandler:void lambda$channelRead$28(io.vertx.core.net.impl.NetSocketImpl,io.netty.buffer.ByteBuf)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl:void handleInterestedOpsChanged()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$drainHandler$41(java.lang.Void)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl$lambda_null_45__131:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl$lambda_sendFile_44__129:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl$lambda_null_42__132:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.parsetools.impl.RecordParserImpl:void handleParsing()"
        ]
    },
    "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.parsetools.impl.RecordParserImpl:void handleParsing()"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_compareAndSet_173__256:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_getAndAdd_172__255:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_addAndGet_171__254:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_decrementAndGet_170__253:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_getAndIncrement_169__252:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_incrementAndGet_168__251:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_get_167__250:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter$lambda_timedOut_213__259:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock$lambda_lockAcquired_211__257:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.SharedDataImpl$lambda_getLocalCounter_210__245:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.SharedDataImpl$lambda_getClusterWideMap_209__244:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter$lambda_createLoggingHandler_216__28:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.ContextImpl$lambda_wrapTask_16__24:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.VoidHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void lambda$operationComplete$166(io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener$lambda_operationComplete_166__21:void run()"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramServerHandler:void lambda$channelRead$237(io.vertx.core.datagram.impl.DatagramSocketImpl,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramServerHandler$lambda_channelRead_237__47:void run()"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl$lambda_notifyException_12__54:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl$lambda_listen_11__53:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$lambda_reverseLookup_350__60:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$lambda_reverseLookup_349__59:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,boolean,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_removeSub_134__68:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_close_128__63:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_null_127__70:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_start_126__62:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_null_125__71:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.BodyReadStream$lambda_handler_196__118:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void sendReply(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageImpl:void sendReply(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus publish(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)"
        ]
    },
    "io.vertx.core.eventbus.FilteringInterceptor:void handle(io.vertx.core.eventbus.SendContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.FilteringInterceptor:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void createAndStartEventBus(io.vertx.core.VertxOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void <init>(io.vertx.core.VertxOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$new$266(io.vertx.core.VertxOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$lambda_callCompletionHandlerAsync_122__75:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$lambda_convertHandler_121__74:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$lambda_close_120__72:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void deliverMessageLocally(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendToSubs(io.vertx.core.spi.cluster.ChoosableIterable,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void clusteredSendReply(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$sendOrPub$129(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,java.lang.String,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$new$143(io.vertx.core.spi.metrics.EventBusMetrics,java.lang.String,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_new_143__92:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$deliverToHandler$123(io.vertx.core.eventbus.impl.HandlerHolder,io.vertx.core.eventbus.Message,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$lambda_deliverToHandler_123__76:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$checkNextTick$150(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_checkNextTick_150__98:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_null_148__99:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_setResult_147__96:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_callCompletionHandlerAsync_146__95:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_doUnregister_145__94:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_completionHandler_144__93:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl$lambda_doReceiveCredit_354__101:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1$lambda_failed_223__144:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1$lambda_completed_222__143:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2$lambda_failed_225__152:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2$lambda_done_224__151:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.file.AsyncFile drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.file.AsyncFile:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doRead$220(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$lambda_doRead_220__147:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$lambda_doClose_226__149:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_219__146:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_218__145:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler$lambda_handshakeComplete_63__174:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler$lambda_handleException_62__173:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_createNewConnection_67__184:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_responseEnded_66__183:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_requestEnded_65__182:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue$lambda_getConnection_64__181:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:io.vertx.core.http.WebSocketStream handler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void connect()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl$lambda_handler_75__176:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void lambda$connected$72(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$lambda_connected_72__157:void run()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$lambda_connectionFailed_74__159:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$lambda_new_68__154:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleInterestedOpsChanged()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$drainHandler$77(java.lang.Void)",
            "io.vertx.core.net.impl.VertxHandler$handleInterestedOpsChanged__48:void run()"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler$handleClosed__50:void run()"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void toWebSocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,int,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.VertxHandler:void lambda$exceptionCaught$17(io.netty.channel.Channel,io.vertx.core.net.impl.ConnectionBase,java.lang.Throwable)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void timeout(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleTimeout(long)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleResponse(io.netty.handler.codec.http.HttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.http.impl.ClientConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_connectHandler_81__166:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_exceptionHandler_78__164:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void lambda$bodyHandler$84(io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler,io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientResponseImpl$lambda_bodyHandler_84__170:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleResponseChunk(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.http.impl.ClientConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void lambda$doResume$85(io.vertx.core.buffer.Buffer,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientResponseImpl$lambda_doResume_85__172:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleResponseEnd(io.netty.handler.codec.http.LastHttpContent)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.http.impl.ClientConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void lambda$doResume$86(io.netty.handler.codec.http.LastHttpContent,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientResponseImpl$lambda_doResume_86__171:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.http.HttpServerFileUpload resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$streamToFileSystem$164(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.HttpServerFileUpload:io.vertx.core.streams.ReadStream resume()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void receiveData(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl$NettyFileUpload:void setContent(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$NettyFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void handleComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.http.HttpServerFileUpload resume()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void complete()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$handleComplete$165(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl$lambda_handleComplete_165__187:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$streamToFileSystem$164(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl$lambda_streamToFileSystem_164__186:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$2:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$lambda_executeCloseDone_24__194:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$lambda_null_21__195:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$lambda_listen_20__192:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleChunk(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleEnd()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleException(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$null$26(io.netty.channel.Channel,io.vertx.core.http.impl.ServerConnection,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.handler.codec.http.FullHttpRequest)",
            "io.vertx.core.http.impl.ServerConnection:io.vertx.core.http.ServerWebSocket upgrade(io.vertx.core.http.HttpServerRequest,io.netty.handler.codec.http.HttpRequest)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.VertxHandler:void lambda$exceptionCaught$17(io.netty.channel.Channel,io.vertx.core.net.impl.ConnectionBase,java.lang.Throwable)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl$lambda_bodyHandler_52__189:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleInterestedOpsChanged()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$drainHandler$53(java.lang.Void)",
            "io.vertx.core.net.impl.VertxHandler$handleInterestedOpsChanged__48:void run()"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler$handleClosed__50:void run()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_null_56__201:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_doSendFile_55__199:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_doSendFile_54__198:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$handshake$27(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler$lambda_handshake_27__203:void run()"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void handleWsFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.http.impl.ClientConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void handleWsFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImpl:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleClosed()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand$stopBackgroundApplication__210:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand$startAsBackgroundApplication__209:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer$lambda_createHandler_348__222:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer$lambda_undeploy_347__221:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void initializeRedeployment()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void run()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void shutdownRedeployment()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand$1:void run()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher:void lambda$trigger$201(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.Watcher$lambda_trigger_201__213:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher$lambda_null_200__214:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$null$162(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_null_162__121:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.ContextImpl$lambda_executeBlocking_15__23:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.ContextImpl$lambda_runCloseHooks_13__22:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_reportResult_157__106:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_undeployAll_155__103:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_undeployAll_154__104:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.FileResolver:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void deleteCacheDirAndShutdown(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.FileResolver:void lambda$setupCacheDir$236()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FileResolver$lambda_setupCacheDir_236__223:void run()"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void setHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl:void lookup(java.lang.String,io.vertx.core.Handler,int[])",
            "io.vertx.core.impl.ContextImpl:void lambda$null$14(io.vertx.core.Future,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$doUndeploy$163(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void lambda$doDeploy$159(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,java.lang.Void)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void complete(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$setResult$351(java.lang.Object,io.vertx.core.Future)",
            "io.vertx.core.file.impl.AsyncFileImpl:void doClose(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void lambda$null$151(io.vertx.core.spi.VerticleFactory,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future)",
            "io.vertx.core.impl.FutureImpl:void <init>(java.lang.Throwable)",
            "io.vertx.core.impl.FutureImpl:void <init>(java.lang.Object)",
            "io.vertx.core.impl.FutureImpl:void complete()",
            "io.vertx.core.spi.VerticleFactory:void resolve(java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void fail(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$RetryChannelFutureListener:void operationComplete(io.netty.channel.ChannelFuture)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$setResult$351(java.lang.Object,io.vertx.core.Future)",
            "io.vertx.core.file.impl.AsyncFileImpl:void doClose(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$doUndeploy$163(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void lambda$null$151(io.vertx.core.spi.VerticleFactory,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future)",
            "io.vertx.core.impl.FutureImpl:void <init>(java.lang.Throwable)",
            "io.vertx.core.impl.FutureImpl:void fail(java.lang.String)"
        ]
    },
    "io.vertx.core.impl.HAManager$lambda_doDeployVerticle_137__80:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$1$1$lambda_operationComplete_276__249:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.BareCommand$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.VertxImpl$1$1:void operationComplete(io.netty.util.concurrent.Future)",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Launcher:void handleDeployFailed(io.vertx.core.Vertx,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.Throwable)",
            "io.vertx.core.Starter:void handleDeployFailed()"
        ]
    },
    "io.vertx.core.Starter$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.VertxImpl$1$1:void operationComplete(io.netty.util.concurrent.Future)",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl$lambda_closeClusterManager_270__228:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_null_268__236:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_createAndStartEventBus_267__227:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler:void lambda$exceptionCaught$17(io.netty.channel.Channel,io.vertx.core.net.impl.ConnectionBase,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler$lambda_exceptionCaught_17__49:void run()"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void handleClosed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler$handleClosed__50:void run()"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase$lambda_null_8__58:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void lambda$failed$113(io.vertx.core.Handler,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl$lambda_failed_113__114:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl$lambda_connected_112__113:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl$lambda_new_107__111:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$2:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$ServerHandler$lambda_connected_37__248:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$lambda_executeCloseDone_35__242:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$lambda_null_32__243:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl$lambda_listen_31__240:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler$handleClosed__50:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$resume$40(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl$lambda_resume_40__126:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.VertxNetHandler:void lambda$channelRead$28(io.vertx.core.net.impl.NetSocketImpl,io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxNetHandler$lambda_channelRead_28__141:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void handleInterestedOpsChanged()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler$handleInterestedOpsChanged__48:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$drainHandler$41(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl$lambda_drainHandler_41__127:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl$lambda_null_45__131:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl$lambda_sendFile_44__129:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl$lambda_null_42__132:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.parsetools.impl.RecordParserImpl:void handleParsing()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_compareAndSet_173__256:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_getAndAdd_172__255:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_addAndGet_171__254:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_decrementAndGet_170__253:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_getAndIncrement_169__252:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_incrementAndGet_168__251:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter$lambda_get_167__250:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter$lambda_timedOut_213__259:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$lambda_lockAcquired_211__257:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl$lambda_getLocalCounter_210__245:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl$lambda_getClusterWideMap_209__244:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.Starter$lambda_createLoggingHandler_216__28:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:void close()",
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeFrame(io.vertx.core.http.WebSocketFrame)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connectNow()"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void operationComplete(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramServerHandler:void channelRead(io.vertx.core.datagram.impl.DatagramSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void notifyException(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.dns.impl.DnsClientImpl:void setResult(io.vertx.core.Future,java.lang.Object)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handleException(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handshakeComplete(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse)",
            "io.vertx.core.http.impl.HttpClientImpl:void connected(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void connectionFailed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void createConnAndHandle(io.netty.channel.Channel,java.lang.Object,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker)",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void handshake(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.http.impl.VertxHttpHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$addFuture$9(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void connected(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void failed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connect$111(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,int,int,java.lang.String,io.netty.channel.ChannelFuture)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void connected(io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$upgradeToSsl$46(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.VertxHandler:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.VertxHandler:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
            "io.vertx.core.net.impl.VertxHandler:void channelInactive(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.VertxHandler:void channelReadComplete(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.VertxHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.net.impl.VertxNetHandler:void channelRead(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runOnContext(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.HAManager:void deployHADeployments()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void checkHADeployments()"
        ]
    },
    "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runOnContext(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)"
        ]
    },
    "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor$lambda_new_261__225:void run()"
        ]
    },
    "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void runOnContext(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void operationComplete(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramServerHandler:void channelRead(io.vertx.core.datagram.impl.DatagramSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void notifyException(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.dns.impl.DnsClientImpl:void setResult(io.vertx.core.Future,java.lang.Object)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handleException(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handshakeComplete(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse)",
            "io.vertx.core.http.impl.HttpClientImpl:void connected(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void connectionFailed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void createConnAndHandle(io.netty.channel.Channel,java.lang.Object,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker)",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void handshake(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.http.impl.VertxHttpHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$addFuture$9(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void connected(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void failed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connect$111(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,int,int,java.lang.String,io.netty.channel.ChannelFuture)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void connected(io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$upgradeToSsl$46(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.VertxHandler:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.VertxHandler:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
            "io.vertx.core.net.impl.VertxHandler:void channelInactive(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.VertxHandler:void channelReadComplete(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.VertxHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.net.impl.VertxNetHandler:void channelRead(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void runListeners()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$29(io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramChannelFutureListener$lambda_operationComplete_166__21:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramServerHandler$lambda_channelRead_237__47:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageConsumer consumer(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageConsumer localConsumer(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.impl.HandlerRegistration createReplyHandlerRegistration(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.MessageConsumer:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.WebSocketImplBase:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.impl.ConnectionBase,boolean,int)",
            "io.vertx.core.net.impl.NetSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.net.impl.SSLHelper,boolean,io.vertx.core.spi.metrics.TCPMetrics,java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageImpl:void sendReply(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageImpl:void fail(int,java.lang.String)",
            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void doSend(java.lang.Object,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus publish(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus publish(java.lang.String,java.lang.Object)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer write(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.FilteringInterceptor:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void <init>(io.vertx.core.VertxOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxFactoryImpl:void clusteredVertx(io.vertx.core.VertxOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void <init>(io.vertx.core.VertxOptions)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$new$266(io.vertx.core.VertxOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_new_266__226:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendToSubs(io.vertx.core.spi.cluster.ChoosableIterable,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$sendOrPub$129(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,java.lang.String,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void clusteredSendReply(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendReply(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,io.vertx.core.eventbus.impl.MessageImpl)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$sendOrPub$129(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,java.lang.String,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_sendOrPub_129__64:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendReply(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,io.vertx.core.eventbus.impl.MessageImpl)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_new_143__92:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$lambda_deliverToHandler_123__76:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_checkNextTick_150__98:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.AsyncFile:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.AsyncFileImpl$lambda_doRead_220__147:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:io.vertx.core.http.WebSocketStream handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.WebSocketStream:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void connect()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.impl.HttpClientRequestImpl sendHead()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void write(io.netty.buffer.ByteBuf,boolean)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connect$82(io.vertx.core.http.impl.ClientConnection)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$lambda_connected_72__157:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$drainHandler$77(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_drainHandler_77__163:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler$handleInterestedOpsChanged__48:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void toWebSocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,int,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$76(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void handleTimeout(long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$setTimeout$79(long,java.lang.Long)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.http.impl.ClientConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl$lambda_bodyHandler_84__170:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl$lambda_doResume_85__172:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl$lambda_doResume_86__171:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.http.HttpServerFileUpload:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl$NettyFileUpload:void setContent(io.netty.buffer.ByteBuf)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl$NettyFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:void complete()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl$NettyFileUpload:void setContent(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$NettyFileUpload:void addContent(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl$lambda_handleComplete_165__187:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl$lambda_streamToFileSystem_164__186:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$null$26(io.netty.channel.Channel,io.vertx.core.http.impl.ServerConnection,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.handler.codec.http.FullHttpRequest)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler$lambda_null_26__204:void run()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$drainHandler$53(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_drainHandler_53__196:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler$lambda_handshake_27__203:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.VertxCommandLauncher:void execute(java.lang.String,java.lang.String[])"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand$1:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.VertxImpl$1$1:void operationComplete(io.netty.util.concurrent.Future)",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.launcher.commands.Watcher$lambda_trigger_201__213:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_null_162__121:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void deleteCacheDirAndShutdown(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void lambda$null$272(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$271(java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.FileResolver$lambda_setupCacheDir_236__223:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:void lookup(java.lang.String,io.vertx.core.Handler,int[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient lookup4(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient lookup6(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient lookup(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveA(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveCNAME(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveMX(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveTXT(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolvePTR(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveAAAA(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveNS(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveSRV(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void lambda$null$14(io.vertx.core.Future,io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl$lambda_null_14__25:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$doUndeploy$163(io.vertx.core.impl.DeploymentManager$VerticleHolder,io.vertx.core.impl.ContextImpl,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_doUndeploy_163__119:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void lambda$doDeployVerticle$153(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$null$152(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,java.util.Iterator,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$doDeploy$159(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_doDeploy_159__107:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:void lambda$setResult$351(java.lang.Object,io.vertx.core.Future)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$lambda_setResult_351__61:void run()"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void doClose(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void closeInternal(io.vertx.core.Handler)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$closeInternal$227(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$null$151(io.vertx.core.spi.VerticleFactory,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_null_151__109:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void <init>(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture(java.lang.Throwable)",
            "io.vertx.core.impl.FutureImpl:void <init>(java.lang.String,boolean)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void <init>(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture()",
            "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void complete()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.AbstractVerticle:void start(io.vertx.core.Future)",
            "io.vertx.core.AbstractVerticle:void stop(io.vertx.core.Future)"
        ]
    },
    "io.vertx.core.spi.VerticleFactory:void resolve(java.lang.String,io.vertx.core.DeploymentOptions,java.lang.ClassLoader,io.vertx.core.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl$RetryChannelFutureListener:void operationComplete(io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$RetryChannelFutureListener:void operationComplete(io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void fail(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl$1$1:void operationComplete(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.Launcher:void handleDeployFailed(io.vertx.core.Vertx,java.lang.String,io.vertx.core.DeploymentOptions,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void handleDeployFailed(java.lang.Throwable)"
        ]
    },
    "io.vertx.core.Starter:void handleDeployFailed()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter:void lambda$runVerticle$215(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler$lambda_exceptionCaught_17__49:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl$lambda_failed_113__114:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl$lambda_resume_40__126:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.VertxNetHandler$lambda_channelRead_28__141:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl$lambda_drainHandler_41__127:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)",
            "io.vertx.core.parsetools.RecordParser:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:void end()"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeFrame(io.vertx.core.http.WebSocketFrame)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeFinalTextFrame(java.lang.String)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame)",
            "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:void connectNow()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$handshake$27(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void operationComplete(io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void operationComplete(io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramServerHandler:void channelRead(io.vertx.core.datagram.impl.DatagramSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramServerHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void notifyException(io.vertx.core.Handler,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket listenMulticastGroup(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket listenMulticastGroup(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket unlistenMulticastGroup(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket unlistenMulticastGroup(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket blockMulticastGroup(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket blockMulticastGroup(java.lang.String,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:void setResult(io.vertx.core.Future,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl:void access$000(io.vertx.core.dns.impl.DnsClientImpl,io.vertx.core.Future,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handleException(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void channelInactive(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handshakeComplete(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void connected(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$internalConnect$71(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.ChannelFuture)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$null$70(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void connectionFailed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable,io.vertx.core.http.impl.ConnectionLifeCycleListener)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$internalConnect$71(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.ChannelFuture)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$null$70(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void createConnAndHandle(io.netty.channel.Channel,java.lang.Object,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void doMessageReceived(io.vertx.core.http.impl.ServerConnection,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void handshake(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase:void lambda$addFuture$9(io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetClientImpl:void connected(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connect$111(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,int,int,java.lang.String,io.netty.channel.ChannelFuture)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$null$108(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void failed(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,java.lang.Throwable,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connect$111(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,int,int,java.lang.String,io.netty.channel.ChannelFuture)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$null$108(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void lambda$connect$111(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,int,int,java.lang.String,io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void connected(io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void channelActive(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$channelActive$36(io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$upgradeToSsl$46(io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.VertxHandler:void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.VertxHandler:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)",
            "io.vertx.core.http.impl.ServerConnection$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler:void channelInactive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$1:void channelInactive(io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.http.impl.ServerConnection$1:void channelInactive(io.netty.channel.ChannelHandlerContext)"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler:void channelReadComplete(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.VertxNetHandler:void channelRead(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxNetHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void doFlush(io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void run()",
            "io.vertx.core.impl.VertxImpl:void executeBlockingInternal(io.vertx.core.impl.Action,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void runOnContext(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient reverseLookup(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void deliverToHandler(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.HandlerHolder)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$endHandler$149(io.vertx.core.Context,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void completed(java.lang.Integer,java.lang.Object)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void failed(java.lang.Throwable,java.lang.Object)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void done()",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void failed(java.lang.Throwable,java.lang.Object)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void requestEnded(io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void responseEnded(io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.net.NetSocket netSocket()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void doResume()",
            "io.vertx.core.http.impl.HttpServerImpl:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$22(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$57(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void undeployAll(io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void reportResult(io.vertx.core.Context,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void doDeploy(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,io.vertx.core.Verticle[])",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void lambda$new$278(io.vertx.core.impl.ContextImpl)",
            "io.vertx.core.impl.VertxImpl:void runOnContext(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.ConnectionBase:void endReadAndFlush()",
            "io.vertx.core.net.impl.NetServerImpl:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$33(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket resume()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void get(io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void incrementAndGet(io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void getAndIncrement(io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void decrementAndGet(io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void addAndGet(long,io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void getAndAdd(long,io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void compareAndSet(long,long,io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void timedOut()",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lockAcquired(io.vertx.core.Context,io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void getLocalCounter(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.HAManager:void checkHADeployments()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void lambda$new$135(java.lang.Long)"
        ]
    },
    "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor$lambda_new_261__225:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,java.lang.String)",
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int)",
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$29(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageConsumer consumer(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void <init>(io.vertx.core.Vertx,java.lang.String,boolean,io.vertx.core.eventbus.DeliveryOptions)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageConsumer localConsumer(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.impl.HandlerRegistration createReplyHandlerRegistration(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendReply(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)",
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl start()",
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()"
        ]
    },
    "io.vertx.core.eventbus.MessageConsumer:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.impl.ConnectionBase,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.net.impl.ConnectionBase,boolean,java.lang.Runnable,int)",
            "io.vertx.core.http.impl.WebSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.ClientConnection,boolean,int)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.Channel,io.vertx.core.impl.ContextImpl,io.vertx.core.net.impl.SSLHelper,boolean,io.vertx.core.spi.metrics.TCPMetrics,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:io.vertx.core.net.NetSocket createNetSocket()",
            "io.vertx.core.http.impl.ServerConnection:io.vertx.core.net.NetSocket createNetSocket()",
            "io.vertx.core.net.impl.NetClientImpl:void connected(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void connected(io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageImpl:void fail(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)",
            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus send(java.lang.String,java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void doSend(java.lang.Object,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void doReceiveCredit(int)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void doSend(java.lang.Object,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer send(java.lang.Object)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer send(java.lang.Object,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer write(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.EventBus publish(java.lang.String,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)",
            "io.vertx.core.eventbus.MessageProducer:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxFactoryImpl:void clusteredVertx(io.vertx.core.VertxOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Vertx:void clusteredVertx(io.vertx.core.VertxOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void <init>(io.vertx.core.VertxOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxFactoryImpl:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions)",
            "io.vertx.core.impl.VertxImpl:void <init>()"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_new_266__226:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendReply(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,io.vertx.core.eventbus.impl.MessageImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$lambda_sendOrPub_129__64:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void sendReply(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,io.vertx.core.eventbus.impl.MessageImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()"
        ]
    },
    "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.Pump stop()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)",
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl start()",
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$76(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(int,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.WebSocketStream:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_drainHandler_77__163:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$76(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl$lambda_handler_76__175:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$setTimeout$79(long,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_setTimeout_79__165:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl$ClientHandler:void doMessageReceived(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.VertxHttpHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.VertxHttpHandler:void lambda$channelRead$18(io.vertx.core.net.impl.ConnectionBase,io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl$lambda_new_206__260:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl$ServerHandler$lambda_null_26__204:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl$lambda_drainHandler_53__196:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.VertxCommandLauncher:void execute(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.VertxCommandLauncher:void execute(java.lang.String,java.lang.String[])",
            "io.vertx.core.impl.launcher.VertxCommandLauncher:void dispatch(java.lang.Object,java.lang.String[])",
            "io.vertx.core.spi.launcher.ExecutionContext:void execute(java.lang.String,java.lang.String[])",
            "io.vertx.core.Launcher:void executeCommand(java.lang.String,java.lang.String[])"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$null$272(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_null_272__234:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$null$271(java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_null_271__235:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient lookup4(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient lookup6(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient lookup(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveA(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveCNAME(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveMX(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveTXT(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolvePTR(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient reverseLookup(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveAAAA(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveNS(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient resolveSRV(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.ContextImpl$lambda_null_14__25:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_doUndeploy_163__119:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$doDeployVerticle$153(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_doDeployVerticle_153__102:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$null$152(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,java.util.Iterator,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_null_152__110:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_doDeploy_159__107:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$lambda_setResult_351__61:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void closeInternal(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void close()",
            "io.vertx.core.file.impl.AsyncFileImpl:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void lambda$closeInternal$227(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$lambda_closeInternal_227__150:void run()"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_null_151__109:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)"
        ]
    },
    "io.vertx.core.impl.FutureImpl:void <init>(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture(java.lang.String,boolean)"
        ]
    },
    "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Future:io.vertx.core.Future succeededFuture()"
        ]
    },
    "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)"
        ]
    },
    "io.vertx.core.AbstractVerticle:void start(io.vertx.core.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.AbstractVerticle:void stop(io.vertx.core.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl$RetryChannelFutureListener:void operationComplete(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void handleDeployFailed(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void lambda$deploy$198(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.Starter:void lambda$runVerticle$215(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter$lambda_runVerticle_215__27:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.parsetools.impl.RecordParserImpl:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.parsetools.RecordParser:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)",
            "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase write(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.ServerWebSocket:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeFinalTextFrame(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String)",
            "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase:void writePartialMessage(io.vertx.core.buffer.Buffer,int)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writeBinaryFrameInternal(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writeTextFrameInternal(java.lang.String)"
        ]
    },
    "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeFrame(io.vertx.core.http.WebSocketFrame)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void operationComplete(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramServerHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket listenMulticastGroup(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket listenMulticastGroup(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket unlistenMulticastGroup(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket unlistenMulticastGroup(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket blockMulticastGroup(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:io.vertx.core.datagram.DatagramSocket blockMulticastGroup(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.dns.impl.DnsClientImpl:void access$000(io.vertx.core.dns.impl.DnsClientImpl,io.vertx.core.Future,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$5$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,io.vertx.core.dns.impl.netty.DnsResponse)",
            "io.vertx.core.dns.impl.DnsClientImpl$5$1$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void channelInactive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:void lambda$internalConnect$71(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.ChannelFuture)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:void lambda$null$70(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetClientImpl:void lambda$null$108(io.vertx.core.impl.ContextImpl,io.netty.channel.Channel,io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void channelActive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$channelActive$36(io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ClientConnection$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerConnection$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ClientConnection$1:void channelInactive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerConnection$1:void channelInactive(io.netty.channel.ChannelHandlerContext)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.VertxNetHandler:void channelRead(io.vertx.core.net.impl.ConnectionBase,io.vertx.core.impl.ContextImpl,io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.VertxHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void doFlush(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.file.AsyncFile flush()",
            "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.file.AsyncFile flush(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.file.impl.FileSystemImpl$BlockingAction:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem copy(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem copyRecursive(java.lang.String,java.lang.String,boolean,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem move(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem truncate(java.lang.String,long,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem chmod(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem chmodRecursive(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem chown(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem props(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem lprops(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem link(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem symlink(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem unlink(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readSymlink(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem delete(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem deleteRecursive(java.lang.String,boolean,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdir(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdirs(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdir(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdirs(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readDir(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readDir(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readFile(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem writeFile(java.lang.String,io.vertx.core.buffer.Buffer,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem open(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem createFile(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem createFile(java.lang.String,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem exists(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem fsProps(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void executeBlockingInternal(io.vertx.core.impl.Action,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void lambda$checkQuorumWhenAdded$139(long,java.lang.String,java.lang.Long)"
        ]
    },
    "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void executeBlocking(io.vertx.core.Handler,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl:io.vertx.core.dns.DnsClient reverseLookup(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendOrPub(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void sendReply(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl,io.vertx.core.eventbus.impl.MessageImpl)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void deliverToHandler(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.impl.HandlerHolder)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:boolean deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$endHandler$149(io.vertx.core.Context,io.vertx.core.Handler,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_endHandler_149__97:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$1:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2:void done()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$2:void completed(java.lang.Integer,java.lang.Object)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2:void failed(java.lang.Throwable,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void requestEnded(io.vertx.core.http.impl.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void endRequest()"
        ]
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void responseEnded(io.vertx.core.http.impl.ClientConnection)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection:void handleResponseEnd(io.netty.handler.codec.http.LastHttpContent)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.net.NetSocket netSocket()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.http.HttpClientRequest drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.HttpClientRequest:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:void doResume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.http.HttpClientResponse resume()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$actualClose$23(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$22(io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.http.HttpServerResponse drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.HttpServerResponse:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$57(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void undeploy(io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$doUndeploy$160(io.vertx.core.impl.Deployment,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void undeployAll(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void reportResult(io.vertx.core.Context,io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void reportFailure(java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void reportSuccess(java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void doDeploy(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,io.vertx.core.Verticle[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void lambda$doDeployVerticle$153(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$null$152(java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.ClassLoader,java.util.Iterator,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void lambda$new$278(io.vertx.core.impl.ContextImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler$lambda_new_278__246:void run()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void runOnContext(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void callCompletionHandlerAsync(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void completionHandler(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void callCompletionHandlerAsync(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void setResult(io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void checkNextTick()",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void doReceiveCredit(int)",
            "io.vertx.core.file.impl.AsyncFileImpl:void doClose(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.ServerConnection:void checkNextTick()",
            "io.vertx.core.impl.HAManager:void callFailoverCompleteHandler(io.vertx.core.impl.FailoverCompleteHandler,java.lang.String,io.vertx.core.json.JsonObject,boolean)",
            "io.vertx.core.impl.VertxImpl:void closeClusterManager(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$269(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$43(io.netty.channel.ChannelFuture,io.vertx.core.Handler,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase:void endReadAndFlush()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.ClientConnection:void close()",
            "io.vertx.core.http.impl.ClientConnection:io.vertx.core.net.NetSocket createNetSocket()",
            "io.vertx.core.http.impl.ServerConnection:io.vertx.core.net.NetSocket createNetSocket()",
            "io.vertx.core.http.impl.ServerConnection:void close()",
            "io.vertx.core.net.impl.ConnectionBase:void close()",
            "io.vertx.core.net.impl.VertxHandler$endReadAndFlush__51:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void executeCloseDone(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.lang.Exception)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$actualClose$34(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$33(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl$lambda_listen_33__239:void run()"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:void lambda$netSocket$80(io.vertx.core.net.NetSocket,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.net.NetSocket:io.vertx.core.streams.ReadStream resume()"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void get(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void incrementAndGet(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void getAndIncrement(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void decrementAndGet(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void addAndGet(long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void getAndAdd(long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousCounter:void compareAndSet(long,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void timedOut()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$new$212(java.lang.Long)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock:void lockAcquired(io.vertx.core.Context,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock:void doAcquire(io.vertx.core.Context,long,io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void access$000(io.vertx.core.shareddata.impl.AsynchronousLock,io.vertx.core.Context,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void getLocalCounter(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.SharedDataImpl:void getCounter(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.HAManager:void lambda$new$135(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager$lambda_new_135__78:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(int,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen()"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void <init>(io.vertx.core.Vertx,java.lang.String,boolean,io.vertx.core.eventbus.DeliveryOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer sender(java.lang.String)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer sender(java.lang.String,io.vertx.core.eventbus.DeliveryOptions)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer publisher(java.lang.String)",
            "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer publisher(java.lang.String,io.vertx.core.eventbus.DeliveryOptions)"
        ]
    },
    "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream handler(io.vertx.core.Handler)",
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl start()",
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()"
        ]
    },
    "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl start()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.Pump start()"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,java.lang.String,java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.net.impl.ConnectionBase,boolean,java.lang.Runnable,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl$ServerHandler:void lambda$handshake$27(io.netty.handler.codec.http.FullHttpRequest,io.netty.channel.Channel,io.vertx.core.net.impl.HandlerHolder,io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker,io.netty.channel.ChannelHandlerContext)",
            "io.vertx.core.http.impl.ServerConnection:io.vertx.core.http.ServerWebSocket upgrade(io.vertx.core.http.HttpServerRequest,io.netty.handler.codec.http.HttpRequest)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.impl.ClientConnection,boolean,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void handshakeComplete(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.FullHttpResponse)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:io.vertx.core.net.NetSocket createNetSocket()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.net.NetSocket netSocket()"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:io.vertx.core.net.NetSocket createNetSocket()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.net.NetSocket netSocket()"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageImpl:void reply(java.lang.Object,io.vertx.core.eventbus.DeliveryOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void doReceiveCredit(int)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$new$353(io.vertx.core.eventbus.Message)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer send(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.eventbus.MessageProducer send(java.lang.Object,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)",
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.MessageProducer:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.Vertx:void clusteredVertx(io.vertx.core.VertxOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.ClasspathHandler:void create(io.vertx.core.VertxOptions,io.vertx.core.Handler)",
            "io.vertx.core.Starter:io.vertx.core.Vertx startVertx(boolean,boolean,io.vertx.core.impl.Args)"
        ]
    },
    "io.vertx.core.impl.VertxFactoryImpl:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Vertx:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void <init>()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxFactoryImpl:io.vertx.core.Vertx vertx()"
        ]
    },
    "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.Pump stop()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl:io.vertx.core.http.HttpClient websocket(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl$lambda_handler_76__175:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$lambda_setTimeout_79__165:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.streams.impl.PumpImpl$lambda_new_206__260:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.VertxCommandLauncher:void dispatch(java.lang.Object,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.VertxCommandLauncher:void dispatch(java.lang.String[])"
        ]
    },
    "io.vertx.core.spi.launcher.ExecutionContext:void execute(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.StopCommand:void run()"
        ]
    },
    "io.vertx.core.Launcher:void executeCommand(java.lang.String,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl$lambda_null_272__234:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_null_271__235:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void lambda$doDeployVerticle$153(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.HAManager:void doDeployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_doDeployVerticle_153__102:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_null_152__110:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void end()"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void handleComplete()"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$lambda_closeInternal_227__150:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$22(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$57(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void reportFailure(java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$33(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$43(io.netty.channel.ChannelFuture,io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.FutureFactoryImpl:io.vertx.core.Future completedFuture(java.lang.String,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.String)"
        ]
    },
    "io.vertx.core.Future:io.vertx.core.Future succeededFuture()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$57(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$43(io.netty.channel.ChannelFuture,io.vertx.core.Handler,io.netty.util.concurrent.Future)"
        ]
    },
    "io.vertx.core.Future:io.vertx.core.Future succeededFuture(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$22(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.impl.DeploymentManager:void reportSuccess(java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$33(io.vertx.core.Handler)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand:void lambda$deploy$198(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand$lambda_deploy_198__212:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.Starter$lambda_runVerticle_215__27:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.WebSocketBase:io.vertx.core.streams.WriteStream write(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)",
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase write(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.ServerWebSocket:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeFinalTextFrame(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeFinalBinaryFrame(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void writePartialMessage(io.vertx.core.buffer.Buffer,int)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase:void writeMessageInternal(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writePartialMessage(io.vertx.core.buffer.Buffer,int)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void writeBinaryFrameInternal(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase:void lambda$new$59(io.vertx.core.eventbus.Message)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void writeTextFrameInternal(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase:void lambda$new$60(io.vertx.core.eventbus.Message)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$5$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,io.vertx.core.dns.impl.netty.DnsResponse)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.dns.impl.DnsClientImpl$5$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$5$1$1:void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.file.AsyncFile flush()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.AsyncFileImpl:io.vertx.core.file.AsyncFile flush(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem copy(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem copyRecursive(java.lang.String,java.lang.String,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem move(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem truncate(java.lang.String,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem chmod(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem chmodRecursive(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem chown(java.lang.String,java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem props(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem lprops(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem link(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem symlink(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem unlink(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readSymlink(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem delete(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem deleteRecursive(java.lang.String,boolean,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdir(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdirs(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdir(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem mkdirs(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readDir(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readDir(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem readFile(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem writeFile(java.lang.String,io.vertx.core.buffer.Buffer,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem open(java.lang.String,io.vertx.core.file.OpenOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.http.HttpServerFileUpload streamToFileSystem(java.lang.String)"
        ]
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem createFile(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem createFile(java.lang.String,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem exists(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.FileSystemImpl:io.vertx.core.file.FileSystem fsProps(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.HAManager:void lambda$checkQuorumWhenAdded$139(long,java.lang.String,java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager$lambda_checkQuorumWhenAdded_139__81:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void executeBlocking(io.vertx.core.Handler,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void lambda$doDeployVerticle$153(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.spi.VerticleFactory,java.lang.ClassLoader,java.lang.String,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.util.Iterator,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:boolean deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:boolean access$300(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.eventbus.impl.MessageImpl)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void deliverMessageLocally(io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration$lambda_endHandler_149__97:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$1:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2:void completed(java.lang.Integer,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl$2:void completed(java.lang.Object,java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.ClientConnection:void endRequest()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void connected(io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void write(io.netty.buffer.ByteBuf,boolean)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.HttpClientRequest:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.http.HttpClientResponse resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.http.HttpClientResponse resume()",
            "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.http.HttpClientResponse:io.vertx.core.streams.ReadStream resume()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:void close()",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$272(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void lambda$actualClose$23(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.HttpServerResponse:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void undeploy(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void undeployVerticle(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$doUndeploy$160(io.vertx.core.impl.Deployment,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_doUndeploy_160__120:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void reportFailure(java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void doDeployVerticle(java.util.Iterator,java.lang.Throwable,java.lang.String,java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.ContextImpl,java.lang.ClassLoader,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void undeployVerticle(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager:void lambda$doDeploy$159(io.vertx.core.Verticle,io.vertx.core.impl.ContextImpl,io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$null$158(io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.Verticle,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void access$200(io.vertx.core.impl.DeploymentManager,java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void reportSuccess(java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void lambda$null$158(io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.Verticle,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void access$500(io.vertx.core.impl.DeploymentManager,java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$InternalTimerHandler$lambda_new_278__246:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void finalize()",
            "io.vertx.core.impl.VertxImpl:void lambda$close$274(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void callCompletionHandlerAsync(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void completionHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void callCompletionHandlerAsync(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:void doUnregister(io.vertx.core.Handler,boolean)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void setResult(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$setResult__73:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void checkNextTick()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.eventbus.MessageConsumer resume()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen()",
            "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,java.lang.String)",
            "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int)",
            "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void checkNextTick()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerConnection:void resume()",
            "io.vertx.core.http.impl.ServerConnection:void responseComplete()",
            "io.vertx.core.http.impl.ServerConnection:void processMessage(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.HAManager:void callFailoverCompleteHandler(io.vertx.core.impl.FailoverCompleteHandler,java.lang.String,io.vertx.core.json.JsonObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void checkRemoveSubs(java.lang.String,io.vertx.core.json.JsonObject)",
            "io.vertx.core.impl.HAManager:void callFailoverCompleteHandler(java.lang.String,io.vertx.core.json.JsonObject,boolean)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void closeClusterManager(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void lambda$null$273(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$269(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_closeClusterManager_269__229:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)",
            "io.vertx.core.net.NetSocket:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long)",
            "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$43(io.netty.channel.ChannelFuture,io.vertx.core.Handler,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ClientConnection:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void responseEnded(io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void closeAllConnections()",
            "io.vertx.core.http.impl.HttpClientImpl:void close()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connect$82(io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.WebSocketImplBase:void close()"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void close()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$closeConnAfterWrite$58(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.WebSocketImplBase:void close()"
        ]
    },
    "io.vertx.core.net.impl.ConnectionBase:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void finalize()",
            "io.vertx.core.http.impl.ClientConnection:void close()",
            "io.vertx.core.http.impl.ServerConnection:void close()",
            "io.vertx.core.http.impl.WebSocketImplBase:void close()",
            "io.vertx.core.net.impl.NetSocketImpl:void close()"
        ]
    },
    "io.vertx.core.net.impl.VertxHandler$endReadAndFlush__51:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$272(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl:void close()"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void lambda$actualClose$34(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,io.netty.channel.group.ChannelGroupFuture,io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetServerImpl$lambda_listen_33__239:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$1:void lambda$netSocket$80(io.vertx.core.net.NetSocket,java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$1$lambda_netSocket_80__178:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.net.NetSocket:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$new$212(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter$lambda_new_212__258:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock:void doAcquire(io.vertx.core.Context,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock:void acquire(long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock:void access$000(io.vertx.core.shareddata.impl.AsynchronousLock,io.vertx.core.Context,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void acquire(io.vertx.core.shareddata.impl.AsynchronousLock)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void getCounter(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.HAManager$lambda_new_135__78:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:io.vertx.core.net.NetServer listen()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer sender(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer sender(java.lang.String,io.vertx.core.eventbus.DeliveryOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer publisher(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:io.vertx.core.eventbus.MessageProducer publisher(java.lang.String,io.vertx.core.eventbus.DeliveryOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.Pump start()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void lambda$streamToFileSystem$164(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.net.NetSocket netSocket()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.net.NetSocket netSocket()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$new$353(io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl$lambda_new_353__100:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.ClasspathHandler:void create(io.vertx.core.VertxOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.BareCommand:io.vertx.core.Vertx startVertx()"
        ]
    },
    "io.vertx.core.Starter:io.vertx.core.Vertx startVertx(boolean,boolean,io.vertx.core.impl.Args)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter:void runBare(io.vertx.core.impl.Args)",
            "io.vertx.core.Starter:void runVerticle(java.lang.String,io.vertx.core.impl.Args)"
        ]
    },
    "io.vertx.core.Vertx:io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.ClasspathHandler:io.vertx.core.Vertx create(io.vertx.core.VertxOptions)",
            "io.vertx.core.Starter:io.vertx.core.Vertx startVertx(boolean,boolean,io.vertx.core.impl.Args)"
        ]
    },
    "io.vertx.core.impl.VertxFactoryImpl:io.vertx.core.Vertx vertx()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Vertx:io.vertx.core.Vertx vertx()"
        ]
    },
    "io.vertx.core.impl.launcher.VertxCommandLauncher:void dispatch(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Launcher:void main(java.lang.String[])"
        ]
    },
    "io.vertx.core.impl.launcher.commands.StopCommand:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.VertxCommandLauncher:void execute(java.lang.String,java.lang.String[])"
        ]
    },
    "io.vertx.core.impl.HAManager:void doDeployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void processFailover(io.vertx.core.json.JsonObject)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void deploy(java.lang.String,io.vertx.core.Vertx,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions)",
            "io.vertx.core.Starter:void runVerticle(java.lang.String,io.vertx.core.impl.Args)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.Future:io.vertx.core.Future failedFuture(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.RunCommand$lambda_deploy_198__212:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.WebSocketBase:io.vertx.core.streams.WriteStream write(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void writeMessageInternal(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.WebSocketImpl:io.vertx.core.http.WebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void lambda$new$59(io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase$lambda_new_59__179:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void lambda$new$60(io.vertx.core.eventbus.Message)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase$lambda_new_60__180:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.dns.impl.DnsClientImpl$5$1$1:void channelRead0(io.netty.channel.ChannelHandlerContext,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.http.HttpServerFileUpload streamToFileSystem(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.HAManager$lambda_checkQuorumWhenAdded_139__81:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:boolean access$300(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.eventbus.impl.MessageImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.file.impl.AsyncFileImpl$2:void completed(java.lang.Object,java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.http.HttpClientResponse resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.http.HttpClientResponse resume()",
            "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.http.HttpClientResponse:io.vertx.core.streams.ReadStream resume()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientResponseImpl:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.http.HttpClientResponse:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:void finalize()"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void undeployVerticle(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager:void undeployAll(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void undeployHADeployments()",
            "io.vertx.core.impl.VertxImpl:void undeploy(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_doUndeploy_160__120:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void lambda$null$158(io.vertx.core.impl.Deployment,io.vertx.core.impl.DeploymentManager$DeploymentImpl,io.vertx.core.Verticle,java.lang.String,java.util.concurrent.atomic.AtomicInteger,io.vertx.core.Verticle[],io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$lambda_null_158__108:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void access$200(io.vertx.core.impl.DeploymentManager,java.lang.Throwable,io.vertx.core.Context,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void doUndeploy(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$null$161(io.vertx.core.AsyncResult,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$doUndeploy$160(io.vertx.core.impl.Deployment,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager:void access$500(io.vertx.core.impl.DeploymentManager,java.lang.Object,io.vertx.core.Context,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$null$161(io.vertx.core.AsyncResult,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void close(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void finalize()",
            "io.vertx.core.impl.VertxImpl:void lambda$close$274(io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void <init>(io.vertx.core.impl.VertxInternal)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$close$274(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_close_274__230:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void removeRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void removeRegistration(io.vertx.core.eventbus.impl.HandlerHolder,java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void removeRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void doUnregister(io.vertx.core.Handler,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:void unregister(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void unregister(boolean)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl$setResult__73:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.eventbus.MessageConsumer resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.eventbus.MessageConsumer:io.vertx.core.streams.ReadStream resume()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerImpl:io.vertx.core.http.HttpServer listen(int,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerConnection:void resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.HttpServerRequest resume()"
        ]
    },
    "io.vertx.core.http.impl.ServerConnection:void responseComplete()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.HAManager:void checkRemoveSubs(java.lang.String,io.vertx.core.json.JsonObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void nodeLeft(java.lang.String)"
        ]
    },
    "io.vertx.core.impl.HAManager:void callFailoverCompleteHandler(java.lang.String,io.vertx.core.json.JsonObject,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void checkFailover(java.lang.String,io.vertx.core.json.JsonObject)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void lambda$null$273(io.vertx.core.Handler,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl$lambda_null_273__233:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_closeClusterManager_269__229:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.impl.PumpImpl:io.vertx.core.streams.impl.PumpImpl stop()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$207(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.NetSocket:io.vertx.core.streams.WriteStream drainHandler(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.impl.NetSocketImpl:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String)",
            "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String,long)"
        ]
    },
    "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void closeAllConnections()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ConnectionManager:void close()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void finalize()",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:void close()",
            "io.vertx.core.http.impl.WebSocketImpl:void end()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerRequestImpl:void sendNotImplementedAndClose()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$closeConnAfterWrite$58(io.netty.util.concurrent.Future)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.datagram.DatagramSocketOptions)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase:void close()",
            "io.vertx.core.net.impl.NetClientImpl:void close()",
            "io.vertx.core.net.impl.NetServerImpl:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void end()"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:void finalize()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$1$lambda_netSocket_80__178:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter$lambda_new_212__258:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock:void acquire(long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.SharedDataImpl:void getLocalLock(java.lang.String,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void acquire(io.vertx.core.shareddata.impl.AsynchronousLock)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.AsynchronousLock:void release()"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl$lambda_new_353__100:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.BareCommand:io.vertx.core.Vertx startVertx()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.BareCommand:void run()"
        ]
    },
    "io.vertx.core.Starter:void runBare(io.vertx.core.impl.Args)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter:void run(io.vertx.core.impl.Args,java.lang.String[])"
        ]
    },
    "io.vertx.core.Starter:void runVerticle(java.lang.String,io.vertx.core.impl.Args)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter:void run(io.vertx.core.impl.Args,java.lang.String[])"
        ]
    },
    "io.vertx.core.impl.launcher.commands.ClasspathHandler:io.vertx.core.Vertx create(io.vertx.core.VertxOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.BareCommand:io.vertx.core.Vertx startVertx()"
        ]
    },
    "io.vertx.core.Vertx:io.vertx.core.Vertx vertx()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.Launcher:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.HAManager:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void lambda$addToHADeployList$140(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.HAManager:void processFailover(io.vertx.core.json.JsonObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void checkFailover(java.lang.String,io.vertx.core.json.JsonObject)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void deploy(java.lang.String,io.vertx.core.Vertx,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.ServerWebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImpl:io.vertx.core.http.WebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImpl:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.WebSocket:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase$lambda_new_59__179:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase$lambda_new_60__180:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientRequestImpl$1:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpServerOptions)"
        ]
    },
    "io.vertx.core.impl.HAManager:void undeployHADeployments()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void checkHADeployments()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:void undeploy(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void undeploy(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void undeploy(java.lang.String)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$lambda_null_158__108:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl:void lambda$null$161(io.vertx.core.AsyncResult,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.impl.ContextImpl,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_null_161__122:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void <init>(io.vertx.core.impl.VertxInternal)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.VertxOptions,io.vertx.core.spi.cluster.ClusterManager,io.vertx.core.impl.HAManager)",
            "io.vertx.core.impl.VertxImpl:void createAndStartEventBus(io.vertx.core.VertxOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_close_274__230:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void removeRegistration(java.lang.String,io.vertx.core.eventbus.impl.HandlerRegistration,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.HandlerRegistration:void doUnregister(io.vertx.core.Handler,boolean)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void unregister(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void unregister(boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void unregisterAll()",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void unregister()"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.eventbus.MessageConsumer:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.http.HttpServerRequest resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:io.vertx.core.http.HttpServerFileUpload resume()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.http.HttpServerRequest:io.vertx.core.streams.ReadStream resume()"
        ]
    },
    "io.vertx.core.impl.HAManager:void nodeLeft(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void access$100(io.vertx.core.impl.HAManager,java.lang.String)"
        ]
    },
    "io.vertx.core.impl.HAManager:void checkFailover(java.lang.String,io.vertx.core.json.JsonObject)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager:void nodeLeft(java.lang.String)"
        ]
    },
    "io.vertx.core.impl.VertxImpl$lambda_null_273__233:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.net.NetSocket:io.vertx.core.net.NetSocket sendFile(java.lang.String,long)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.ConnectionManager:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void close()"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.HttpClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpClientOptions)"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.datagram.impl.DatagramSocketImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.datagram.DatagramSocketOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.datagram.DatagramSocket createDatagramSocket(io.vertx.core.datagram.DatagramSocketOptions)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void close()",
            "io.vertx.core.net.impl.NetClientImpl:void finalize()",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void actualClose(io.vertx.core.impl.ContextImpl,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.net.impl.NetSocketImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetServerImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetServerOptions)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void getLocalLock(java.lang.String,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.SharedDataImpl:void getLockWithTimeout(java.lang.String,long,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.shareddata.impl.AsynchronousLock:void release()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.launcher.commands.BareCommand:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.launcher.commands.RunCommand:void run()",
            "io.vertx.core.impl.launcher.VertxCommandLauncher:void execute(java.lang.String,java.lang.String[])"
        ]
    },
    "io.vertx.core.Starter:void run(io.vertx.core.impl.Args,java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter:void main(java.lang.String[])",
            "io.vertx.core.Starter:void run(java.lang.String)",
            "io.vertx.core.Starter:void run(java.lang.String[])"
        ]
    },
    "io.vertx.core.impl.HAManager:void lambda$addToHADeployList$140(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager$lambda_addToHADeployList_140__82:void run()"
        ]
    },
    "io.vertx.core.http.impl.ServerWebSocketImpl:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.ServerWebSocket:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.impl.WebSocketImpl:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.http.WebSocket:io.vertx.core.http.WebSocketBase writeBinaryMessage(io.vertx.core.buffer.Buffer)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.http.impl.HttpServerImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpServerOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions)"
        ]
    },
    "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void undeploy(io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:void undeploy(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.DeploymentManager$DeploymentImpl$lambda_null_161__122:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.VertxOptions,io.vertx.core.spi.cluster.ClusterManager,io.vertx.core.impl.HAManager)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:void createAndStartEventBus(io.vertx.core.VertxOptions,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.EventBusImpl:void unregisterAll()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void close(io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.eventbus.impl.HandlerRegistration:void unregister()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$deliverToHandler$123(io.vertx.core.eventbus.impl.HandlerHolder,io.vertx.core.eventbus.Message,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void close()",
            "io.vertx.core.http.impl.WebSocketImplBase:void cleanupHandlers()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()"
        ]
    },
    "io.vertx.core.http.impl.HttpServerRequestImpl:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.BodyReadStream:io.vertx.core.streams.ReadStream resume()",
            "io.vertx.core.streams.impl.PumpImpl:void lambda$new$206(java.lang.Void)"
        ]
    },
    "io.vertx.core.http.HttpServerRequest:io.vertx.core.streams.ReadStream resume()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.HAManager:void access$100(io.vertx.core.impl.HAManager,java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.HAManager$1:void nodeLeft(java.lang.String)"
        ]
    },
    "io.vertx.core.http.impl.HttpClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.http.HttpClientOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.datagram.DatagramSocket createDatagramSocket(io.vertx.core.datagram.DatagramSocketOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.datagram.DatagramSocket createDatagramSocket()"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$connected$118(java.lang.Void)",
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$connected$117(java.lang.Throwable)",
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$null$115(java.lang.Long)",
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$connect$114(io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.net.impl.NetClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions)",
            "io.vertx.core.net.impl.NetClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions,boolean)"
        ]
    },
    "io.vertx.core.net.impl.NetServerImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetServerOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions)"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void getLockWithTimeout(java.lang.String,long,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.shareddata.impl.SharedDataImpl:void getLock(java.lang.String,io.vertx.core.Handler)"
        ]
    },
    "io.vertx.core.Starter:void main(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.Starter:void run(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.Starter:void runCommandLine(java.lang.String)"
        ]
    },
    "io.vertx.core.Starter:void run(java.lang.String[])": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.HAManager$lambda_addToHADeployList_140__82:void run()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ServerWebSocketImpl:void connect()",
            "io.vertx.core.impl.ContextImpl:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.impl.ContextImpl:void executeBlocking(io.vertx.core.impl.Action,io.vertx.core.Handler,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.impl.EventLoopContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.HAManager:void deployHADeployments()",
            "io.vertx.core.impl.MultiThreadedWorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void execute(java.lang.Runnable)",
            "io.vertx.core.impl.OrderedExecutorFactory$OrderedExecutor:void lambda$new$261()",
            "io.vertx.core.impl.WorkerContext:void executeAsync(io.vertx.core.Handler)",
            "io.vertx.core.impl.WorkerContext:void executeFromIO(io.vertx.core.impl.ContextTask)",
            "io.vertx.core.net.impl.NetServerImpl:void addListener(java.lang.Runnable)",
            "io.vertx.core.net.impl.NetServerImpl:void runListeners()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void close()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void end()",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void finalize()"
        ]
    },
    "io.vertx.core.http.impl.WebSocketImplBase:void cleanupHandlers()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.http.impl.WebSocketImplBase:void close()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()"
        ]
    },
    "io.vertx.core.impl.HAManager$1:void nodeLeft(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpClient createHttpClient()"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.datagram.DatagramSocket createDatagramSocket()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$connected$118(java.lang.Void)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_connected_118__89:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$connected$117(java.lang.Throwable)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_connected_117__88:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$null$115(java.lang.Long)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_null_115__91:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void lambda$connect$114(io.vertx.core.AsyncResult)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_connect_114__86:void handle(java.lang.Object)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetClient createNetClient(io.vertx.core.net.NetClientOptions)"
        ]
    },
    "io.vertx.core.net.impl.NetClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions,boolean)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.net.impl.ServerID)",
            "io.vertx.core.net.impl.NetClientImpl:void <init>(io.vertx.core.impl.VertxInternal,io.vertx.core.net.NetClientOptions)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetServer createNetServer()"
        ]
    },
    "io.vertx.core.shareddata.impl.SharedDataImpl:void getLock(java.lang.String,io.vertx.core.Handler)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.Starter:void runCommandLine(java.lang.String)": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpServer createHttpServer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void end()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.streams.WriteStream:void end(java.lang.Object)"
        ]
    },
    "io.vertx.core.eventbus.impl.MessageProducerImpl:void finalize()": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void <init>(io.vertx.core.Vertx,java.lang.String,boolean,io.vertx.core.eventbus.DeliveryOptions)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.http.HttpClient createHttpClient()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_connected_118__89:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_connected_117__88:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_null_115__91:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder$lambda_connect_114__86:void handle(java.lang.Object)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.datagram.impl.DatagramChannelFutureListener:void notifyHandler(io.netty.channel.ChannelFuture)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void handlePacket(io.vertx.core.datagram.DatagramPacket)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$notifyException$12(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.datagram.impl.DatagramSocketImpl:void lambda$listen$11(io.vertx.core.net.SocketAddress,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.datagram.impl.PacketWriteStreamImpl:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$3:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$ConvertingHandler:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl$HandlerAdapter:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$350(io.vertx.core.Handler,java.net.UnknownHostException,java.lang.Void)",
            "io.vertx.core.dns.impl.DnsClientImpl:void lambda$reverseLookup$349(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$removeSub$134(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$close$128(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$127(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$start$126(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void lambda$null$125(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.BodyReadStream:void lambda$handler$196(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl$HandlerEntry:void close(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl$ReplySendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl:void next()",
            "io.vertx.core.eventbus.impl.EventBusImpl:void start(io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void addRegistration(boolean,java.lang.String,boolean,boolean,io.vertx.core.Handler)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$callCompletionHandlerAsync$122(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$convertHandler$121(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.EventBusImpl:void lambda$close$120(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void sendAsyncResultFailure(io.vertx.core.eventbus.ReplyFailure,java.lang.String)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handle(io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void handleMessage(io.vertx.core.Handler,io.vertx.core.eventbus.Message)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$null$148(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$setResult$147(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$callCompletionHandlerAsync$146(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$doUnregister$145(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.eventbus.impl.HandlerRegistration:void lambda$completionHandler$144(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.eventbus.impl.MessageProducerImpl:void lambda$doReceiveCredit$354(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$failed$223(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$1:void lambda$completed$222(java.nio.ByteBuffer,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$failed$225(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl$2:void lambda$done$224(java.nio.ByteBuffer,io.vertx.core.buffer.Buffer,int,io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void checkDrained()",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.file.impl.AsyncFileImpl:void handleEnd()",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doClose$226(io.vertx.core.Handler,io.vertx.core.Future,java.lang.Void)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$219(java.util.concurrent.atomic.AtomicInteger,java.nio.ByteBuffer[],io.vertx.core.Handler,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.AsyncResult)",
            "io.vertx.core.file.impl.AsyncFileImpl:void lambda$doWrite$218(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handshakeComplete$63(io.vertx.core.http.impl.WebSocketImpl)",
            "io.vertx.core.http.impl.ClientConnection$HandshakeInboundHandler:void lambda$handleException$62(io.netty.handler.codec.http.websocketx.WebSocketHandshakeException)",
            "io.vertx.core.http.impl.ClientConnection:void lambda$toWebSocket$61(io.netty.util.concurrent.Future)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void getConnection(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$createNewConnection$67(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$responseEnded$66(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$requestEnded$65(io.vertx.core.http.impl.ConnectionManager$Waiter,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager$ConnQueue:void lambda$getConnection$64(io.vertx.core.Handler,io.vertx.core.http.impl.ClientConnection,java.lang.Void)",
            "io.vertx.core.http.impl.ConnectionManager:void getConnection(int,java.lang.String,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.impl.ContextImpl,java.util.function.BooleanSupplier)",
            "io.vertx.core.http.impl.HttpClientImpl$WebSocketStreamImpl:void lambda$handler$75(io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.WebSocket)",
            "io.vertx.core.http.impl.HttpClientImpl:void createConn(io.vertx.core.impl.ContextImpl,int,java.lang.String,io.netty.channel.Channel,io.vertx.core.Handler,io.vertx.core.Handler,io.vertx.core.http.impl.ConnectionLifeCycleListener)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$connectionFailed$74(io.vertx.core.http.impl.ConnectionLifeCycleListener,io.netty.channel.Channel,io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientImpl:void lambda$new$68(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void handleResponse(io.vertx.core.http.impl.HttpClientResponseImpl)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$connectHandler$81(io.vertx.core.Handler,io.vertx.core.http.HttpClientResponse)",
            "io.vertx.core.http.impl.HttpClientRequestImpl:void lambda$exceptionHandler$78(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpClientResponseImpl$BodyHandler:void notifyHandler(io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleChunk(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleEnd(io.netty.handler.codec.http.LastHttpContent)",
            "io.vertx.core.http.impl.HttpClientResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void doReceiveData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyEndHandler()",
            "io.vertx.core.http.impl.HttpServerFileUploadImpl:void notifyExceptionHandler(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$executeCloseDone$24(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$null$21(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerImpl:void lambda$listen$20(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerRequestImpl$DataFactory:io.netty.handler.codec.http.multipart.FileUpload createFileUpload(io.netty.handler.codec.http.HttpRequest,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleData(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleEnd()",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerRequestImpl:void lambda$bodyHandler$52(io.vertx.core.Handler,io.vertx.core.buffer.Buffer,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void end0(io.netty.buffer.ByteBuf)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void doSendFile(java.lang.String,long,long,io.vertx.core.Handler)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleDrained()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void handleClosed()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void prepareHeaders()",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$null$56(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$55(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.http.impl.HttpServerResponseImpl:void lambda$doSendFile$54(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.http.impl.ServerConnection:void handleRequest(io.vertx.core.http.impl.HttpServerRequestImpl,io.vertx.core.http.impl.HttpServerResponseImpl)",
            "io.vertx.core.http.impl.ServerConnection:void handleWebsocketConnect(io.vertx.core.http.impl.ServerWebSocketImpl)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)",
            "io.vertx.core.http.impl.WebSocketImplBase:void writable()",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.http.impl.WebSocketImplBase:void handleClosed()",
            "io.vertx.core.impl.launcher.commands.RunCommand:void stopBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.RunCommand:void startAsBackgroundApplication(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$createHandler$348(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.VertxIsolatedDeployer:void lambda$undeploy$347(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.launcher.commands.Watcher:io.vertx.core.impl.launcher.commands.Watcher watch()",
            "io.vertx.core.impl.launcher.commands.Watcher:void close()",
            "io.vertx.core.impl.launcher.commands.Watcher:void trigger()",
            "io.vertx.core.impl.launcher.commands.Watcher:void executeUserCommand(io.vertx.core.Handler)",
            "io.vertx.core.impl.launcher.commands.Watcher:void lambda$null$200(java.lang.Void)",
            "io.vertx.core.impl.ContextImpl:void runCloseHooks(io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$wrapTask$16(boolean,io.vertx.core.impl.ContextTask,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$executeBlocking$15(io.vertx.core.Handler,io.vertx.core.impl.Action,io.vertx.core.Handler)",
            "io.vertx.core.impl.ContextImpl:void lambda$runCloseHooks$13(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler,java.util.concurrent.atomic.AtomicInteger,int,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.DeploymentManager:void lambda$reportResult$157(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$155(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.DeploymentManager:void lambda$undeployAll$154(java.util.concurrent.atomic.AtomicInteger,java.util.Set,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.FileResolver:void deleteCacheDir(io.vertx.core.Handler)",
            "io.vertx.core.impl.FutureImpl:void checkCallHandler()",
            "io.vertx.core.impl.HAManager:void lambda$doDeployVerticle$137(java.lang.String,io.vertx.core.DeploymentOptions,io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.impl.VertxImpl$1$1:void lambda$operationComplete$276(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void handle(java.lang.Void)",
            "io.vertx.core.impl.VertxImpl$InternalTimerHandler:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl$TimeoutStreamImpl:void handle(java.lang.Long)",
            "io.vertx.core.impl.VertxImpl:void close(io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions,io.vertx.core.Handler)",
            "io.vertx.core.impl.VertxImpl:void lambda$closeClusterManager$270(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$null$268(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.impl.VertxImpl:void lambda$createAndStartEventBus$267(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.ConnectionBase:void handleException(java.lang.Throwable)",
            "io.vertx.core.net.impl.ConnectionBase:void handleClosed()",
            "io.vertx.core.net.impl.ConnectionBase:void lambda$null$8(io.vertx.core.Handler,io.netty.util.concurrent.Future)",
            "io.vertx.core.net.impl.NetClientImpl:void doFailed(io.vertx.core.Handler,java.lang.Throwable)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$connected$112(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetClientImpl:void lambda$new$107(io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetServerImpl$2:void handle(io.vertx.core.AsyncResult)",
            "io.vertx.core.net.impl.NetServerImpl$ServerHandler:void lambda$connected$37(io.vertx.core.net.impl.NetSocketImpl,io.vertx.core.net.impl.HandlerHolder)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$executeCloseDone$35(io.vertx.core.Handler,java.lang.Exception,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$null$32(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.net.impl.NetServerImpl:void lambda$listen$31(io.vertx.core.Handler,java.lang.Throwable,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void handleClosed()",
            "io.vertx.core.net.impl.NetSocketImpl:void handleDataReceived(io.vertx.core.buffer.Buffer)",
            "io.vertx.core.net.impl.NetSocketImpl:void callDrainHandler()",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$45(io.netty.util.concurrent.Future,io.vertx.core.Handler)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$sendFile$44(io.vertx.core.Handler,java.io.IOException,java.lang.Void)",
            "io.vertx.core.net.impl.NetSocketImpl:void lambda$null$42(io.vertx.core.Handler,io.vertx.core.AsyncResult,java.lang.Void)",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseDelimited()",
            "io.vertx.core.parsetools.impl.RecordParserImpl:void parseFixed()",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$compareAndSet$173(io.vertx.core.Handler,long,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndAdd$172(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$addAndGet$171(io.vertx.core.Handler,long,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$decrementAndGet$170(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$getAndIncrement$169(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$incrementAndGet$168(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousCounter:void lambda$get$167(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock$LockWaiter:void lambda$timedOut$213(java.lang.Void)",
            "io.vertx.core.shareddata.impl.AsynchronousLock:void lambda$lockAcquired$211(io.vertx.core.Handler,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getLocalCounter$210(io.vertx.core.Handler,io.vertx.core.shareddata.Counter,java.lang.Void)",
            "io.vertx.core.shareddata.impl.SharedDataImpl:void lambda$getClusterWideMap$209(io.vertx.core.Handler,io.vertx.core.AsyncResult)",
            "io.vertx.core.Starter:void lambda$createLoggingHandler$216(java.lang.String,io.vertx.core.Handler,io.vertx.core.AsyncResult)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetClient createNetClient(io.vertx.core.net.NetClientOptions)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetClient createNetClient()"
        ]
    },
    "io.vertx.core.eventbus.impl.clustered.ConnectionHolder:void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus,io.vertx.core.net.impl.ServerID)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendRemote(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.MessageImpl)"
        ]
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetServer createNetServer()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.impl.VertxImpl:io.vertx.core.net.NetClient createNetClient()": {
        "isVulRoot": false,
        "vulCaller": []
    },
    "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendRemote(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.MessageImpl)": {
        "isVulRoot": false,
        "vulCaller": [
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void sendToSubs(io.vertx.core.spi.cluster.ChoosableIterable,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)",
            "io.vertx.core.eventbus.impl.clustered.ClusteredEventBus:void clusteredSendReply(io.vertx.core.net.impl.ServerID,io.vertx.core.eventbus.impl.EventBusImpl$SendContextImpl)"
        ]
    }
}